ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"list.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.vListInitialise,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	vListInitialise
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	vListInitialise:
  27              	.LFB5:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/list.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    is the industry's de facto standard.                               *
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/list.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  73:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "list.h"
  74:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  76:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  77:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  78:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  80:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  29              		.loc 1 80 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  81:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 3


  82:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  83:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	as the only list entry. */
  84:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list struc
  35              		.loc 1 84 0
  36 0000 00F10803 		add	r3, r0, #8
  85:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  87:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  88:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  37              		.loc 1 88 0
  38 0004 4FF0FF31 		mov	r1, #-1
  89:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  91:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	when the list is empty. */
  92:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list
  93:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini l
  94:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  95:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  39              		.loc 1 95 0
  40 0008 0022     		movs	r2, #0
  88:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  41              		.loc 1 88 0
  42 000a 8160     		str	r1, [r0, #8]
  84:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  43              		.loc 1 84 0
  44 000c C0E90023 		strd	r2, r3, [r0]
  93:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  45              		.loc 1 93 0
  46 0010 C0E90333 		strd	r3, r3, [r0, #12]
  96:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  98:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  99:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
 100:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
 101:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  47              		.loc 1 101 0
  48 0014 7047     		bx	lr
  49              		.cfi_endproc
  50              	.LFE5:
  52 0016 00BF     		.section	.text.vListInitialiseItem,"ax",%progbits
  53              		.align	1
  54              		.p2align 2,,3
  55              		.global	vListInitialiseItem
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	vListInitialiseItem:
  62              	.LFB6:
 102:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 103:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 104:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
 105:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  63              		.loc 1 105 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 4


  67              		@ link register save eliminated.
  68              	.LVL1:
 106:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
 107:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItem->pvContainer = NULL;
  69              		.loc 1 107 0
  70 0000 0023     		movs	r3, #0
  71 0002 0361     		str	r3, [r0, #16]
 108:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
 110:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
 111:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
 112:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
 113:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  72              		.loc 1 113 0
  73 0004 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE6:
  77 0006 00BF     		.section	.text.vListInsertEnd,"ax",%progbits
  78              		.align	1
  79              		.p2align 2,,3
  80              		.global	vListInsertEnd
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	vListInsertEnd:
  87              	.LFB7:
 114:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 115:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 116:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
 117:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  88              		.loc 1 117 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL2:
 118:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
 119:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 121:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 122:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 123:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 125:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
 127:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
 128:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
 129:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
 130:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 131:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 133:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 134:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 136:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 137:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 5


 138:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
 139:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 140:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 141:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
  94              		.loc 1 141 0
  95 0000 D0E90023 		ldrd	r2, r3, [r0]
 117:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
  96              		.loc 1 117 0
  97 0004 10B4     		push	{r4}
  98              	.LCFI0:
  99              		.cfi_def_cfa_offset 4
 100              		.cfi_offset 4, -4
 130:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 101              		.loc 1 130 0
 102 0006 9C68     		ldr	r4, [r3, #8]
 103 0008 8C60     		str	r4, [r1, #8]
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 104              		.loc 1 135 0
 105 000a 9C68     		ldr	r4, [r3, #8]
 129:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 106              		.loc 1 129 0
 107 000c 4B60     		str	r3, [r1, #4]
 108              		.loc 1 141 0
 109 000e 0132     		adds	r2, r2, #1
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 110              		.loc 1 135 0
 111 0010 6160     		str	r1, [r4, #4]
 136:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 112              		.loc 1 136 0
 113 0012 9960     		str	r1, [r3, #8]
 142:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 114              		.loc 1 142 0
 115 0014 5DF8044B 		ldr	r4, [sp], #4
 116              	.LCFI1:
 117              		.cfi_restore 4
 118              		.cfi_def_cfa_offset 0
 139:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 119              		.loc 1 139 0
 120 0018 0861     		str	r0, [r1, #16]
 141:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 121              		.loc 1 141 0
 122 001a 0260     		str	r2, [r0]
 123              		.loc 1 142 0
 124 001c 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE7:
 128 001e 00BF     		.section	.text.vListInsert,"ax",%progbits
 129              		.align	1
 130              		.p2align 2,,3
 131              		.global	vListInsert
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	vListInsert:
 138              	.LFB8:
 143:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 6


 144:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 146:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 139              		.loc 1 146 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL3:
 145 0000 30B4     		push	{r4, r5}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 5, -4
 147:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 148:Middlewares/Third_Party/FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 150              		.loc 1 148 0
 151 0002 0D68     		ldr	r5, [r1]
 152              	.LVL4:
 149:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 151:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 152:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 153:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 154:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 155:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 157:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 159:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCB's which are
 160:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 161:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 162:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 163:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 164:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 153              		.loc 1 164 0
 154 0004 6B1C     		adds	r3, r5, #1
 155 0006 11D0     		beq	.L12
 165:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 167:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 168:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 169:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 170:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 171:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 172:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		listed below.  In addition see http://www.freertos.org/FAQHelp.html for
 173:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 174:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		http://www.freertos.org/a00110.html#configASSERT
 175:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 177:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 178:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 179:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 180:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 181:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 182:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 183:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/a00110.html
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 7


 184:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 186:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 187:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 188:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 189:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 190:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		**********************************************************************/
 191:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 156              		.loc 1 192 0
 157 0008 00F10802 		add	r2, r0, #8
 158              	.LVL5:
 159 000c 00E0     		b	.L9
 160              	.L10:
 161 000e 1A46     		mov	r2, r3
 162              	.LVL6:
 163              	.L9:
 164              		.loc 1 192 0 is_stmt 0 discriminator 1
 165 0010 5368     		ldr	r3, [r2, #4]
 166 0012 1C68     		ldr	r4, [r3]
 167 0014 AC42     		cmp	r4, r5
 168 0016 FAD9     		bls	.L10
 169              	.L8:
 193:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 194:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 195:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			insertion position. */
 196:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		}
 197:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 198:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 199:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 200:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 201:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 202:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 203:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 204:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 205:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	item later. */
 206:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 207:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 208:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 170              		.loc 1 208 0 is_stmt 1
 171 0018 0468     		ldr	r4, [r0]
 199:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 172              		.loc 1 199 0
 173 001a 4B60     		str	r3, [r1, #4]
 174              		.loc 1 208 0
 175 001c 0134     		adds	r4, r4, #1
 200:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 176              		.loc 1 200 0
 177 001e 9960     		str	r1, [r3, #8]
 201:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 178              		.loc 1 201 0
 179 0020 8A60     		str	r2, [r1, #8]
 202:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 180              		.loc 1 202 0
 181 0022 5160     		str	r1, [r2, #4]
 206:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 182              		.loc 1 206 0
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 8


 183 0024 0861     		str	r0, [r1, #16]
 184              		.loc 1 208 0
 185 0026 0460     		str	r4, [r0]
 209:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 186              		.loc 1 209 0
 187 0028 30BC     		pop	{r4, r5}
 188              	.LCFI3:
 189              		.cfi_remember_state
 190              		.cfi_restore 5
 191              		.cfi_restore 4
 192              		.cfi_def_cfa_offset 0
 193              	.LVL7:
 194 002a 7047     		bx	lr
 195              	.LVL8:
 196              	.L12:
 197              	.LCFI4:
 198              		.cfi_restore_state
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 199              		.loc 1 166 0
 200 002c 0269     		ldr	r2, [r0, #16]
 201              	.LVL9:
 202 002e 5368     		ldr	r3, [r2, #4]
 203 0030 F2E7     		b	.L8
 204              		.cfi_endproc
 205              	.LFE8:
 207 0032 00BF     		.section	.text.uxListRemove,"ax",%progbits
 208              		.align	1
 209              		.p2align 2,,3
 210              		.global	uxListRemove
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	uxListRemove:
 217              	.LFB9:
 210:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 211:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 213:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 218              		.loc 1 213 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL10:
 214:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 215:Middlewares/Third_Party/FreeRTOS/Source/list.c **** item. */
 216:Middlewares/Third_Party/FreeRTOS/Source/list.c **** List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
 217:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 218:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 224              		.loc 1 218 0
 225 0000 4368     		ldr	r3, [r0, #4]
 226 0002 8168     		ldr	r1, [r0, #8]
 216:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 227              		.loc 1 216 0
 228 0004 0269     		ldr	r2, [r0, #16]
 229              	.LVL11:
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 9


 213:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 230              		.loc 1 213 0
 231 0006 10B4     		push	{r4}
 232              	.LCFI5:
 233              		.cfi_def_cfa_offset 4
 234              		.cfi_offset 4, -4
 235              		.loc 1 218 0
 236 0008 9960     		str	r1, [r3, #8]
 219:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 237              		.loc 1 219 0
 238 000a 8168     		ldr	r1, [r0, #8]
 220:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 222:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 223:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 225:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 239              		.loc 1 225 0
 240 000c 5468     		ldr	r4, [r2, #4]
 219:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 241              		.loc 1 219 0
 242 000e 4B60     		str	r3, [r1, #4]
 226:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 227:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 228:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 229:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 230:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 231:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 232:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 233:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 234:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pvContainer = NULL;
 235:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 243              		.loc 1 235 0
 244 0010 1368     		ldr	r3, [r2]
 225:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 245              		.loc 1 225 0
 246 0012 8442     		cmp	r4, r0
 227:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 247              		.loc 1 227 0
 248 0014 08BF     		it	eq
 249 0016 5160     		streq	r1, [r2, #4]
 250              		.loc 1 235 0
 251 0018 013B     		subs	r3, r3, #1
 234:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 252              		.loc 1 234 0
 253 001a 0021     		movs	r1, #0
 254 001c 0161     		str	r1, [r0, #16]
 236:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 238:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 255              		.loc 1 238 0
 256 001e 5DF8044B 		ldr	r4, [sp], #4
 257              	.LCFI6:
 258              		.cfi_restore 4
 259              		.cfi_def_cfa_offset 0
 235:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 260              		.loc 1 235 0
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 10


 261 0022 1360     		str	r3, [r2]
 262              		.loc 1 238 0
 263 0024 1846     		mov	r0, r3
 264              	.LVL12:
 265 0026 7047     		bx	lr
 266              		.cfi_endproc
 267              	.LFE9:
 269              		.text
 270              	.Letext0:
 271              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 272              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 273              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 274              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 275              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 276              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 277              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 278              		.file 9 "Inc/FreeRTOSConfig.h"
 279              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 280              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
ARM GAS  C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 list.c
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:18     .text.vListInitialise:00000000 $t
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:26     .text.vListInitialise:00000000 vListInitialise
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:53     .text.vListInitialiseItem:00000000 $t
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:61     .text.vListInitialiseItem:00000000 vListInitialiseItem
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:78     .text.vListInsertEnd:00000000 $t
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:86     .text.vListInsertEnd:00000000 vListInsertEnd
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:129    .text.vListInsert:00000000 $t
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:137    .text.vListInsert:00000000 vListInsert
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:208    .text.uxListRemove:00000000 $t
C:\Users\ALEXWO~1\AppData\Local\Temp\cclD7c0a.s:216    .text.uxListRemove:00000000 uxListRemove

NO UNDEFINED SYMBOLS
