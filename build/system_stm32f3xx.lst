ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f3xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemInit:
  27              	.LFB126:
  28              		.file 1 "Src/system_stm32f3xx.c"
   1:Src/system_stm32f3xx.c **** /**
   2:Src/system_stm32f3xx.c ****   ******************************************************************************
   3:Src/system_stm32f3xx.c ****   * @file    system_stm32f3xx.c
   4:Src/system_stm32f3xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f3xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:Src/system_stm32f3xx.c ****   *
   7:Src/system_stm32f3xx.c ****   * 1. This file provides two functions and one global variable to be called from
   8:Src/system_stm32f3xx.c ****   *    user application:
   9:Src/system_stm32f3xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Src/system_stm32f3xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32f3xx.c ****   *                      the "startup_stm32f3xx.s" file.
  12:Src/system_stm32f3xx.c ****   *
  13:Src/system_stm32f3xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32f3xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32f3xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32f3xx.c ****   *
  17:Src/system_stm32f3xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32f3xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32f3xx.c ****   *                                 during program execution.
  20:Src/system_stm32f3xx.c ****   *
  21:Src/system_stm32f3xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  22:Src/system_stm32f3xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f3xx.s" file, to
  23:Src/system_stm32f3xx.c ****   *    configure the system clock before to branch to main program.
  24:Src/system_stm32f3xx.c ****   *
  25:Src/system_stm32f3xx.c ****   * 3. This file configures the system clock as follows:
  26:Src/system_stm32f3xx.c ****   *=============================================================================
  27:Src/system_stm32f3xx.c ****   *                         Supported STM32F3xx device
  28:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  29:Src/system_stm32f3xx.c ****   *        System Clock source                    | HSI
  30:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 2


  31:Src/system_stm32f3xx.c ****   *        SYSCLK(Hz)                             | 8000000
  32:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  33:Src/system_stm32f3xx.c ****   *        HCLK(Hz)                               | 8000000
  34:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  35:Src/system_stm32f3xx.c ****   *        AHB Prescaler                          | 1
  36:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  37:Src/system_stm32f3xx.c ****   *        APB2 Prescaler                         | 1
  38:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  39:Src/system_stm32f3xx.c ****   *        APB1 Prescaler                         | 1
  40:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  41:Src/system_stm32f3xx.c ****   *        USB Clock                              | DISABLE
  42:Src/system_stm32f3xx.c ****   *-----------------------------------------------------------------------------
  43:Src/system_stm32f3xx.c ****   *=============================================================================
  44:Src/system_stm32f3xx.c ****   ******************************************************************************
  45:Src/system_stm32f3xx.c ****   * @attention
  46:Src/system_stm32f3xx.c ****   *
  47:Src/system_stm32f3xx.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  48:Src/system_stm32f3xx.c ****   *
  49:Src/system_stm32f3xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  50:Src/system_stm32f3xx.c ****   * are permitted provided that the following conditions are met:
  51:Src/system_stm32f3xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  52:Src/system_stm32f3xx.c ****   *      this list of conditions and the following disclaimer.
  53:Src/system_stm32f3xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  54:Src/system_stm32f3xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  55:Src/system_stm32f3xx.c ****   *      and/or other materials provided with the distribution.
  56:Src/system_stm32f3xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  57:Src/system_stm32f3xx.c ****   *      may be used to endorse or promote products derived from this software
  58:Src/system_stm32f3xx.c ****   *      without specific prior written permission.
  59:Src/system_stm32f3xx.c ****   *
  60:Src/system_stm32f3xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  61:Src/system_stm32f3xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  62:Src/system_stm32f3xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  63:Src/system_stm32f3xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  64:Src/system_stm32f3xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  65:Src/system_stm32f3xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  66:Src/system_stm32f3xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  67:Src/system_stm32f3xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  68:Src/system_stm32f3xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  69:Src/system_stm32f3xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  70:Src/system_stm32f3xx.c ****   *
  71:Src/system_stm32f3xx.c ****   ******************************************************************************
  72:Src/system_stm32f3xx.c ****   */
  73:Src/system_stm32f3xx.c **** 
  74:Src/system_stm32f3xx.c **** /** @addtogroup CMSIS
  75:Src/system_stm32f3xx.c ****   * @{
  76:Src/system_stm32f3xx.c ****   */
  77:Src/system_stm32f3xx.c **** 
  78:Src/system_stm32f3xx.c **** /** @addtogroup stm32f3xx_system
  79:Src/system_stm32f3xx.c ****   * @{
  80:Src/system_stm32f3xx.c ****   */
  81:Src/system_stm32f3xx.c **** 
  82:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Includes
  83:Src/system_stm32f3xx.c ****   * @{
  84:Src/system_stm32f3xx.c ****   */
  85:Src/system_stm32f3xx.c **** 
  86:Src/system_stm32f3xx.c **** #include "stm32f3xx.h"
  87:Src/system_stm32f3xx.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 3


  88:Src/system_stm32f3xx.c **** /**
  89:Src/system_stm32f3xx.c ****   * @}
  90:Src/system_stm32f3xx.c ****   */
  91:Src/system_stm32f3xx.c **** 
  92:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_TypesDefinitions
  93:Src/system_stm32f3xx.c ****   * @{
  94:Src/system_stm32f3xx.c ****   */
  95:Src/system_stm32f3xx.c **** 
  96:Src/system_stm32f3xx.c **** /**
  97:Src/system_stm32f3xx.c ****   * @}
  98:Src/system_stm32f3xx.c ****   */
  99:Src/system_stm32f3xx.c **** 
 100:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Defines
 101:Src/system_stm32f3xx.c ****   * @{
 102:Src/system_stm32f3xx.c ****   */
 103:Src/system_stm32f3xx.c **** #if !defined  (HSE_VALUE) 
 104:Src/system_stm32f3xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz.
 105:Src/system_stm32f3xx.c ****                                                 This value can be provided and adapted by the user 
 106:Src/system_stm32f3xx.c **** #endif /* HSE_VALUE */
 107:Src/system_stm32f3xx.c **** 
 108:Src/system_stm32f3xx.c **** #if !defined  (HSI_VALUE)
 109:Src/system_stm32f3xx.c ****   #define HSI_VALUE    ((uint32_t)8000000) /*!< Default value of the Internal oscillator in Hz.
 110:Src/system_stm32f3xx.c ****                                                 This value can be provided and adapted by the user 
 111:Src/system_stm32f3xx.c **** #endif /* HSI_VALUE */
 112:Src/system_stm32f3xx.c **** 
 113:Src/system_stm32f3xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 114:Src/system_stm32f3xx.c ****      Internal SRAM. */
 115:Src/system_stm32f3xx.c **** /* #define VECT_TAB_SRAM */
 116:Src/system_stm32f3xx.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field.
 117:Src/system_stm32f3xx.c ****                                   This value must be a multiple of 0x200. */
 118:Src/system_stm32f3xx.c **** /**
 119:Src/system_stm32f3xx.c ****   * @}
 120:Src/system_stm32f3xx.c ****   */
 121:Src/system_stm32f3xx.c **** 
 122:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Macros
 123:Src/system_stm32f3xx.c ****   * @{
 124:Src/system_stm32f3xx.c ****   */
 125:Src/system_stm32f3xx.c **** 
 126:Src/system_stm32f3xx.c **** /**
 127:Src/system_stm32f3xx.c ****   * @}
 128:Src/system_stm32f3xx.c ****   */
 129:Src/system_stm32f3xx.c **** 
 130:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Variables
 131:Src/system_stm32f3xx.c ****   * @{
 132:Src/system_stm32f3xx.c ****   */
 133:Src/system_stm32f3xx.c ****   /* This variable is updated in three ways:
 134:Src/system_stm32f3xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 135:Src/system_stm32f3xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 136:Src/system_stm32f3xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 137:Src/system_stm32f3xx.c ****          Note: If you use this function to configure the system clock there is no need to
 138:Src/system_stm32f3xx.c ****                call the 2 first functions listed above, since SystemCoreClock variable is 
 139:Src/system_stm32f3xx.c ****                updated automatically.
 140:Src/system_stm32f3xx.c ****   */
 141:Src/system_stm32f3xx.c **** uint32_t SystemCoreClock = 8000000;
 142:Src/system_stm32f3xx.c **** 
 143:Src/system_stm32f3xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 144:Src/system_stm32f3xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 4


 145:Src/system_stm32f3xx.c **** 
 146:Src/system_stm32f3xx.c **** /**
 147:Src/system_stm32f3xx.c ****   * @}
 148:Src/system_stm32f3xx.c ****   */
 149:Src/system_stm32f3xx.c **** 
 150:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_FunctionPrototypes
 151:Src/system_stm32f3xx.c ****   * @{
 152:Src/system_stm32f3xx.c ****   */
 153:Src/system_stm32f3xx.c **** 
 154:Src/system_stm32f3xx.c **** /**
 155:Src/system_stm32f3xx.c ****   * @}
 156:Src/system_stm32f3xx.c ****   */
 157:Src/system_stm32f3xx.c **** 
 158:Src/system_stm32f3xx.c **** /** @addtogroup STM32F3xx_System_Private_Functions
 159:Src/system_stm32f3xx.c ****   * @{
 160:Src/system_stm32f3xx.c ****   */
 161:Src/system_stm32f3xx.c **** 
 162:Src/system_stm32f3xx.c **** /**
 163:Src/system_stm32f3xx.c ****   * @brief  Setup the microcontroller system
 164:Src/system_stm32f3xx.c ****   *         Initialize the FPU setting, vector table location and the PLL configuration is reset.
 165:Src/system_stm32f3xx.c ****   * @param  None
 166:Src/system_stm32f3xx.c ****   * @retval None
 167:Src/system_stm32f3xx.c ****   */
 168:Src/system_stm32f3xx.c **** void SystemInit(void)
 169:Src/system_stm32f3xx.c **** {
  29              		.loc 1 169 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 170:Src/system_stm32f3xx.c ****   /* FPU settings ------------------------------------------------------------*/
 171:Src/system_stm32f3xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 172:Src/system_stm32f3xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 172 0
  35 0000 1749     		ldr	r1, .L4
 173:Src/system_stm32f3xx.c ****   #endif
 174:Src/system_stm32f3xx.c **** 
 175:Src/system_stm32f3xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 176:Src/system_stm32f3xx.c ****   /* Set HSION bit */
 177:Src/system_stm32f3xx.c ****   RCC->CR |= 0x00000001U;
  36              		.loc 1 177 0
  37 0002 184B     		ldr	r3, .L4+4
 178:Src/system_stm32f3xx.c **** 
 179:Src/system_stm32f3xx.c ****   /* Reset CFGR register */
 180:Src/system_stm32f3xx.c ****   RCC->CFGR &= 0xF87FC00CU;
  38              		.loc 1 180 0
  39 0004 184A     		ldr	r2, .L4+8
 181:Src/system_stm32f3xx.c **** 
 182:Src/system_stm32f3xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 183:Src/system_stm32f3xx.c ****   RCC->CR &= 0xFEF6FFFFU;
 184:Src/system_stm32f3xx.c **** 
 185:Src/system_stm32f3xx.c ****   /* Reset HSEBYP bit */
 186:Src/system_stm32f3xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 187:Src/system_stm32f3xx.c **** 
 188:Src/system_stm32f3xx.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
 189:Src/system_stm32f3xx.c ****   RCC->CFGR &= 0xFF80FFFFU;
 190:Src/system_stm32f3xx.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 5


 191:Src/system_stm32f3xx.c ****   /* Reset PREDIV1[3:0] bits */
 192:Src/system_stm32f3xx.c ****   RCC->CFGR2 &= 0xFFFFFFF0U;
 193:Src/system_stm32f3xx.c **** 
 194:Src/system_stm32f3xx.c ****   /* Reset USARTSW[1:0], I2CSW and TIMs bits */
 195:Src/system_stm32f3xx.c ****   RCC->CFGR3 &= 0xFF00FCCCU;
  40              		.loc 1 195 0
  41 0006 1948     		ldr	r0, .L4+12
 169:Src/system_stm32f3xx.c ****   /* FPU settings ------------------------------------------------------------*/
  42              		.loc 1 169 0
  43 0008 10B4     		push	{r4}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 4
  46              		.cfi_offset 4, -4
 172:Src/system_stm32f3xx.c ****   #endif
  47              		.loc 1 172 0
  48 000a D1F88840 		ldr	r4, [r1, #136]
  49 000e 44F47004 		orr	r4, r4, #15728640
  50 0012 C1F88840 		str	r4, [r1, #136]
 177:Src/system_stm32f3xx.c **** 
  51              		.loc 1 177 0
  52 0016 1C68     		ldr	r4, [r3]
  53 0018 44F00104 		orr	r4, r4, #1
  54 001c 1C60     		str	r4, [r3]
 180:Src/system_stm32f3xx.c **** 
  55              		.loc 1 180 0
  56 001e 5C68     		ldr	r4, [r3, #4]
  57 0020 2240     		ands	r2, r2, r4
  58 0022 5A60     		str	r2, [r3, #4]
 183:Src/system_stm32f3xx.c **** 
  59              		.loc 1 183 0
  60 0024 1A68     		ldr	r2, [r3]
  61 0026 22F08472 		bic	r2, r2, #17301504
  62 002a 22F48032 		bic	r2, r2, #65536
  63 002e 1A60     		str	r2, [r3]
 186:Src/system_stm32f3xx.c **** 
  64              		.loc 1 186 0
  65 0030 1A68     		ldr	r2, [r3]
  66 0032 22F48022 		bic	r2, r2, #262144
  67 0036 1A60     		str	r2, [r3]
 189:Src/system_stm32f3xx.c **** 
  68              		.loc 1 189 0
  69 0038 5A68     		ldr	r2, [r3, #4]
  70 003a 22F4FE02 		bic	r2, r2, #8323072
  71 003e 5A60     		str	r2, [r3, #4]
 192:Src/system_stm32f3xx.c **** 
  72              		.loc 1 192 0
  73 0040 DA6A     		ldr	r2, [r3, #44]
  74 0042 22F00F02 		bic	r2, r2, #15
  75 0046 DA62     		str	r2, [r3, #44]
  76              		.loc 1 195 0
  77 0048 1A6B     		ldr	r2, [r3, #48]
 196:Src/system_stm32f3xx.c **** 
 197:Src/system_stm32f3xx.c ****   /* Disable all interrupts */
 198:Src/system_stm32f3xx.c ****   RCC->CIR = 0x00000000U;
  78              		.loc 1 198 0
  79 004a 0024     		movs	r4, #0
 195:Src/system_stm32f3xx.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 6


  80              		.loc 1 195 0
  81 004c 1040     		ands	r0, r0, r2
 199:Src/system_stm32f3xx.c **** 
 200:Src/system_stm32f3xx.c **** #ifdef VECT_TAB_SRAM
 201:Src/system_stm32f3xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 202:Src/system_stm32f3xx.c **** #else
 203:Src/system_stm32f3xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  82              		.loc 1 203 0
  83 004e 4FF00062 		mov	r2, #134217728
 195:Src/system_stm32f3xx.c **** 
  84              		.loc 1 195 0
  85 0052 1863     		str	r0, [r3, #48]
 198:Src/system_stm32f3xx.c **** 
  86              		.loc 1 198 0
  87 0054 9C60     		str	r4, [r3, #8]
  88              		.loc 1 203 0
  89 0056 8A60     		str	r2, [r1, #8]
 204:Src/system_stm32f3xx.c **** #endif
 205:Src/system_stm32f3xx.c **** }
  90              		.loc 1 205 0
  91 0058 5DF8044B 		ldr	r4, [sp], #4
  92              	.LCFI1:
  93              		.cfi_restore 4
  94              		.cfi_def_cfa_offset 0
  95 005c 7047     		bx	lr
  96              	.L5:
  97 005e 00BF     		.align	2
  98              	.L4:
  99 0060 00ED00E0 		.word	-536810240
 100 0064 00100240 		.word	1073876992
 101 0068 0CC07FF8 		.word	-125845492
 102 006c CCFC00FF 		.word	-16712500
 103              		.cfi_endproc
 104              	.LFE126:
 106              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 107              		.align	1
 108              		.p2align 2,,3
 109              		.global	SystemCoreClockUpdate
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	SystemCoreClockUpdate:
 116              	.LFB127:
 206:Src/system_stm32f3xx.c **** 
 207:Src/system_stm32f3xx.c **** /**
 208:Src/system_stm32f3xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 209:Src/system_stm32f3xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 210:Src/system_stm32f3xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 211:Src/system_stm32f3xx.c ****   *         other parameters.
 212:Src/system_stm32f3xx.c ****   *
 213:Src/system_stm32f3xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 214:Src/system_stm32f3xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 215:Src/system_stm32f3xx.c ****   *         based on this variable will be incorrect.
 216:Src/system_stm32f3xx.c ****   *
 217:Src/system_stm32f3xx.c ****   * @note   - The system frequency computed by this function is not the real
 218:Src/system_stm32f3xx.c ****   *           frequency in the chip. It is calculated based on the predefined
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 7


 219:Src/system_stm32f3xx.c ****   *           constant and the selected clock source:
 220:Src/system_stm32f3xx.c ****   *
 221:Src/system_stm32f3xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 222:Src/system_stm32f3xx.c ****   *
 223:Src/system_stm32f3xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 224:Src/system_stm32f3xx.c ****   *
 225:Src/system_stm32f3xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 226:Src/system_stm32f3xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 227:Src/system_stm32f3xx.c ****   *
 228:Src/system_stm32f3xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f3xx_hal.h file (default value
 229:Src/system_stm32f3xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 230:Src/system_stm32f3xx.c ****   *             in voltage and temperature.
 231:Src/system_stm32f3xx.c ****   *
 232:Src/system_stm32f3xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f3xx_hal.h file (default value
 233:Src/system_stm32f3xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 234:Src/system_stm32f3xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 235:Src/system_stm32f3xx.c ****   *              have wrong result.
 236:Src/system_stm32f3xx.c ****   *
 237:Src/system_stm32f3xx.c ****   *         - The result of this function could be not correct when using fractional
 238:Src/system_stm32f3xx.c ****   *           value for HSE crystal.
 239:Src/system_stm32f3xx.c ****   *
 240:Src/system_stm32f3xx.c ****   * @param  None
 241:Src/system_stm32f3xx.c ****   * @retval None
 242:Src/system_stm32f3xx.c ****   */
 243:Src/system_stm32f3xx.c **** void SystemCoreClockUpdate (void)
 244:Src/system_stm32f3xx.c **** {
 117              		.loc 1 244 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL0:
 245:Src/system_stm32f3xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
 246:Src/system_stm32f3xx.c **** 
 247:Src/system_stm32f3xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 248:Src/system_stm32f3xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 123              		.loc 1 248 0
 124 0000 154A     		ldr	r2, .L12
 125 0002 5368     		ldr	r3, [r2, #4]
 126              	.LVL1:
 127 0004 03F00C03 		and	r3, r3, #12
 128              	.LVL2:
 249:Src/system_stm32f3xx.c **** 
 250:Src/system_stm32f3xx.c ****   switch (tmp)
 129              		.loc 1 250 0
 130 0008 042B     		cmp	r3, #4
 131 000a 18D0     		beq	.L11
 132 000c 082B     		cmp	r3, #8
 133 000e 0AD0     		beq	.L9
 134 0010 124B     		ldr	r3, .L12+4
 135              	.LVL3:
 136              	.L8:
 251:Src/system_stm32f3xx.c ****   {
 252:Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 253:Src/system_stm32f3xx.c ****       SystemCoreClock = HSI_VALUE;
 254:Src/system_stm32f3xx.c ****       break;
 255:Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 8


 256:Src/system_stm32f3xx.c ****       SystemCoreClock = HSE_VALUE;
 257:Src/system_stm32f3xx.c ****       break;
 258:Src/system_stm32f3xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 259:Src/system_stm32f3xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 260:Src/system_stm32f3xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
 261:Src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 262:Src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 263:Src/system_stm32f3xx.c **** 
 264:Src/system_stm32f3xx.c **** #if defined (STM32F302xE) || defined (STM32F303xE) || defined (STM32F398xx)
 265:Src/system_stm32f3xx.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 266:Src/system_stm32f3xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 267:Src/system_stm32f3xx.c ****       {
 268:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 269:Src/system_stm32f3xx.c ****         SystemCoreClock = (HSE_VALUE / predivfactor) * pllmull;
 270:Src/system_stm32f3xx.c ****       }
 271:Src/system_stm32f3xx.c ****       else
 272:Src/system_stm32f3xx.c ****       {
 273:Src/system_stm32f3xx.c ****         /* HSI oscillator clock selected as PREDIV1 clock entry */
 274:Src/system_stm32f3xx.c ****         SystemCoreClock = (HSI_VALUE / predivfactor) * pllmull;
 275:Src/system_stm32f3xx.c ****       }
 276:Src/system_stm32f3xx.c **** #else      
 277:Src/system_stm32f3xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSI_DIV2)
 278:Src/system_stm32f3xx.c ****       {
 279:Src/system_stm32f3xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 280:Src/system_stm32f3xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 281:Src/system_stm32f3xx.c ****       }
 282:Src/system_stm32f3xx.c ****       else
 283:Src/system_stm32f3xx.c ****       {
 284:Src/system_stm32f3xx.c ****         predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 285:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 286:Src/system_stm32f3xx.c ****         SystemCoreClock = (HSE_VALUE / predivfactor) * pllmull;
 287:Src/system_stm32f3xx.c ****       }
 288:Src/system_stm32f3xx.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx */
 289:Src/system_stm32f3xx.c ****       break;
 290:Src/system_stm32f3xx.c ****     default: /* HSI used as system clock */
 291:Src/system_stm32f3xx.c ****       SystemCoreClock = HSI_VALUE;
 292:Src/system_stm32f3xx.c ****       break;
 293:Src/system_stm32f3xx.c ****   }
 294:Src/system_stm32f3xx.c ****   /* Compute HCLK clock frequency ----------------*/
 295:Src/system_stm32f3xx.c ****   /* Get HCLK prescaler */
 296:Src/system_stm32f3xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 137              		.loc 1 296 0
 138 0012 114A     		ldr	r2, .L12
 139 0014 1248     		ldr	r0, .L12+8
 140 0016 5268     		ldr	r2, [r2, #4]
 141              	.LVL4:
 297:Src/system_stm32f3xx.c ****   /* HCLK clock frequency */
 298:Src/system_stm32f3xx.c ****   SystemCoreClock >>= tmp;
 142              		.loc 1 298 0
 143 0018 1249     		ldr	r1, .L12+12
 296:Src/system_stm32f3xx.c ****   /* HCLK clock frequency */
 144              		.loc 1 296 0
 145 001a C2F30312 		ubfx	r2, r2, #4, #4
 146              	.LVL5:
 147 001e 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 148              		.loc 1 298 0
 149 0020 D340     		lsrs	r3, r3, r2
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 9


 150 0022 0B60     		str	r3, [r1]
 299:Src/system_stm32f3xx.c **** }
 151              		.loc 1 299 0
 152 0024 7047     		bx	lr
 153              	.LVL6:
 154              	.L9:
 260:Src/system_stm32f3xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 155              		.loc 1 260 0
 156 0026 5368     		ldr	r3, [r2, #4]
 157              	.LVL7:
 261:Src/system_stm32f3xx.c ****       pllmull = ( pllmull >> 18) + 2;
 158              		.loc 1 261 0
 159 0028 5168     		ldr	r1, [r2, #4]
 160              	.LVL8:
 262:Src/system_stm32f3xx.c **** 
 161              		.loc 1 262 0
 162 002a C3F38343 		ubfx	r3, r3, #18, #4
 163              	.LVL9:
 277:Src/system_stm32f3xx.c ****       {
 164              		.loc 1 277 0
 165 002e C903     		lsls	r1, r1, #15
 166              	.LVL10:
 262:Src/system_stm32f3xx.c **** 
 167              		.loc 1 262 0
 168 0030 03F10203 		add	r3, r3, #2
 169              	.LVL11:
 277:Src/system_stm32f3xx.c ****       {
 170              		.loc 1 277 0
 171 0034 05D4     		bmi	.L10
 280:Src/system_stm32f3xx.c ****       }
 172              		.loc 1 280 0
 173 0036 0C4A     		ldr	r2, .L12+16
 174 0038 02FB03F3 		mul	r3, r2, r3
 175              	.LVL12:
 176 003c E9E7     		b	.L8
 177              	.LVL13:
 178              	.L11:
 250:Src/system_stm32f3xx.c ****   {
 179              		.loc 1 250 0
 180 003e 0B4B     		ldr	r3, .L12+20
 181              	.LVL14:
 182 0040 E7E7     		b	.L8
 183              	.LVL15:
 184              	.L10:
 284:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 185              		.loc 1 284 0
 186 0042 D26A     		ldr	r2, [r2, #44]
 187              	.LVL16:
 286:Src/system_stm32f3xx.c ****       }
 188              		.loc 1 286 0
 189 0044 0949     		ldr	r1, .L12+20
 284:Src/system_stm32f3xx.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 190              		.loc 1 284 0
 191 0046 02F00F02 		and	r2, r2, #15
 192              	.LVL17:
 193 004a 0132     		adds	r2, r2, #1
 194              	.LVL18:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 10


 286:Src/system_stm32f3xx.c ****       }
 195              		.loc 1 286 0
 196 004c B1FBF2F2 		udiv	r2, r1, r2
 197              	.LVL19:
 198 0050 03FB02F3 		mul	r3, r3, r2
 199              	.LVL20:
 200 0054 DDE7     		b	.L8
 201              	.L13:
 202 0056 00BF     		.align	2
 203              	.L12:
 204 0058 00100240 		.word	1073876992
 205 005c 00127A00 		.word	8000000
 206 0060 00000000 		.word	.LANCHOR1
 207 0064 00000000 		.word	.LANCHOR0
 208 0068 00093D00 		.word	4000000
 209 006c 001BB700 		.word	12000000
 210              		.cfi_endproc
 211              	.LFE127:
 213              		.global	APBPrescTable
 214              		.global	AHBPrescTable
 215              		.global	SystemCoreClock
 216              		.section	.data.SystemCoreClock,"aw",%progbits
 217              		.align	2
 218              		.set	.LANCHOR0,. + 0
 221              	SystemCoreClock:
 222 0000 00127A00 		.word	8000000
 223              		.section	.rodata.AHBPrescTable,"a",%progbits
 224              		.align	2
 225              		.set	.LANCHOR1,. + 0
 228              	AHBPrescTable:
 229 0000 00       		.byte	0
 230 0001 00       		.byte	0
 231 0002 00       		.byte	0
 232 0003 00       		.byte	0
 233 0004 00       		.byte	0
 234 0005 00       		.byte	0
 235 0006 00       		.byte	0
 236 0007 00       		.byte	0
 237 0008 01       		.byte	1
 238 0009 02       		.byte	2
 239 000a 03       		.byte	3
 240 000b 04       		.byte	4
 241 000c 06       		.byte	6
 242 000d 07       		.byte	7
 243 000e 08       		.byte	8
 244 000f 09       		.byte	9
 245              		.section	.rodata.APBPrescTable,"a",%progbits
 246              		.align	2
 249              	APBPrescTable:
 250 0000 00       		.byte	0
 251 0001 00       		.byte	0
 252 0002 00       		.byte	0
 253 0003 00       		.byte	0
 254 0004 01       		.byte	1
 255 0005 02       		.byte	2
 256 0006 03       		.byte	3
 257 0007 04       		.byte	4
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 11


 258              		.text
 259              	.Letext0:
 260              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 261              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 262              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 263              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 264              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 265              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 266              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 267              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 268              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 269              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f3xx.c
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:18     .text.SystemInit:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:26     .text.SystemInit:00000000 SystemInit
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:99     .text.SystemInit:00000060 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:107    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:115    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:204    .text.SystemCoreClockUpdate:00000058 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:249    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:228    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:221    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:217    .data.SystemCoreClock:00000000 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:224    .rodata.AHBPrescTable:00000000 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccUfMbc2.s:246    .rodata.APBPrescTable:00000000 $d

NO UNDEFINED SYMBOLS
