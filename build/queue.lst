ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.xQueueGenericReset,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	xQueueGenericReset
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	xQueueGenericReset:
  27              	.LFB5:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    is the industry's de facto standard.                               *
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  29              		.loc 1 280 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
  41              		.loc 1 283 0
  42 0002 E0B1     		cbz	r0, .L13
  43 0004 0446     		mov	r4, r0
  44 0006 0D46     		mov	r5, r1
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  45              		.loc 1 285 0
  46 0008 FFF7FEFF 		bl	vPortEnterCritical
  47              	.LVL1:
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
  48              		.loc 1 287 0
  49 000c D4E90F13 		ldrd	r1, r3, [r4, #60]
  50 0010 2268     		ldr	r2, [r4]
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
  51              		.loc 1 289 0
  52 0012 A260     		str	r2, [r4, #8]
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
  53              		.loc 1 287 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 7


  54 0014 01FB03F1 		mul	r1, r1, r3
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
  55              		.loc 1 290 0
  56 0018 CB1A     		subs	r3, r1, r3
  57 001a 1344     		add	r3, r3, r2
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
  58              		.loc 1 288 0
  59 001c 0020     		movs	r0, #0
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
  60              		.loc 1 287 0
  61 001e 0A44     		add	r2, r2, r1
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
  62              		.loc 1 291 0
  63 0020 FF21     		movs	r1, #255
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
  64              		.loc 1 288 0
  65 0022 A063     		str	r0, [r4, #56]
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
  66              		.loc 1 290 0
  67 0024 E360     		str	r3, [r4, #12]
  68              		.loc 1 291 0
  69 0026 84F84410 		strb	r1, [r4, #68]
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
  70              		.loc 1 287 0
  71 002a 6260     		str	r2, [r4, #4]
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
  72              		.loc 1 292 0
  73 002c 84F84510 		strb	r1, [r4, #69]
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
  74              		.loc 1 294 0
  75 0030 75B9     		cbnz	r5, .L4
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
  76              		.loc 1 301 0
  77 0032 2369     		ldr	r3, [r4, #16]
  78 0034 ABB9     		cbnz	r3, .L14
  79              	.L6:
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 8


 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  80              		.loc 1 324 0
  81 0036 FFF7FEFF 		bl	vPortExitCritical
  82              	.LVL2:
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  83              		.loc 1 329 0
  84 003a 0120     		movs	r0, #1
  85 003c 38BD     		pop	{r3, r4, r5, pc}
  86              	.LVL3:
  87              	.L13:
  88              	.LBB109:
  89              	.LBB110:
  90              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 9


  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 10


  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 11


 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 12


 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  91              		.loc 2 237 0
  92              		.syntax unified
  93              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  94 003e 4FF05003 			mov r3, #80												
  95 0042 83F31188 		msr basepri, r3											
  96 0046 BFF36F8F 		isb														
  97 004a BFF34F8F 		dsb														
  98              	
  99              	@ 0 "" 2
 100              	.LVL4:
 101              		.thumb
 102              		.syntax unified
 103              	.L3:
 104 004e FEE7     		b	.L3
 105              	.LVL5:
 106              	.L4:
 107              	.LBE110:
 108              	.LBE109:
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 109              		.loc 1 320 0
 110 0050 04F11000 		add	r0, r4, #16
 111 0054 FFF7FEFF 		bl	vListInitialise
 112              	.LVL6:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 13


 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 113              		.loc 1 321 0
 114 0058 04F12400 		add	r0, r4, #36
 115 005c FFF7FEFF 		bl	vListInitialise
 116              	.LVL7:
 117 0060 E9E7     		b	.L6
 118              	.L14:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 119              		.loc 1 303 0
 120 0062 04F11000 		add	r0, r4, #16
 121 0066 FFF7FEFF 		bl	xTaskRemoveFromEventList
 122              	.LVL8:
 123 006a 0028     		cmp	r0, #0
 124 006c E3D0     		beq	.L6
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 125              		.loc 1 305 0
 126 006e 044B     		ldr	r3, .L15
 127 0070 4FF08052 		mov	r2, #268435456
 128 0074 1A60     		str	r2, [r3]
 129              		.syntax unified
 130              	@ 305 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 131 0076 BFF34F8F 		dsb
 132              	@ 0 "" 2
 133              	@ 305 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 134 007a BFF36F8F 		isb
 135              	@ 0 "" 2
 136              		.thumb
 137              		.syntax unified
 138 007e DAE7     		b	.L6
 139              	.L16:
 140              		.align	2
 141              	.L15:
 142 0080 04ED00E0 		.word	-536810236
 143              		.cfi_endproc
 144              	.LFE5:
 146              		.section	.text.xQueueGenericCreate,"ax",%progbits
 147              		.align	1
 148              		.p2align 2,,3
 149              		.global	xQueueGenericCreate
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv4-sp-d16
 155              	xQueueGenericCreate:
 156              	.LFB6:
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 14


 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 157              		.loc 1 387 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              	.LVL9:
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 162              		.loc 1 392 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 15


 163 0000 40B9     		cbnz	r0, .L18
 164              	.LBB123:
 165              	.LBB124:
 166              		.loc 2 237 0
 167              		.syntax unified
 168              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 169 0002 4FF05003 			mov r3, #80												
 170 0006 83F31188 		msr basepri, r3											
 171 000a BFF36F8F 		isb														
 172 000e BFF34F8F 		dsb														
 173              	
 174              	@ 0 "" 2
 175              	.LVL10:
 176              		.thumb
 177              		.syntax unified
 178              	.L19:
 179 0012 FEE7     		b	.L19
 180              	.L18:
 181              	.LBE124:
 182              	.LBE123:
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 183              		.loc 1 387 0
 184 0014 70B5     		push	{r4, r5, r6, lr}
 185              	.LCFI1:
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 4, -16
 188              		.cfi_offset 5, -12
 189              		.cfi_offset 6, -8
 190              		.cfi_offset 14, -4
 191 0016 0646     		mov	r6, r0
 192 0018 0D46     		mov	r5, r1
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 193              		.loc 1 394 0
 194 001a 51B1     		cbz	r1, .L20
 195              	.LVL11:
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 196              		.loc 1 403 0
 197 001c 01FB00F0 		mul	r0, r1, r0
 198              	.LVL12:
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 199              		.loc 1 406 0
 200 0020 4830     		adds	r0, r0, #72
 201              	.LVL13:
 202 0022 FFF7FEFF 		bl	pvPortMalloc
 203              	.LVL14:
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 16


 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 204              		.loc 1 408 0
 205 0026 0446     		mov	r4, r0
 206 0028 58B3     		cbz	r0, .L25
 207              	.LVL15:
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 208              		.loc 1 412 0
 209 002a 00F14803 		add	r3, r0, #72
 210              	.LVL16:
 211              	.LBB125:
 212              	.LBB126:
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 213              		.loc 1 449 0
 214 002e 0360     		str	r3, [r0]
 215 0030 05E0     		b	.L23
 216              	.LVL17:
 217              	.L20:
 218              	.LBE126:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 17


 219              	.LBE125:
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 220              		.loc 1 406 0
 221 0032 4820     		movs	r0, #72
 222              	.LVL18:
 223 0034 FFF7FEFF 		bl	pvPortMalloc
 224              	.LVL19:
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 225              		.loc 1 408 0
 226 0038 0446     		mov	r4, r0
 227 003a 10B3     		cbz	r0, .L25
 228              	.LVL20:
 229              	.LBB130:
 230              	.LBB129:
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 231              		.loc 1 444 0
 232 003c 2460     		str	r4, [r4]
 233              	.LVL21:
 234              	.L23:
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 235              		.loc 1 455 0
 236 003e C4E90F65 		strd	r6, r5, [r4, #60]
 237              	.LVL22:
 238              	.LBB127:
 239              	.LBB128:
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 240              		.loc 1 285 0
 241 0042 FFF7FEFF 		bl	vPortEnterCritical
 242              	.LVL23:
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 243              		.loc 1 287 0
 244 0046 D4E90F13 		ldrd	r1, r3, [r4, #60]
 245 004a 2268     		ldr	r2, [r4]
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 246              		.loc 1 289 0
 247 004c A260     		str	r2, [r4, #8]
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 248              		.loc 1 287 0
 249 004e 01FB03F1 		mul	r1, r1, r3
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 250              		.loc 1 290 0
 251 0052 CB1A     		subs	r3, r1, r3
 252 0054 1344     		add	r3, r3, r2
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 253              		.loc 1 288 0
 254 0056 0020     		movs	r0, #0
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 255              		.loc 1 287 0
 256 0058 0A44     		add	r2, r2, r1
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 257              		.loc 1 291 0
 258 005a FF21     		movs	r1, #255
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 18


 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 259              		.loc 1 288 0
 260 005c A063     		str	r0, [r4, #56]
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 261              		.loc 1 290 0
 262 005e E360     		str	r3, [r4, #12]
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 263              		.loc 1 291 0
 264 0060 84F84410 		strb	r1, [r4, #68]
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265              		.loc 1 287 0
 266 0064 6260     		str	r2, [r4, #4]
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 267              		.loc 1 292 0
 268 0066 84F84510 		strb	r1, [r4, #69]
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 269              		.loc 1 320 0
 270 006a 04F11000 		add	r0, r4, #16
 271 006e FFF7FEFF 		bl	vListInitialise
 272              	.LVL24:
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 273              		.loc 1 321 0
 274 0072 04F12400 		add	r0, r4, #36
 275 0076 FFF7FEFF 		bl	vListInitialise
 276              	.LVL25:
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 277              		.loc 1 324 0
 278 007a FFF7FEFF 		bl	vPortExitCritical
 279              	.LVL26:
 280              	.LBE128:
 281              	.LBE127:
 282              	.LBE129:
 283              	.LBE130:
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 284              		.loc 1 427 0
 285 007e 2046     		mov	r0, r4
 286 0080 70BD     		pop	{r4, r5, r6, pc}
 287              	.LVL27:
 288              	.L25:
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 289              		.loc 1 406 0
 290 0082 0024     		movs	r4, #0
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 291              		.loc 1 427 0
 292 0084 2046     		mov	r0, r4
 293              	.LVL28:
 294 0086 70BD     		pop	{r4, r5, r6, pc}
 295              		.cfi_endproc
 296              	.LFE6:
 298              		.section	.text.xQueueGenericSend,"ax",%progbits
 299              		.align	1
 300              		.p2align 2,,3
 301              		.global	xQueueGenericSend
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 19


 307              	xQueueGenericSend:
 308              	.LFB10:
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 20


 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 21


 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 22


 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 23


 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 309              		.loc 1 724 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 16
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              	.LVL29:
 314 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 315              	.LCFI2:
 316              		.cfi_def_cfa_offset 36
 317              		.cfi_offset 4, -36
 318              		.cfi_offset 5, -32
 319              		.cfi_offset 6, -28
 320              		.cfi_offset 7, -24
 321              		.cfi_offset 8, -20
 322              		.cfi_offset 9, -16
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 24


 323              		.cfi_offset 10, -12
 324              		.cfi_offset 11, -8
 325              		.cfi_offset 14, -4
 326 0004 85B0     		sub	sp, sp, #20
 327              	.LCFI3:
 328              		.cfi_def_cfa_offset 56
 329              		.loc 1 724 0
 330 0006 0192     		str	r2, [sp, #4]
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 331              		.loc 1 729 0
 332 0008 0028     		cmp	r0, #0
 333 000a 00F02281 		beq	.L169
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 334              		.loc 1 730 0
 335 000e 0029     		cmp	r1, #0
 336 0010 00F01281 		beq	.L170
 337              	.LVL30:
 338              	.L31:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 339              		.loc 1 731 0
 340 0014 022B     		cmp	r3, #2
 341 0016 0BD1     		bne	.L33
 342              		.loc 1 731 0 is_stmt 0 discriminator 2
 343 0018 C26B     		ldr	r2, [r0, #60]
 344 001a 012A     		cmp	r2, #1
 345 001c 08D0     		beq	.L33
 346              	.LBB155:
 347              	.LBB156:
 348              		.loc 2 237 0 is_stmt 1
 349              		.syntax unified
 350              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 351 001e 4FF05003 			mov r3, #80												
 352 0022 83F31188 		msr basepri, r3											
 353 0026 BFF36F8F 		isb														
 354 002a BFF34F8F 		dsb														
 355              	
 356              	@ 0 "" 2
 357              	.LVL31:
 358              		.thumb
 359              		.syntax unified
 360              	.L34:
 361 002e FEE7     		b	.L34
 362              	.LVL32:
 363              	.L33:
 364 0030 0446     		mov	r4, r0
 365 0032 1E46     		mov	r6, r3
 366 0034 0F46     		mov	r7, r1
 367              	.LBE156:
 368              	.LBE155:
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 369              		.loc 1 734 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 25


 370 0036 FFF7FEFF 		bl	xTaskGetSchedulerState
 371              	.LVL33:
 372 003a 0028     		cmp	r0, #0
 373 003c 40F0F980 		bne	.L93
 374              		.loc 1 734 0 is_stmt 0 discriminator 2
 375 0040 019B     		ldr	r3, [sp, #4]
 376 0042 43B1     		cbz	r3, .L94
 377              	.LBB157:
 378              	.LBB158:
 379              		.loc 2 237 0 is_stmt 1
 380              		.syntax unified
 381              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 382 0044 4FF05003 			mov r3, #80												
 383 0048 83F31188 		msr basepri, r3											
 384 004c BFF36F8F 		isb														
 385 0050 BFF34F8F 		dsb														
 386              	
 387              	@ 0 "" 2
 388              	.LVL34:
 389              		.thumb
 390              		.syntax unified
 391              	.L36:
 392 0054 FEE7     		b	.L36
 393              	.L94:
 394              	.LBE158:
 395              	.LBE157:
 396 0056 9A46     		mov	r10, r3
 397              	.L35:
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 398              		.loc 1 744 0
 399 0058 FFF7FEFF 		bl	vPortEnterCritical
 400              	.LVL35:
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 401              		.loc 1 750 0
 402 005c A26B     		ldr	r2, [r4, #56]
 403 005e E36B     		ldr	r3, [r4, #60]
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 26


 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 27


 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 28


 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible	that interrupts occurring now
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event	list again - but as the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 404              		.loc 1 898 0
 405 0060 DFF81493 		ldr	r9, .L177
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 406              		.loc 1 750 0
 407 0064 9A42     		cmp	r2, r3
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408              		.loc 1 874 0
 409 0066 4FF00008 		mov	r8, #0
 410              	.LVL36:
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 411              		.loc 1 750 0
 412 006a 75D3     		bcc	.L38
 413              	.L173:
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 414              		.loc 1 750 0 is_stmt 0 discriminator 1
 415 006c 022E     		cmp	r6, #2
 416 006e 00F0F980 		beq	.L171
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 417              		.loc 1 843 0 is_stmt 1
 418 0072 019D     		ldr	r5, [sp, #4]
 419 0074 002D     		cmp	r5, #0
 420 0076 00F04C81 		beq	.L172
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 421              		.loc 1 854 0
 422 007a BAF1000F 		cmp	r10, #0
 423 007e 02D1     		bne	.L55
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 424              		.loc 1 858 0
 425 0080 02A8     		add	r0, sp, #8
 426 0082 FFF7FEFF 		bl	vTaskSetTimeOutState
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 29


 427              	.LVL37:
 428              	.L55:
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429              		.loc 1 868 0
 430 0086 FFF7FEFF 		bl	vPortExitCritical
 431              	.LVL38:
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 432              		.loc 1 873 0
 433 008a FFF7FEFF 		bl	vTaskSuspendAll
 434              	.LVL39:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 435              		.loc 1 874 0
 436 008e FFF7FEFF 		bl	vPortEnterCritical
 437              	.LVL40:
 438 0092 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 439 0096 FF2B     		cmp	r3, #255
 440 0098 08BF     		it	eq
 441 009a 84F84480 		strbeq	r8, [r4, #68]
 442 009e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 443 00a2 FF2B     		cmp	r3, #255
 444 00a4 08BF     		it	eq
 445 00a6 84F84580 		strbeq	r8, [r4, #69]
 446 00aa FFF7FEFF 		bl	vPortExitCritical
 447              	.LVL41:
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 448              		.loc 1 877 0
 449 00ae 01A9     		add	r1, sp, #4
 450 00b0 02A8     		add	r0, sp, #8
 451 00b2 FFF7FEFF 		bl	xTaskCheckForTimeOut
 452              	.LVL42:
 453 00b6 0028     		cmp	r0, #0
 454 00b8 40F01181 		bne	.L58
 455              	.LVL43:
 456              	.LBB159:
 457              	.LBB160:
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 30


 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 31


 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 32


1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 33


1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 34


1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 35


1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 36


1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position in case the queue is only being
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				peeked. */
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xJustPeeking == pdFALSE )
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Actually removing data, not just peeking. */
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Record the information required to implement
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							priority inheritance should it become necessary. */
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is not being removed, so reset the read
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pointer. */
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The data is being left in the queue, so see if there are
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					any other tasks waiting for the data. */
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 37


1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority than this task. */
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 38


1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 39


1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 40


1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 41


1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 42


1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 43


1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 44


1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 45


1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 46


1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 47


1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 48


1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 458              		.loc 1 1957 0
 459 00bc FFF7FEFF 		bl	vPortEnterCritical
 460              	.LVL44:
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 461              		.loc 1 1959 0
 462 00c0 A26B     		ldr	r2, [r4, #56]
 463 00c2 E36B     		ldr	r3, [r4, #60]
 464 00c4 9A42     		cmp	r2, r3
 465 00c6 67D0     		beq	.L59
 466              	.LVL45:
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 467              		.loc 1 1968 0
 468 00c8 FFF7FEFF 		bl	vPortExitCritical
 469              	.LVL46:
 470              	.LBE160:
 471              	.LBE159:
 472              	.LBB162:
 473              	.LBB163:
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 474              		.loc 1 1802 0
 475 00cc FFF7FEFF 		bl	vPortEnterCritical
 476              	.LVL47:
 477              	.LBB164:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 478              		.loc 1 1804 0
 479 00d0 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 480 00d4 6DB2     		sxtb	r5, r5
 481              	.LVL48:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 482              		.loc 1 1807 0
 483 00d6 002D     		cmp	r5, #0
 484 00d8 11DD     		ble	.L63
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 485              		.loc 1 1855 0
 486 00da 636A     		ldr	r3, [r4, #36]
 487 00dc 7BB1     		cbz	r3, .L63
 488 00de 04F1240A 		add	r10, r4, #36
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 49


 489 00e2 01E0     		b	.L64
 490              	.L66:
 491 00e4 636A     		ldr	r3, [r4, #36]
 492 00e6 53B1     		cbz	r3, .L63
 493              	.L64:
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 494              		.loc 1 1857 0
 495 00e8 5046     		mov	r0, r10
 496 00ea FFF7FEFF 		bl	xTaskRemoveFromEventList
 497              	.LVL49:
 498 00ee 08B1     		cbz	r0, .L65
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 499              		.loc 1 1861 0
 500 00f0 FFF7FEFF 		bl	vTaskMissedYield
 501              	.LVL50:
 502              	.L65:
 503 00f4 013D     		subs	r5, r5, #1
 504              	.LVL51:
 505 00f6 EBB2     		uxtb	r3, r5
 506 00f8 5DB2     		sxtb	r5, r3
 507              	.LVL52:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 508              		.loc 1 1807 0
 509 00fa 002B     		cmp	r3, #0
 510 00fc F2D1     		bne	.L66
 511              	.L63:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 512              		.loc 1 1878 0
 513 00fe FF23     		movs	r3, #255
 514 0100 84F84530 		strb	r3, [r4, #69]
 515              	.LBE164:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 516              		.loc 1 1880 0
 517 0104 FFF7FEFF 		bl	vPortExitCritical
 518              	.LVL53:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 519              		.loc 1 1883 0
 520 0108 FFF7FEFF 		bl	vPortEnterCritical
 521              	.LVL54:
 522              	.LBB165:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 523              		.loc 1 1885 0
 524 010c 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 525              	.LVL55:
 526 0110 6DB2     		sxtb	r5, r5
 527              	.LVL56:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 528              		.loc 1 1887 0
 529 0112 002D     		cmp	r5, #0
 530 0114 11DD     		ble	.L62
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 531              		.loc 1 1889 0
 532 0116 2369     		ldr	r3, [r4, #16]
 533 0118 7BB1     		cbz	r3, .L62
 534 011a 04F1100A 		add	r10, r4, #16
 535 011e 01E0     		b	.L68
 536              	.L70:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 50


 537 0120 2369     		ldr	r3, [r4, #16]
 538 0122 53B1     		cbz	r3, .L62
 539              	.L68:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 540              		.loc 1 1891 0
 541 0124 5046     		mov	r0, r10
 542 0126 FFF7FEFF 		bl	xTaskRemoveFromEventList
 543              	.LVL57:
 544 012a 08B1     		cbz	r0, .L69
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 545              		.loc 1 1893 0
 546 012c FFF7FEFF 		bl	vTaskMissedYield
 547              	.LVL58:
 548              	.L69:
 549 0130 013D     		subs	r5, r5, #1
 550              	.LVL59:
 551 0132 EBB2     		uxtb	r3, r5
 552 0134 5DB2     		sxtb	r5, r3
 553              	.LVL60:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 554              		.loc 1 1887 0
 555 0136 002B     		cmp	r3, #0
 556 0138 F2D1     		bne	.L70
 557              	.L62:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 558              		.loc 1 1908 0
 559 013a FF23     		movs	r3, #255
 560 013c 84F84430 		strb	r3, [r4, #68]
 561              	.LBE165:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 562              		.loc 1 1910 0
 563 0140 FFF7FEFF 		bl	vPortExitCritical
 564              	.LVL61:
 565              	.LBE163:
 566              	.LBE162:
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 567              		.loc 1 905 0
 568 0144 FFF7FEFF 		bl	xTaskResumeAll
 569              	.LVL62:
 570              	.L67:
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 571              		.loc 1 744 0
 572 0148 FFF7FEFF 		bl	vPortEnterCritical
 573              	.LVL63:
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 574              		.loc 1 750 0
 575 014c A26B     		ldr	r2, [r4, #56]
 576 014e E36B     		ldr	r3, [r4, #60]
 577 0150 9A42     		cmp	r2, r3
 578 0152 4FF0010A 		mov	r10, #1
 579              	.LVL64:
 580 0156 89D2     		bcs	.L173
 581              	.L38:
 582              	.LVL65:
 583              	.LBB166:
 584              	.LBB167:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 51


 585              		.loc 1 1706 0
 586 0158 226C     		ldr	r2, [r4, #64]
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 587              		.loc 1 1704 0
 588 015a A56B     		ldr	r5, [r4, #56]
 589              	.LVL66:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 590              		.loc 1 1706 0
 591 015c 002A     		cmp	r2, #0
 592 015e 00F08680 		beq	.L92
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 593              		.loc 1 1723 0
 594 0162 002E     		cmp	r6, #0
 595 0164 00F0A180 		beq	.L174
 596              	.LVL67:
 597              	.L48:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 598              		.loc 1 1738 0
 599 0168 3946     		mov	r1, r7
 600 016a E068     		ldr	r0, [r4, #12]
 601 016c FFF7FEFF 		bl	memcpy
 602              	.LVL68:
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 603              		.loc 1 1739 0
 604 0170 236C     		ldr	r3, [r4, #64]
 605 0172 E268     		ldr	r2, [r4, #12]
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 606              		.loc 1 1740 0
 607 0174 2168     		ldr	r1, [r4]
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 608              		.loc 1 1739 0
 609 0176 5B42     		negs	r3, r3
 610 0178 1A44     		add	r2, r2, r3
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 611              		.loc 1 1740 0
 612 017a 8A42     		cmp	r2, r1
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 613              		.loc 1 1739 0
 614 017c E260     		str	r2, [r4, #12]
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 615              		.loc 1 1740 0
 616 017e 02D2     		bcs	.L50
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 617              		.loc 1 1742 0
 618 0180 6268     		ldr	r2, [r4, #4]
 619 0182 1344     		add	r3, r3, r2
 620 0184 E360     		str	r3, [r4, #12]
 621              	.L50:
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 622              		.loc 1 1749 0
 623 0186 022E     		cmp	r6, #2
 624 0188 636A     		ldr	r3, [r4, #36]
 625 018a 00F0C680 		beq	.L175
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 626              		.loc 1 1770 0
 627 018e 0135     		adds	r5, r5, #1
 628 0190 A563     		str	r5, [r4, #56]
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 52


 629              	.LVL69:
 630              	.LBE167:
 631              	.LBE166:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 632              		.loc 1 808 0
 633 0192 002B     		cmp	r3, #0
 634 0194 71D0     		beq	.L44
 635 0196 9BE0     		b	.L43
 636              	.LVL70:
 637              	.L59:
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 638              		.loc 1 882 0
 639 0198 04F1100A 		add	r10, r4, #16
 640              	.LBB175:
 641              	.LBB161:
 642              		.loc 1 1968 0
 643 019c FFF7FEFF 		bl	vPortExitCritical
 644              	.LVL71:
 645              	.LBE161:
 646              	.LBE175:
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 647              		.loc 1 882 0
 648 01a0 5046     		mov	r0, r10
 649 01a2 0199     		ldr	r1, [sp, #4]
 650 01a4 FFF7FEFF 		bl	vTaskPlaceOnEventList
 651              	.LVL72:
 652              	.LBB176:
 653              	.LBB177:
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 654              		.loc 1 1802 0
 655 01a8 FFF7FEFF 		bl	vPortEnterCritical
 656              	.LVL73:
 657              	.LBB178:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 658              		.loc 1 1804 0
 659 01ac 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 660 01b0 6DB2     		sxtb	r5, r5
 661              	.LVL74:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 662              		.loc 1 1807 0
 663 01b2 002D     		cmp	r5, #0
 664 01b4 11DD     		ble	.L74
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 665              		.loc 1 1855 0
 666 01b6 636A     		ldr	r3, [r4, #36]
 667 01b8 7BB1     		cbz	r3, .L74
 668 01ba 04F1240B 		add	fp, r4, #36
 669 01be 01E0     		b	.L75
 670              	.L77:
 671 01c0 636A     		ldr	r3, [r4, #36]
 672 01c2 53B1     		cbz	r3, .L74
 673              	.L75:
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 674              		.loc 1 1857 0
 675 01c4 5846     		mov	r0, fp
 676 01c6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 677              	.LVL75:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 53


 678 01ca 08B1     		cbz	r0, .L76
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 679              		.loc 1 1861 0
 680 01cc FFF7FEFF 		bl	vTaskMissedYield
 681              	.LVL76:
 682              	.L76:
 683 01d0 013D     		subs	r5, r5, #1
 684              	.LVL77:
 685 01d2 EBB2     		uxtb	r3, r5
 686 01d4 5DB2     		sxtb	r5, r3
 687              	.LVL78:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 688              		.loc 1 1807 0
 689 01d6 002B     		cmp	r3, #0
 690 01d8 F2D1     		bne	.L77
 691              	.L74:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 692              		.loc 1 1878 0
 693 01da FF23     		movs	r3, #255
 694 01dc 84F84530 		strb	r3, [r4, #69]
 695              	.LBE178:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 696              		.loc 1 1880 0
 697 01e0 FFF7FEFF 		bl	vPortExitCritical
 698              	.LVL79:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 699              		.loc 1 1883 0
 700 01e4 FFF7FEFF 		bl	vPortEnterCritical
 701              	.LVL80:
 702              	.LBB179:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703              		.loc 1 1885 0
 704 01e8 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 705              	.LVL81:
 706 01ec 6DB2     		sxtb	r5, r5
 707              	.LVL82:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 708              		.loc 1 1887 0
 709 01ee 002D     		cmp	r5, #0
 710 01f0 0ADC     		bgt	.L81
 711 01f2 0CE0     		b	.L73
 712              	.L176:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 713              		.loc 1 1891 0
 714 01f4 5046     		mov	r0, r10
 715 01f6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 716              	.LVL83:
 717 01fa 08B1     		cbz	r0, .L80
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 718              		.loc 1 1893 0
 719 01fc FFF7FEFF 		bl	vTaskMissedYield
 720              	.LVL84:
 721              	.L80:
 722 0200 013D     		subs	r5, r5, #1
 723              	.LVL85:
 724 0202 EBB2     		uxtb	r3, r5
 725 0204 5DB2     		sxtb	r5, r3
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 54


 726              	.LVL86:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 727              		.loc 1 1887 0
 728 0206 13B1     		cbz	r3, .L73
 729              	.L81:
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 730              		.loc 1 1889 0
 731 0208 2369     		ldr	r3, [r4, #16]
 732 020a 002B     		cmp	r3, #0
 733 020c F2D1     		bne	.L176
 734              	.L73:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 735              		.loc 1 1908 0
 736 020e FF23     		movs	r3, #255
 737 0210 84F84430 		strb	r3, [r4, #68]
 738              	.LBE179:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 739              		.loc 1 1910 0
 740 0214 FFF7FEFF 		bl	vPortExitCritical
 741              	.LVL87:
 742              	.LBE177:
 743              	.LBE176:
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 744              		.loc 1 896 0
 745 0218 FFF7FEFF 		bl	xTaskResumeAll
 746              	.LVL88:
 747 021c 0028     		cmp	r0, #0
 748 021e 93D1     		bne	.L67
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 749              		.loc 1 898 0
 750 0220 4FF08053 		mov	r3, #268435456
 751 0224 C9F80030 		str	r3, [r9]
 752              		.syntax unified
 753              	@ 898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 754 0228 BFF34F8F 		dsb
 755              	@ 0 "" 2
 756              	@ 898 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 757 022c BFF36F8F 		isb
 758              	@ 0 "" 2
 759              		.thumb
 760              		.syntax unified
 761 0230 8AE7     		b	.L67
 762              	.LVL89:
 763              	.L93:
 764 0232 4FF0000A 		mov	r10, #0
 765 0236 0FE7     		b	.L35
 766              	.LVL90:
 767              	.L170:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 768              		.loc 1 730 0 discriminator 2
 769 0238 026C     		ldr	r2, [r0, #64]
 770              	.LVL91:
 771 023a 002A     		cmp	r2, #0
 772 023c 3FF4EAAE 		beq	.L31
 773              	.LBB180:
 774              	.LBB181:
 775              		.loc 2 237 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 55


 776              		.syntax unified
 777              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 778 0240 4FF05003 			mov r3, #80												
 779 0244 83F31188 		msr basepri, r3											
 780 0248 BFF36F8F 		isb														
 781 024c BFF34F8F 		dsb														
 782              	
 783              	@ 0 "" 2
 784              	.LVL92:
 785              		.thumb
 786              		.syntax unified
 787              	.L32:
 788 0250 FEE7     		b	.L32
 789              	.LVL93:
 790              	.L169:
 791              	.LBE181:
 792              	.LBE180:
 793              	.LBB182:
 794              	.LBB183:
 795              		.syntax unified
 796              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 797 0252 4FF05003 			mov r3, #80												
 798 0256 83F31188 		msr basepri, r3											
 799 025a BFF36F8F 		isb														
 800 025e BFF34F8F 		dsb														
 801              	
 802              	@ 0 "" 2
 803              	.LVL94:
 804              		.thumb
 805              		.syntax unified
 806              	.L30:
 807 0262 FEE7     		b	.L30
 808              	.LVL95:
 809              	.L171:
 810              	.LBE183:
 811              	.LBE182:
 812              	.LBB184:
 813              	.LBB168:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 814              		.loc 1 1706 0
 815 0264 226C     		ldr	r2, [r4, #64]
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 816              		.loc 1 1704 0
 817 0266 A56B     		ldr	r5, [r4, #56]
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 818              		.loc 1 1706 0
 819 0268 002A     		cmp	r2, #0
 820 026a 7FF47DAF 		bne	.L48
 821              	.LVL96:
 822              	.L92:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 823              		.loc 1 1710 0
 824 026e 2668     		ldr	r6, [r4]
 825              	.LVL97:
 826 0270 0135     		adds	r5, r5, #1
 827 0272 46B1     		cbz	r6, .L42
 828              	.L166:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 56


 829              	.LBE168:
 830              	.LBE184:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 831              		.loc 1 808 0
 832 0274 636A     		ldr	r3, [r4, #36]
 833              	.L164:
 834              	.LBB185:
 835              	.LBB169:
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 836              		.loc 1 1770 0
 837 0276 A563     		str	r5, [r4, #56]
 838              	.LVL98:
 839              	.LBE169:
 840              	.LBE185:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 841              		.loc 1 808 0
 842 0278 53BB     		cbnz	r3, .L43
 843              	.L44:
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 844              		.loc 1 838 0
 845 027a FFF7FEFF 		bl	vPortExitCritical
 846              	.LVL99:
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 847              		.loc 1 839 0
 848 027e 0120     		movs	r0, #1
 849              	.LVL100:
 850              	.L28:
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 851              		.loc 1 918 0
 852 0280 05B0     		add	sp, sp, #20
 853              	.LCFI4:
 854              		.cfi_remember_state
 855              		.cfi_def_cfa_offset 36
 856              		@ sp needed
 857 0282 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 858              	.LVL101:
 859              	.L42:
 860              	.LCFI5:
 861              		.cfi_restore_state
 862              	.LBB186:
 863              	.LBB170:
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 864              		.loc 1 1713 0
 865 0286 6068     		ldr	r0, [r4, #4]
 866 0288 FFF7FEFF 		bl	xTaskPriorityDisinherit
 867              	.LVL102:
 868              	.LBE170:
 869              	.LBE186:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 870              		.loc 1 808 0
 871 028c 636A     		ldr	r3, [r4, #36]
 872              	.LBB187:
 873              	.LBB171:
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 874              		.loc 1 1714 0
 875 028e 6660     		str	r6, [r4, #4]
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 57


 876              		.loc 1 1770 0
 877 0290 A563     		str	r5, [r4, #56]
 878              	.LVL103:
 879              	.LBE171:
 880              	.LBE187:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 881              		.loc 1 808 0
 882 0292 EBB9     		cbnz	r3, .L43
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 883              		.loc 1 823 0
 884 0294 0028     		cmp	r0, #0
 885 0296 F0D0     		beq	.L44
 886              	.L167:
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 887              		.loc 1 829 0
 888 0298 374B     		ldr	r3, .L177
 889 029a 4FF08052 		mov	r2, #268435456
 890 029e 1A60     		str	r2, [r3]
 891              		.syntax unified
 892              	@ 829 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 893 02a0 BFF34F8F 		dsb
 894              	@ 0 "" 2
 895              	@ 829 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 896 02a4 BFF36F8F 		isb
 897              	@ 0 "" 2
 898              		.thumb
 899              		.syntax unified
 900 02a8 E7E7     		b	.L44
 901              	.LVL104:
 902              	.L174:
 903              	.LBB188:
 904              	.LBB172:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 905              		.loc 1 1725 0
 906 02aa 3946     		mov	r1, r7
 907 02ac A068     		ldr	r0, [r4, #8]
 908 02ae FFF7FEFF 		bl	memcpy
 909              	.LVL105:
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 910              		.loc 1 1726 0
 911 02b2 A368     		ldr	r3, [r4, #8]
 912 02b4 216C     		ldr	r1, [r4, #64]
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 913              		.loc 1 1727 0
 914 02b6 6268     		ldr	r2, [r4, #4]
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 915              		.loc 1 1726 0
 916 02b8 0B44     		add	r3, r3, r1
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 917              		.loc 1 1727 0
 918 02ba 9342     		cmp	r3, r2
 919 02bc 05F10105 		add	r5, r5, #1
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 920              		.loc 1 1726 0
 921 02c0 A360     		str	r3, [r4, #8]
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 922              		.loc 1 1727 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 58


 923 02c2 D7D3     		bcc	.L166
 924              	.LBE172:
 925              	.LBE188:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 926              		.loc 1 808 0
 927 02c4 636A     		ldr	r3, [r4, #36]
 928              	.LBB189:
 929              	.LBB173:
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 930              		.loc 1 1729 0
 931 02c6 2268     		ldr	r2, [r4]
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 932              		.loc 1 1770 0
 933 02c8 A563     		str	r5, [r4, #56]
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 934              		.loc 1 1729 0
 935 02ca A260     		str	r2, [r4, #8]
 936              	.LVL106:
 937              	.LBE173:
 938              	.LBE189:
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 939              		.loc 1 808 0
 940 02cc 002B     		cmp	r3, #0
 941 02ce D4D0     		beq	.L44
 942              	.LVL107:
 943              	.L43:
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 944              		.loc 1 810 0
 945 02d0 04F12400 		add	r0, r4, #36
 946 02d4 FFF7FEFF 		bl	xTaskRemoveFromEventList
 947              	.LVL108:
 948 02d8 0028     		cmp	r0, #0
 949 02da DDD1     		bne	.L167
 950 02dc CDE7     		b	.L44
 951              	.LVL109:
 952              	.L58:
 953              	.LBB190:
 954              	.LBB191:
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 955              		.loc 1 1802 0
 956 02de FFF7FEFF 		bl	vPortEnterCritical
 957              	.LVL110:
 958              	.LBB192:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 959              		.loc 1 1804 0
 960 02e2 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 961 02e6 6DB2     		sxtb	r5, r5
 962              	.LVL111:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 963              		.loc 1 1807 0
 964 02e8 002D     		cmp	r5, #0
 965 02ea 1DDD     		ble	.L85
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 966              		.loc 1 1855 0
 967 02ec 636A     		ldr	r3, [r4, #36]
 968 02ee DBB1     		cbz	r3, .L85
 969 02f0 04F12406 		add	r6, r4, #36
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 59


 970              	.LVL112:
 971 02f4 05E0     		b	.L86
 972              	.L87:
 973 02f6 013D     		subs	r5, r5, #1
 974              	.LVL113:
 975 02f8 EBB2     		uxtb	r3, r5
 976 02fa 5DB2     		sxtb	r5, r3
 977              	.LVL114:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 978              		.loc 1 1807 0
 979 02fc A3B1     		cbz	r3, .L85
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 980              		.loc 1 1855 0
 981 02fe 636A     		ldr	r3, [r4, #36]
 982 0300 93B1     		cbz	r3, .L85
 983              	.L86:
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 984              		.loc 1 1857 0
 985 0302 3046     		mov	r0, r6
 986 0304 FFF7FEFF 		bl	xTaskRemoveFromEventList
 987              	.LVL115:
 988 0308 0028     		cmp	r0, #0
 989 030a F4D0     		beq	.L87
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 990              		.loc 1 1861 0
 991 030c FFF7FEFF 		bl	vTaskMissedYield
 992              	.LVL116:
 993 0310 F1E7     		b	.L87
 994              	.LVL117:
 995              	.L172:
 996              	.LBE192:
 997              	.LBE191:
 998              	.LBE190:
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 999              		.loc 1 847 0
 1000 0312 FFF7FEFF 		bl	vPortExitCritical
 1001              	.LVL118:
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1002              		.loc 1 852 0
 1003 0316 2846     		mov	r0, r5
 1004 0318 B2E7     		b	.L28
 1005              	.LVL119:
 1006              	.L175:
 1007              	.LBB196:
 1008              	.LBB174:
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1009              		.loc 1 1751 0
 1010 031a 002D     		cmp	r5, #0
 1011 031c ABD1     		bne	.L164
 1012              	.LVL120:
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1013              		.loc 1 1770 0
 1014 031e 0122     		movs	r2, #1
 1015 0320 A263     		str	r2, [r4, #56]
 1016              	.LVL121:
 1017              	.LBE174:
 1018              	.LBE196:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 60


 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1019              		.loc 1 808 0
 1020 0322 002B     		cmp	r3, #0
 1021 0324 A9D0     		beq	.L44
 1022 0326 D3E7     		b	.L43
 1023              	.LVL122:
 1024              	.L85:
 1025              	.LBB197:
 1026              	.LBB195:
 1027              	.LBB193:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1028              		.loc 1 1878 0
 1029 0328 FF23     		movs	r3, #255
 1030 032a 84F84530 		strb	r3, [r4, #69]
 1031              	.LBE193:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1032              		.loc 1 1880 0
 1033 032e FFF7FEFF 		bl	vPortExitCritical
 1034              	.LVL123:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1035              		.loc 1 1883 0
 1036 0332 FFF7FEFF 		bl	vPortEnterCritical
 1037              	.LVL124:
 1038              	.LBB194:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1039              		.loc 1 1885 0
 1040 0336 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 1041              	.LVL125:
 1042 033a 6DB2     		sxtb	r5, r5
 1043              	.LVL126:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1044              		.loc 1 1887 0
 1045 033c 002D     		cmp	r5, #0
 1046 033e 12DD     		ble	.L84
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1047              		.loc 1 1889 0
 1048 0340 2369     		ldr	r3, [r4, #16]
 1049 0342 83B1     		cbz	r3, .L84
 1050 0344 04F11006 		add	r6, r4, #16
 1051 0348 05E0     		b	.L89
 1052              	.L90:
 1053 034a 013D     		subs	r5, r5, #1
 1054              	.LVL127:
 1055 034c EBB2     		uxtb	r3, r5
 1056 034e 5DB2     		sxtb	r5, r3
 1057              	.LVL128:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1058              		.loc 1 1887 0
 1059 0350 4BB1     		cbz	r3, .L84
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1060              		.loc 1 1889 0
 1061 0352 2369     		ldr	r3, [r4, #16]
 1062 0354 3BB1     		cbz	r3, .L84
 1063              	.L89:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1064              		.loc 1 1891 0
 1065 0356 3046     		mov	r0, r6
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 61


 1066 0358 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1067              	.LVL129:
 1068 035c 0028     		cmp	r0, #0
 1069 035e F4D0     		beq	.L90
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1070              		.loc 1 1893 0
 1071 0360 FFF7FEFF 		bl	vTaskMissedYield
 1072              	.LVL130:
 1073 0364 F1E7     		b	.L90
 1074              	.L84:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1075              		.loc 1 1908 0
 1076 0366 FF23     		movs	r3, #255
 1077 0368 84F84430 		strb	r3, [r4, #68]
 1078              	.LBE194:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1079              		.loc 1 1910 0
 1080 036c FFF7FEFF 		bl	vPortExitCritical
 1081              	.LVL131:
 1082              	.LBE195:
 1083              	.LBE197:
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1084              		.loc 1 912 0
 1085 0370 FFF7FEFF 		bl	xTaskResumeAll
 1086              	.LVL132:
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1087              		.loc 1 915 0
 1088 0374 0020     		movs	r0, #0
 1089 0376 83E7     		b	.L28
 1090              	.L178:
 1091              		.align	2
 1092              	.L177:
 1093 0378 04ED00E0 		.word	-536810236
 1094              		.cfi_endproc
 1095              	.LFE10:
 1097              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1098              		.align	1
 1099              		.p2align 2,,3
 1100              		.global	xQueueCreateMutex
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu fpv4-sp-d16
 1106              	xQueueCreateMutex:
 1107              	.LFB9:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1108              		.loc 1 507 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              	.LVL133:
 1113 0000 70B5     		push	{r4, r5, r6, lr}
 1114              	.LCFI6:
 1115              		.cfi_def_cfa_offset 16
 1116              		.cfi_offset 4, -16
 1117              		.cfi_offset 5, -12
 1118              		.cfi_offset 6, -8
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 62


 1119              		.cfi_offset 14, -4
 1120              	.LBB210:
 1121              	.LBB211:
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1122              		.loc 1 406 0
 1123 0002 4820     		movs	r0, #72
 1124              	.LVL134:
 1125 0004 FFF7FEFF 		bl	pvPortMalloc
 1126              	.LVL135:
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1127              		.loc 1 408 0
 1128 0008 0446     		mov	r4, r0
 1129 000a 50B3     		cbz	r0, .L179
 1130              	.LVL136:
 1131              	.LBB212:
 1132              	.LBB213:
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 1133              		.loc 1 455 0
 1134 000c 0025     		movs	r5, #0
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 1135              		.loc 1 454 0
 1136 000e 0123     		movs	r3, #1
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1137              		.loc 1 444 0
 1138 0010 2060     		str	r0, [r4]
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 1139              		.loc 1 455 0
 1140 0012 C0E90F35 		strd	r3, r5, [r0, #60]
 1141              	.LVL137:
 1142              	.LBB214:
 1143              	.LBB215:
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1144              		.loc 1 285 0
 1145 0016 FFF7FEFF 		bl	vPortEnterCritical
 1146              	.LVL138:
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 1147              		.loc 1 287 0
 1148 001a D4E90F32 		ldrd	r3, r2, [r4, #60]
 1149 001e 2168     		ldr	r1, [r4]
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 1150              		.loc 1 288 0
 1151 0020 A563     		str	r5, [r4, #56]
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 1152              		.loc 1 287 0
 1153 0022 03FB02F3 		mul	r3, r3, r2
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 1154              		.loc 1 290 0
 1155 0026 9A1A     		subs	r2, r3, r2
 1156 0028 0A44     		add	r2, r2, r1
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 1157              		.loc 1 287 0
 1158 002a 0B44     		add	r3, r3, r1
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 1159              		.loc 1 291 0
 1160 002c FF26     		movs	r6, #255
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 1161              		.loc 1 289 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 63


 1162 002e C4E90131 		strd	r3, r1, [r4, #4]
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 1163              		.loc 1 290 0
 1164 0032 E260     		str	r2, [r4, #12]
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 1165              		.loc 1 291 0
 1166 0034 84F84460 		strb	r6, [r4, #68]
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 1167              		.loc 1 320 0
 1168 0038 04F11000 		add	r0, r4, #16
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1169              		.loc 1 292 0
 1170 003c 84F84560 		strb	r6, [r4, #69]
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 1171              		.loc 1 320 0
 1172 0040 FFF7FEFF 		bl	vListInitialise
 1173              	.LVL139:
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1174              		.loc 1 321 0
 1175 0044 04F12400 		add	r0, r4, #36
 1176 0048 FFF7FEFF 		bl	vListInitialise
 1177              	.LVL140:
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1178              		.loc 1 324 0
 1179 004c FFF7FEFF 		bl	vPortExitCritical
 1180              	.LVL141:
 1181              	.LBE215:
 1182              	.LBE214:
 1183              	.LBE213:
 1184              	.LBE212:
 1185              	.LBE211:
 1186              	.LBE210:
 1187              	.LBB216:
 1188              	.LBB217:
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1189              		.loc 1 485 0
 1190 0050 C4E90055 		strd	r5, r5, [r4]
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1191              		.loc 1 488 0
 1192 0054 E560     		str	r5, [r4, #12]
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1193              		.loc 1 493 0
 1194 0056 2B46     		mov	r3, r5
 1195 0058 2A46     		mov	r2, r5
 1196 005a 2946     		mov	r1, r5
 1197 005c 2046     		mov	r0, r4
 1198 005e FFF7FEFF 		bl	xQueueGenericSend
 1199              	.LVL142:
 1200              	.L179:
 1201              	.LBE217:
 1202              	.LBE216:
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1203              		.loc 1 515 0
 1204 0062 2046     		mov	r0, r4
 1205 0064 70BD     		pop	{r4, r5, r6, pc}
 1206              		.cfi_endproc
 1207              	.LFE9:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 64


 1209 0066 00BF     		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1210              		.align	1
 1211              		.p2align 2,,3
 1212              		.global	xQueueGenericSendFromISR
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1216              		.fpu fpv4-sp-d16
 1218              	xQueueGenericSendFromISR:
 1219              	.LFB11:
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1220              		.loc 1 922 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224              	.LVL143:
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1225              		.loc 1 927 0
 1226 0000 0028     		cmp	r0, #0
 1227 0002 37D0     		beq	.L225
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1228              		.loc 1 922 0
 1229 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1230              	.LCFI7:
 1231              		.cfi_def_cfa_offset 32
 1232              		.cfi_offset 4, -32
 1233              		.cfi_offset 5, -28
 1234              		.cfi_offset 6, -24
 1235              		.cfi_offset 7, -20
 1236              		.cfi_offset 8, -16
 1237              		.cfi_offset 9, -12
 1238              		.cfi_offset 10, -8
 1239              		.cfi_offset 14, -4
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1240              		.loc 1 928 0
 1241 0008 41B3     		cbz	r1, .L226
 1242              	.L188:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1243              		.loc 1 929 0
 1244 000a 022B     		cmp	r3, #2
 1245 000c 0BD1     		bne	.L190
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1246              		.loc 1 929 0 is_stmt 0 discriminator 2
 1247 000e C46B     		ldr	r4, [r0, #60]
 1248 0010 012C     		cmp	r4, #1
 1249 0012 08D0     		beq	.L190
 1250              	.LBB231:
 1251              	.LBB232:
 1252              		.loc 2 237 0 is_stmt 1
 1253              		.syntax unified
 1254              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1255 0014 4FF05003 			mov r3, #80												
 1256 0018 83F31188 		msr basepri, r3											
 1257 001c BFF36F8F 		isb														
 1258 0020 BFF34F8F 		dsb														
 1259              	
 1260              	@ 0 "" 2
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 65


 1261              	.LVL144:
 1262              		.thumb
 1263              		.syntax unified
 1264              	.L191:
 1265 0024 FEE7     		b	.L191
 1266              	.LVL145:
 1267              	.L190:
 1268 0026 0446     		mov	r4, r0
 1269 0028 1F46     		mov	r7, r3
 1270 002a 9146     		mov	r9, r2
 1271 002c 8A46     		mov	r10, r1
 1272              	.LBE232:
 1273              	.LBE231:
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1274              		.loc 1 945 0
 1275 002e FFF7FEFF 		bl	vPortValidateInterruptPriority
 1276              	.LVL146:
 1277              	.LBB233:
 1278              	.LBB234:
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1279              		.loc 2 253 0
 1280              		.syntax unified
 1281              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1282 0032 EFF31188 			mrs r8, basepri											
 1283 0036 4FF05003 		mov r3, #80												
 1284 003a 83F31188 		msr basepri, r3											
 1285 003e BFF36F8F 		isb														
 1286 0042 BFF34F8F 		dsb														
 1287              	
 1288              	@ 0 "" 2
 1289              		.thumb
 1290              		.syntax unified
 1291              	.LBE234:
 1292              	.LBE233:
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1293              		.loc 1 954 0
 1294 0046 A26B     		ldr	r2, [r4, #56]
 1295 0048 E36B     		ldr	r3, [r4, #60]
 1296 004a 9A42     		cmp	r2, r3
 1297 004c 1BD3     		bcc	.L192
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1298              		.loc 1 954 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 66


 1299 004e 022F     		cmp	r7, #2
 1300 0050 34D0     		beq	.L193
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1301              		.loc 1 1063 0 is_stmt 1
 1302 0052 0020     		movs	r0, #0
 1303              	.LVL147:
 1304              	.L194:
 1305              	.LBB235:
 1306              	.LBB236:
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1307              		.loc 2 271 0
 1308              		.syntax unified
 1309              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1310 0054 88F31188 			msr basepri, r8	
 1311              	@ 0 "" 2
 1312              	.LVL148:
 1313              		.thumb
 1314              		.syntax unified
 1315              	.LBE236:
 1316              	.LBE235:
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1317              		.loc 1 1069 0
 1318 0058 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1319              	.LVL149:
 1320              	.L226:
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1321              		.loc 1 928 0 discriminator 2
 1322 005c 046C     		ldr	r4, [r0, #64]
 1323 005e 002C     		cmp	r4, #0
 1324 0060 D3D0     		beq	.L188
 1325              	.LBB238:
 1326              	.LBB239:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1327              		.loc 2 237 0
 1328              		.syntax unified
 1329              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1330 0062 4FF05003 			mov r3, #80												
 1331 0066 83F31188 		msr basepri, r3											
 1332 006a BFF36F8F 		isb														
 1333 006e BFF34F8F 		dsb														
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 67


 1334              	
 1335              	@ 0 "" 2
 1336              	.LVL150:
 1337              		.thumb
 1338              		.syntax unified
 1339              	.L189:
 1340 0072 FEE7     		b	.L189
 1341              	.LVL151:
 1342              	.L225:
 1343              	.LCFI8:
 1344              		.cfi_def_cfa_offset 0
 1345              		.cfi_restore 4
 1346              		.cfi_restore 5
 1347              		.cfi_restore 6
 1348              		.cfi_restore 7
 1349              		.cfi_restore 8
 1350              		.cfi_restore 9
 1351              		.cfi_restore 10
 1352              		.cfi_restore 14
 1353              	.LBE239:
 1354              	.LBE238:
 1355              	.LBB240:
 1356              	.LBB241:
 1357              		.syntax unified
 1358              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1359 0074 4FF05003 			mov r3, #80												
 1360 0078 83F31188 		msr basepri, r3											
 1361 007c BFF36F8F 		isb														
 1362 0080 BFF34F8F 		dsb														
 1363              	
 1364              	@ 0 "" 2
 1365              	.LVL152:
 1366              		.thumb
 1367              		.syntax unified
 1368              	.L187:
 1369 0084 FEE7     		b	.L187
 1370              	.LVL153:
 1371              	.L192:
 1372              	.LCFI9:
 1373              		.cfi_def_cfa_offset 32
 1374              		.cfi_offset 4, -32
 1375              		.cfi_offset 5, -28
 1376              		.cfi_offset 6, -24
 1377              		.cfi_offset 7, -20
 1378              		.cfi_offset 8, -16
 1379              		.cfi_offset 9, -12
 1380              		.cfi_offset 10, -8
 1381              		.cfi_offset 14, -4
 1382              	.LBE241:
 1383              	.LBE240:
 1384              	.LBB242:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1385              		.loc 1 956 0
 1386 0086 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1387              	.LBB243:
 1388              	.LBB244:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 68


 1389              		.loc 1 1706 0
 1390 008a 226C     		ldr	r2, [r4, #64]
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1391              		.loc 1 1704 0
 1392 008c A66B     		ldr	r6, [r4, #56]
 1393              	.LBE244:
 1394              	.LBE243:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1395              		.loc 1 956 0
 1396 008e 6DB2     		sxtb	r5, r5
 1397              	.LVL154:
 1398              	.LBB250:
 1399              	.LBB245:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1400              		.loc 1 1706 0
 1401 0090 DAB1     		cbz	r2, .L202
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1402              		.loc 1 1723 0
 1403 0092 6FB3     		cbz	r7, .L227
 1404              	.LVL155:
 1405              	.L197:
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 1406              		.loc 1 1738 0
 1407 0094 5146     		mov	r1, r10
 1408 0096 E068     		ldr	r0, [r4, #12]
 1409 0098 FFF7FEFF 		bl	memcpy
 1410              	.LVL156:
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 1411              		.loc 1 1739 0
 1412 009c 236C     		ldr	r3, [r4, #64]
 1413 009e E268     		ldr	r2, [r4, #12]
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1414              		.loc 1 1740 0
 1415 00a0 2168     		ldr	r1, [r4]
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 1416              		.loc 1 1739 0
 1417 00a2 5B42     		negs	r3, r3
 1418 00a4 1A44     		add	r2, r2, r3
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1419              		.loc 1 1740 0
 1420 00a6 8A42     		cmp	r2, r1
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 1421              		.loc 1 1739 0
 1422 00a8 E260     		str	r2, [r4, #12]
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1423              		.loc 1 1740 0
 1424 00aa 02D2     		bcs	.L198
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1425              		.loc 1 1742 0
 1426 00ac 6268     		ldr	r2, [r4, #4]
 1427 00ae 1344     		add	r3, r3, r2
 1428 00b0 E360     		str	r3, [r4, #12]
 1429              	.L198:
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1430              		.loc 1 1749 0
 1431 00b2 022F     		cmp	r7, #2
 1432 00b4 0FD1     		bne	.L196
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 69


1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1433              		.loc 1 1751 0
 1434 00b6 76B1     		cbz	r6, .L196
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1435              		.loc 1 1757 0
 1436 00b8 013E     		subs	r6, r6, #1
 1437              	.LVL157:
 1438 00ba 0CE0     		b	.L196
 1439              	.LVL158:
 1440              	.L193:
 1441              	.LBE245:
 1442              	.LBE250:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1443              		.loc 1 956 0
 1444 00bc 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1445              	.LBB251:
 1446              	.LBB246:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1447              		.loc 1 1706 0
 1448 00c0 226C     		ldr	r2, [r4, #64]
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1449              		.loc 1 1704 0
 1450 00c2 A66B     		ldr	r6, [r4, #56]
 1451              	.LBE246:
 1452              	.LBE251:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1453              		.loc 1 956 0
 1454 00c4 6DB2     		sxtb	r5, r5
 1455              	.LVL159:
 1456              	.LBB252:
 1457              	.LBB247:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1458              		.loc 1 1706 0
 1459 00c6 002A     		cmp	r2, #0
 1460 00c8 E4D1     		bne	.L197
 1461              	.LVL160:
 1462              	.L202:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1463              		.loc 1 1710 0
 1464 00ca 2768     		ldr	r7, [r4]
 1465              	.LVL161:
 1466 00cc 1FB9     		cbnz	r7, .L196
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 1467              		.loc 1 1713 0
 1468 00ce 6068     		ldr	r0, [r4, #4]
 1469 00d0 FFF7FEFF 		bl	xTaskPriorityDisinherit
 1470              	.LVL162:
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1471              		.loc 1 1714 0
 1472 00d4 6760     		str	r7, [r4, #4]
 1473              	.L196:
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1474              		.loc 1 1770 0
 1475 00d6 0136     		adds	r6, r6, #1
 1476              	.LVL163:
 1477              	.LBE247:
 1478              	.LBE252:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 70


 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1479              		.loc 1 969 0
 1480 00d8 6B1C     		adds	r3, r5, #1
 1481              	.LBB253:
 1482              	.LBB248:
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1483              		.loc 1 1770 0
 1484 00da A663     		str	r6, [r4, #56]
 1485              	.LVL164:
 1486              	.LBE248:
 1487              	.LBE253:
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1488              		.loc 1 969 0
 1489 00dc 16D0     		beq	.L228
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1490              		.loc 1 1055 0
 1491 00de 6B1C     		adds	r3, r5, #1
 1492 00e0 5BB2     		sxtb	r3, r3
 1493 00e2 84F84530 		strb	r3, [r4, #69]
 1494              	.L224:
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1495              		.loc 1 1058 0
 1496 00e6 0120     		movs	r0, #1
 1497              	.LVL165:
 1498              	.LBE242:
 1499              	.LBB255:
 1500              	.LBB237:
 1501              		.loc 2 271 0
 1502              		.syntax unified
 1503              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1504 00e8 88F31188 			msr basepri, r8	
 1505              	@ 0 "" 2
 1506              	.LVL166:
 1507              		.thumb
 1508              		.syntax unified
 1509              	.LBE237:
 1510              	.LBE255:
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1511              		.loc 1 1069 0
 1512 00ec BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1513              	.LVL167:
 1514              	.L227:
 1515              	.LBB256:
 1516              	.LBB254:
 1517              	.LBB249:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1518              		.loc 1 1725 0
 1519 00f0 5146     		mov	r1, r10
 1520 00f2 A068     		ldr	r0, [r4, #8]
 1521 00f4 FFF7FEFF 		bl	memcpy
 1522              	.LVL168:
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 1523              		.loc 1 1726 0
 1524 00f8 A368     		ldr	r3, [r4, #8]
 1525 00fa 216C     		ldr	r1, [r4, #64]
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1526              		.loc 1 1727 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 71


 1527 00fc 6268     		ldr	r2, [r4, #4]
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 1528              		.loc 1 1726 0
 1529 00fe 0B44     		add	r3, r3, r1
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1530              		.loc 1 1727 0
 1531 0100 9342     		cmp	r3, r2
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 1532              		.loc 1 1726 0
 1533 0102 A360     		str	r3, [r4, #8]
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1534              		.loc 1 1727 0
 1535 0104 E7D3     		bcc	.L196
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1536              		.loc 1 1729 0
 1537 0106 2368     		ldr	r3, [r4]
 1538 0108 A360     		str	r3, [r4, #8]
 1539 010a E4E7     		b	.L196
 1540              	.LVL169:
 1541              	.L228:
 1542              	.LBE249:
 1543              	.LBE254:
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1544              		.loc 1 1024 0
 1545 010c 636A     		ldr	r3, [r4, #36]
 1546 010e 002B     		cmp	r3, #0
 1547 0110 E9D0     		beq	.L224
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1548              		.loc 1 1026 0
 1549 0112 04F12400 		add	r0, r4, #36
 1550 0116 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1551              	.LVL170:
 1552 011a 0028     		cmp	r0, #0
 1553 011c E3D0     		beq	.L224
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1554              		.loc 1 1030 0
 1555 011e B9F1000F 		cmp	r9, #0
 1556 0122 E0D0     		beq	.L224
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1557              		.loc 1 1032 0
 1558 0124 0120     		movs	r0, #1
 1559 0126 C9F80000 		str	r0, [r9]
 1560 012a 93E7     		b	.L194
 1561              	.LBE256:
 1562              		.cfi_endproc
 1563              	.LFE11:
 1565              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1566              		.align	1
 1567              		.p2align 2,,3
 1568              		.global	xQueueGiveFromISR
 1569              		.syntax unified
 1570              		.thumb
 1571              		.thumb_func
 1572              		.fpu fpv4-sp-d16
 1574              	xQueueGiveFromISR:
 1575              	.LFB12:
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 72


 1576              		.loc 1 1073 0
 1577              		.cfi_startproc
 1578              		@ args = 0, pretend = 0, frame = 0
 1579              		@ frame_needed = 0, uses_anonymous_args = 0
 1580              	.LVL171:
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1581              		.loc 1 1084 0
 1582 0000 70B3     		cbz	r0, .L253
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1583              		.loc 1 1088 0
 1584 0002 036C     		ldr	r3, [r0, #64]
 1585 0004 43B1     		cbz	r3, .L232
 1586              	.LBB257:
 1587              	.LBB258:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1588              		.loc 2 237 0
 1589              		.syntax unified
 1590              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1591 0006 4FF05003 			mov r3, #80												
 1592 000a 83F31188 		msr basepri, r3											
 1593 000e BFF36F8F 		isb														
 1594 0012 BFF34F8F 		dsb														
 1595              	
 1596              	@ 0 "" 2
 1597              	.LVL172:
 1598              		.thumb
 1599              		.syntax unified
 1600              	.L233:
 1601 0016 FEE7     		b	.L233
 1602              	.L232:
 1603              	.LBE258:
 1604              	.LBE257:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1605              		.loc 1 1093 0
 1606 0018 0368     		ldr	r3, [r0]
 1607 001a 53B3     		cbz	r3, .L254
 1608              	.L234:
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1609              		.loc 1 1073 0
 1610 001c 70B5     		push	{r4, r5, r6, lr}
 1611              	.LCFI10:
 1612              		.cfi_def_cfa_offset 16
 1613              		.cfi_offset 4, -16
 1614              		.cfi_offset 5, -12
 1615              		.cfi_offset 6, -8
 1616              		.cfi_offset 14, -4
 1617 001e 0446     		mov	r4, r0
 1618 0020 0D46     		mov	r5, r1
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1619              		.loc 1 1109 0
 1620 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1621              	.LVL173:
 1622              	.LBB259:
 1623              	.LBB260:
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1624              		.loc 2 253 0
 1625              		.syntax unified
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 73


 1626              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1627 0026 EFF31186 			mrs r6, basepri											
 1628 002a 4FF05003 		mov r3, #80												
 1629 002e 83F31188 		msr basepri, r3											
 1630 0032 BFF36F8F 		isb														
 1631 0036 BFF34F8F 		dsb														
 1632              	
 1633              	@ 0 "" 2
 1634              		.thumb
 1635              		.syntax unified
 1636              	.LBE260:
 1637              	.LBE259:
 1638              	.LBB261:
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1639              		.loc 1 1113 0
 1640 003a A26B     		ldr	r2, [r4, #56]
 1641              	.LVL174:
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1642              		.loc 1 1118 0
 1643 003c E36B     		ldr	r3, [r4, #60]
 1644 003e 9342     		cmp	r3, r2
 1645 0040 31D9     		bls	.L240
 1646              	.LBB262:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1647              		.loc 1 1120 0
 1648 0042 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1649              		.loc 1 1130 0
 1650 0046 0132     		adds	r2, r2, #1
 1651              	.LVL175:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1652              		.loc 1 1120 0
 1653 0048 5BB2     		sxtb	r3, r3
 1654              	.LVL176:
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1655              		.loc 1 1130 0
 1656 004a A263     		str	r2, [r4, #56]
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1657              		.loc 1 1134 0
 1658 004c 5A1C     		adds	r2, r3, #1
 1659              	.LVL177:
 1660 004e 1CD0     		beq	.L255
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1661              		.loc 1 1220 0
 1662 0050 0133     		adds	r3, r3, #1
 1663              	.LVL178:
 1664 0052 5BB2     		sxtb	r3, r3
 1665 0054 84F84530 		strb	r3, [r4, #69]
 1666              	.LVL179:
 1667              	.L252:
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1668              		.loc 1 1223 0
 1669 0058 0120     		movs	r0, #1
 1670              	.L236:
 1671              	.LVL180:
 1672              	.LBE262:
 1673              	.LBE261:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 74


 1674              	.LBB264:
 1675              	.LBB265:
 1676              		.loc 2 271 0
 1677              		.syntax unified
 1678              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1679 005a 86F31188 			msr basepri, r6	
 1680              	@ 0 "" 2
 1681              	.LVL181:
 1682              		.thumb
 1683              		.syntax unified
 1684              	.LBE265:
 1685              	.LBE264:
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1686              		.loc 1 1234 0
 1687 005e 70BD     		pop	{r4, r5, r6, pc}
 1688              	.LVL182:
 1689              	.L253:
 1690              	.LCFI11:
 1691              		.cfi_def_cfa_offset 0
 1692              		.cfi_restore 4
 1693              		.cfi_restore 5
 1694              		.cfi_restore 6
 1695              		.cfi_restore 14
 1696              	.LBB266:
 1697              	.LBB267:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1698              		.loc 2 237 0
 1699              		.syntax unified
 1700              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1701 0060 4FF05003 			mov r3, #80												
 1702 0064 83F31188 		msr basepri, r3											
 1703 0068 BFF36F8F 		isb														
 1704 006c BFF34F8F 		dsb														
 1705              	
 1706              	@ 0 "" 2
 1707              	.LVL183:
 1708              		.thumb
 1709              		.syntax unified
 1710              	.L231:
 1711 0070 FEE7     		b	.L231
 1712              	.L254:
 1713              	.LBE267:
 1714              	.LBE266:
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1715              		.loc 1 1093 0 discriminator 2
 1716 0072 4368     		ldr	r3, [r0, #4]
 1717 0074 002B     		cmp	r3, #0
 1718 0076 D1D0     		beq	.L234
 1719              	.LBB268:
 1720              	.LBB269:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1721              		.loc 2 237 0
 1722              		.syntax unified
 1723              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1724 0078 4FF05003 			mov r3, #80												
 1725 007c 83F31188 		msr basepri, r3											
 1726 0080 BFF36F8F 		isb														
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 75


 1727 0084 BFF34F8F 		dsb														
 1728              	
 1729              	@ 0 "" 2
 1730              	.LVL184:
 1731              		.thumb
 1732              		.syntax unified
 1733              	.L235:
 1734 0088 FEE7     		b	.L235
 1735              	.LVL185:
 1736              	.L255:
 1737              	.LCFI12:
 1738              		.cfi_def_cfa_offset 16
 1739              		.cfi_offset 4, -16
 1740              		.cfi_offset 5, -12
 1741              		.cfi_offset 6, -8
 1742              		.cfi_offset 14, -4
 1743              	.LBE269:
 1744              	.LBE268:
 1745              	.LBB270:
 1746              	.LBB263:
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1747              		.loc 1 1189 0
 1748 008a 636A     		ldr	r3, [r4, #36]
 1749              	.LVL186:
 1750 008c 002B     		cmp	r3, #0
 1751 008e E3D0     		beq	.L252
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1752              		.loc 1 1191 0
 1753 0090 04F12400 		add	r0, r4, #36
 1754 0094 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1755              	.LVL187:
 1756 0098 0028     		cmp	r0, #0
 1757 009a DDD0     		beq	.L252
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1758              		.loc 1 1195 0
 1759 009c 002D     		cmp	r5, #0
 1760 009e DBD0     		beq	.L252
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1761              		.loc 1 1197 0
 1762 00a0 0120     		movs	r0, #1
 1763 00a2 2860     		str	r0, [r5]
 1764 00a4 D9E7     		b	.L236
 1765              	.LVL188:
 1766              	.L240:
 1767              	.LBE263:
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1768              		.loc 1 1228 0
 1769 00a6 0020     		movs	r0, #0
 1770 00a8 D7E7     		b	.L236
 1771              	.LBE270:
 1772              		.cfi_endproc
 1773              	.LFE12:
 1775 00aa 00BF     		.section	.text.xQueueGenericReceive,"ax",%progbits
 1776              		.align	1
 1777              		.p2align 2,,3
 1778              		.global	xQueueGenericReceive
 1779              		.syntax unified
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 76


 1780              		.thumb
 1781              		.thumb_func
 1782              		.fpu fpv4-sp-d16
 1784              	xQueueGenericReceive:
 1785              	.LFB13:
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1786              		.loc 1 1238 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 16
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
 1790              	.LVL189:
 1791 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1792              	.LCFI13:
 1793              		.cfi_def_cfa_offset 36
 1794              		.cfi_offset 4, -36
 1795              		.cfi_offset 5, -32
 1796              		.cfi_offset 6, -28
 1797              		.cfi_offset 7, -24
 1798              		.cfi_offset 8, -20
 1799              		.cfi_offset 9, -16
 1800              		.cfi_offset 10, -12
 1801              		.cfi_offset 11, -8
 1802              		.cfi_offset 14, -4
 1803 0004 85B0     		sub	sp, sp, #20
 1804              	.LCFI14:
 1805              		.cfi_def_cfa_offset 56
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1806              		.loc 1 1238 0
 1807 0006 0192     		str	r2, [sp, #4]
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1808              		.loc 1 1244 0
 1809 0008 0028     		cmp	r0, #0
 1810 000a 00F05881 		beq	.L423
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1811              		.loc 1 1245 0
 1812 000e 0029     		cmp	r1, #0
 1813 0010 00F04881 		beq	.L424
 1814              	.LVL190:
 1815              	.L259:
 1816 0014 0446     		mov	r4, r0
 1817 0016 9846     		mov	r8, r3
 1818 0018 0F46     		mov	r7, r1
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1819              		.loc 1 1248 0
 1820 001a FFF7FEFF 		bl	xTaskGetSchedulerState
 1821              	.LVL191:
 1822 001e 50B9     		cbnz	r0, .L264
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1823              		.loc 1 1248 0 is_stmt 0 discriminator 2
 1824 0020 019B     		ldr	r3, [sp, #4]
 1825 0022 43B1     		cbz	r3, .L264
 1826              	.LBB296:
 1827              	.LBB297:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1828              		.loc 2 237 0 is_stmt 1
 1829              		.syntax unified
 1830              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 77


 1831 0024 4FF05003 			mov r3, #80												
 1832 0028 83F31188 		msr basepri, r3											
 1833 002c BFF36F8F 		isb														
 1834 0030 BFF34F8F 		dsb														
 1835              	
 1836              	@ 0 "" 2
 1837              	.LVL192:
 1838              		.thumb
 1839              		.syntax unified
 1840              	.L265:
 1841 0034 FEE7     		b	.L265
 1842              	.L264:
 1843              	.LBE297:
 1844              	.LBE296:
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1845              		.loc 1 1258 0
 1846 0036 FFF7FEFF 		bl	vPortEnterCritical
 1847              	.LVL193:
 1848              	.LBB298:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1849              		.loc 1 1260 0
 1850 003a A56B     		ldr	r5, [r4, #56]
 1851              	.LVL194:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1852              		.loc 1 1264 0
 1853 003c 002D     		cmp	r5, #0
 1854 003e 40F0BA80 		bne	.L262
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1855              		.loc 1 1343 0
 1856 0042 019B     		ldr	r3, [sp, #4]
 1857 0044 002B     		cmp	r3, #0
 1858 0046 6AD0     		beq	.L267
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1859              		.loc 1 1355 0
 1860 0048 02A8     		add	r0, sp, #8
 1861 004a FFF7FEFF 		bl	vTaskSetTimeOutState
 1862              	.LVL195:
 1863              	.LBE298:
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1864              		.loc 1 1401 0
 1865 004e DFF8BCB2 		ldr	fp, .L431
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1866              		.loc 1 1371 0
 1867 0052 AA46     		mov	r10, r5
 1868 0054 04F12406 		add	r6, r4, #36
 1869              	.L278:
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1870              		.loc 1 1365 0
 1871 0058 FFF7FEFF 		bl	vPortExitCritical
 1872              	.LVL196:
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1873              		.loc 1 1370 0
 1874 005c FFF7FEFF 		bl	vTaskSuspendAll
 1875              	.LVL197:
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1876              		.loc 1 1371 0
 1877 0060 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 78


 1878              	.LVL198:
 1879 0064 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1880 0068 FF2B     		cmp	r3, #255
 1881 006a 08BF     		it	eq
 1882 006c 84F844A0 		strbeq	r10, [r4, #68]
 1883 0070 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1884 0074 FF2B     		cmp	r3, #255
 1885 0076 08BF     		it	eq
 1886 0078 84F845A0 		strbeq	r10, [r4, #69]
 1887 007c FFF7FEFF 		bl	vPortExitCritical
 1888              	.LVL199:
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1889              		.loc 1 1374 0
 1890 0080 01A9     		add	r1, sp, #4
 1891 0082 02A8     		add	r0, sp, #8
 1892 0084 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1893              	.LVL200:
 1894 0088 0028     		cmp	r0, #0
 1895 008a 4ED1     		bne	.L281
 1896              	.LVL201:
 1897              	.LBB303:
 1898              	.LBB304:
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1899              		.loc 1 1918 0
 1900 008c FFF7FEFF 		bl	vPortEnterCritical
 1901              	.LVL202:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1902              		.loc 1 1920 0
 1903 0090 A36B     		ldr	r3, [r4, #56]
 1904 0092 002B     		cmp	r3, #0
 1905 0094 00F0B980 		beq	.L282
 1906              	.LVL203:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1907              		.loc 1 1929 0
 1908 0098 FFF7FEFF 		bl	vPortExitCritical
 1909              	.LVL204:
 1910              	.LBE304:
 1911              	.LBE303:
 1912              	.LBB306:
 1913              	.LBB307:
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1914              		.loc 1 1802 0
 1915 009c FFF7FEFF 		bl	vPortEnterCritical
 1916              	.LVL205:
 1917              	.LBB308:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1918              		.loc 1 1804 0
 1919 00a0 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1920              	.LVL206:
 1921 00a4 6DB2     		sxtb	r5, r5
 1922              	.LVL207:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1923              		.loc 1 1807 0
 1924 00a6 002D     		cmp	r5, #0
 1925 00a8 0ADC     		bgt	.L289
 1926 00aa 0CE0     		b	.L286
 1927              	.L425:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 79


1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1928              		.loc 1 1857 0
 1929 00ac 3046     		mov	r0, r6
 1930 00ae FFF7FEFF 		bl	xTaskRemoveFromEventList
 1931              	.LVL208:
 1932 00b2 08B1     		cbz	r0, .L288
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1933              		.loc 1 1861 0
 1934 00b4 FFF7FEFF 		bl	vTaskMissedYield
 1935              	.LVL209:
 1936              	.L288:
 1937 00b8 013D     		subs	r5, r5, #1
 1938              	.LVL210:
 1939 00ba EBB2     		uxtb	r3, r5
 1940 00bc 5DB2     		sxtb	r5, r3
 1941              	.LVL211:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1942              		.loc 1 1807 0
 1943 00be 13B1     		cbz	r3, .L286
 1944              	.L289:
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1945              		.loc 1 1855 0
 1946 00c0 636A     		ldr	r3, [r4, #36]
 1947 00c2 002B     		cmp	r3, #0
 1948 00c4 F2D1     		bne	.L425
 1949              	.L286:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1950              		.loc 1 1878 0
 1951 00c6 FF23     		movs	r3, #255
 1952 00c8 84F84530 		strb	r3, [r4, #69]
 1953              	.LBE308:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1954              		.loc 1 1880 0
 1955 00cc FFF7FEFF 		bl	vPortExitCritical
 1956              	.LVL212:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 1957              		.loc 1 1883 0
 1958 00d0 FFF7FEFF 		bl	vPortEnterCritical
 1959              	.LVL213:
 1960              	.LBB309:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1961              		.loc 1 1885 0
 1962 00d4 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 1963              	.LVL214:
 1964 00d8 6DB2     		sxtb	r5, r5
 1965              	.LVL215:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1966              		.loc 1 1887 0
 1967 00da 002D     		cmp	r5, #0
 1968 00dc 10DD     		ble	.L285
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1969              		.loc 1 1889 0
 1970 00de 2369     		ldr	r3, [r4, #16]
 1971 00e0 73B1     		cbz	r3, .L285
 1972 00e2 04F11009 		add	r9, r4, #16
 1973              	.L291:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 80


 1974              		.loc 1 1891 0
 1975 00e6 4846     		mov	r0, r9
 1976 00e8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1977              	.LVL216:
 1978 00ec 08B1     		cbz	r0, .L292
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1979              		.loc 1 1893 0
 1980 00ee FFF7FEFF 		bl	vTaskMissedYield
 1981              	.LVL217:
 1982              	.L292:
 1983 00f2 013D     		subs	r5, r5, #1
 1984              	.LVL218:
 1985 00f4 EBB2     		uxtb	r3, r5
 1986 00f6 5DB2     		sxtb	r5, r3
 1987              	.LVL219:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1988              		.loc 1 1887 0
 1989 00f8 13B1     		cbz	r3, .L285
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1990              		.loc 1 1889 0
 1991 00fa 2369     		ldr	r3, [r4, #16]
 1992 00fc 002B     		cmp	r3, #0
 1993 00fe F2D1     		bne	.L291
 1994              	.L285:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1995              		.loc 1 1908 0
 1996 0100 FF23     		movs	r3, #255
 1997 0102 84F84430 		strb	r3, [r4, #68]
 1998              	.LBE309:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 1999              		.loc 1 1910 0
 2000 0106 FFF7FEFF 		bl	vPortExitCritical
 2001              	.LVL220:
 2002              	.LBE307:
 2003              	.LBE306:
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2004              		.loc 1 1412 0
 2005 010a FFF7FEFF 		bl	xTaskResumeAll
 2006              	.LVL221:
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2007              		.loc 1 1258 0
 2008 010e FFF7FEFF 		bl	vPortEnterCritical
 2009              	.LVL222:
 2010              	.LBB310:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2011              		.loc 1 1260 0
 2012 0112 A56B     		ldr	r5, [r4, #56]
 2013              	.LVL223:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2014              		.loc 1 1264 0
 2015 0114 002D     		cmp	r5, #0
 2016 0116 4ED1     		bne	.L262
 2017              	.L411:
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2018              		.loc 1 1343 0
 2019 0118 019B     		ldr	r3, [sp, #4]
 2020 011a 002B     		cmp	r3, #0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 81


 2021 011c 9CD1     		bne	.L278
 2022              	.LVL224:
 2023              	.L267:
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2024              		.loc 1 1347 0
 2025 011e FFF7FEFF 		bl	vPortExitCritical
 2026              	.LVL225:
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2027              		.loc 1 1349 0
 2028 0122 0020     		movs	r0, #0
 2029              	.LBE310:
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2030              		.loc 1 1431 0
 2031 0124 05B0     		add	sp, sp, #20
 2032              	.LCFI15:
 2033              		.cfi_remember_state
 2034              		.cfi_def_cfa_offset 36
 2035              		@ sp needed
 2036 0126 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2037              	.LVL226:
 2038              	.L281:
 2039              	.LCFI16:
 2040              		.cfi_restore_state
 2041              	.LBB311:
 2042              	.LBB312:
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2043              		.loc 1 1802 0
 2044 012a FFF7FEFF 		bl	vPortEnterCritical
 2045              	.LVL227:
 2046              	.LBB313:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2047              		.loc 1 1804 0
 2048 012e 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 2049              	.LVL228:
 2050 0132 6DB2     		sxtb	r5, r5
 2051              	.LVL229:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2052              		.loc 1 1807 0
 2053 0134 002D     		cmp	r5, #0
 2054 0136 0ADC     		bgt	.L314
 2055 0138 0CE0     		b	.L311
 2056              	.L426:
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2057              		.loc 1 1857 0
 2058 013a 3046     		mov	r0, r6
 2059 013c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2060              	.LVL230:
 2061 0140 08B1     		cbz	r0, .L313
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2062              		.loc 1 1861 0
 2063 0142 FFF7FEFF 		bl	vTaskMissedYield
 2064              	.LVL231:
 2065              	.L313:
 2066 0146 013D     		subs	r5, r5, #1
 2067              	.LVL232:
 2068 0148 EBB2     		uxtb	r3, r5
 2069 014a 5DB2     		sxtb	r5, r3
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 82


 2070              	.LVL233:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2071              		.loc 1 1807 0
 2072 014c 13B1     		cbz	r3, .L311
 2073              	.L314:
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2074              		.loc 1 1855 0
 2075 014e 636A     		ldr	r3, [r4, #36]
 2076 0150 002B     		cmp	r3, #0
 2077 0152 F2D1     		bne	.L426
 2078              	.L311:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2079              		.loc 1 1878 0
 2080 0154 FF23     		movs	r3, #255
 2081 0156 84F84530 		strb	r3, [r4, #69]
 2082              	.LBE313:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2083              		.loc 1 1880 0
 2084 015a FFF7FEFF 		bl	vPortExitCritical
 2085              	.LVL234:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2086              		.loc 1 1883 0
 2087 015e FFF7FEFF 		bl	vPortEnterCritical
 2088              	.LVL235:
 2089              	.LBB314:
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2090              		.loc 1 1885 0
 2091 0162 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 2092              	.LVL236:
 2093 0166 6DB2     		sxtb	r5, r5
 2094              	.LVL237:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2095              		.loc 1 1887 0
 2096 0168 002D     		cmp	r5, #0
 2097 016a 11DD     		ble	.L310
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2098              		.loc 1 1889 0
 2099 016c 2369     		ldr	r3, [r4, #16]
 2100 016e 7BB1     		cbz	r3, .L310
 2101 0170 04F11009 		add	r9, r4, #16
 2102 0174 01E0     		b	.L316
 2103              	.L318:
 2104 0176 2369     		ldr	r3, [r4, #16]
 2105 0178 53B1     		cbz	r3, .L310
 2106              	.L316:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2107              		.loc 1 1891 0
 2108 017a 4846     		mov	r0, r9
 2109 017c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2110              	.LVL238:
 2111 0180 08B1     		cbz	r0, .L317
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2112              		.loc 1 1893 0
 2113 0182 FFF7FEFF 		bl	vTaskMissedYield
 2114              	.LVL239:
 2115              	.L317:
 2116 0186 013D     		subs	r5, r5, #1
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 83


 2117              	.LVL240:
 2118 0188 EBB2     		uxtb	r3, r5
 2119 018a 5DB2     		sxtb	r5, r3
 2120              	.LVL241:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2121              		.loc 1 1887 0
 2122 018c 002B     		cmp	r3, #0
 2123 018e F2D1     		bne	.L318
 2124              	.L310:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2125              		.loc 1 1908 0
 2126 0190 FF23     		movs	r3, #255
 2127 0192 84F84430 		strb	r3, [r4, #68]
 2128              	.LBE314:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2129              		.loc 1 1910 0
 2130 0196 FFF7FEFF 		bl	vPortExitCritical
 2131              	.LVL242:
 2132              	.LBE312:
 2133              	.LBE311:
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2134              		.loc 1 1418 0
 2135 019a FFF7FEFF 		bl	xTaskResumeAll
 2136              	.LVL243:
 2137              	.LBB315:
 2138              	.LBB316:
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2139              		.loc 1 1918 0
 2140 019e FFF7FEFF 		bl	vPortEnterCritical
 2141              	.LVL244:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2142              		.loc 1 1920 0
 2143 01a2 A36B     		ldr	r3, [r4, #56]
 2144 01a4 002B     		cmp	r3, #0
 2145 01a6 BAD0     		beq	.L267
 2146              	.LVL245:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2147              		.loc 1 1929 0
 2148 01a8 FFF7FEFF 		bl	vPortExitCritical
 2149              	.LVL246:
 2150              	.L422:
 2151              	.LBE316:
 2152              	.LBE315:
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2153              		.loc 1 1258 0
 2154 01ac FFF7FEFF 		bl	vPortEnterCritical
 2155              	.LVL247:
 2156              	.LBB317:
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2157              		.loc 1 1260 0
 2158 01b0 A56B     		ldr	r5, [r4, #56]
 2159              	.LVL248:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2160              		.loc 1 1264 0
 2161 01b2 002D     		cmp	r5, #0
 2162 01b4 B0D0     		beq	.L411
 2163              	.LVL249:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 84


 2164              	.L262:
 2165              	.LBB299:
 2166              	.LBB300:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2167              		.loc 1 1778 0
 2168 01b6 226C     		ldr	r2, [r4, #64]
 2169              	.LBE300:
 2170              	.LBE299:
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2171              		.loc 1 1268 0
 2172 01b8 E668     		ldr	r6, [r4, #12]
 2173              	.LVL250:
 2174              	.LBB302:
 2175              	.LBB301:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2176              		.loc 1 1778 0
 2177 01ba 52B1     		cbz	r2, .L269
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2178              		.loc 1 1781 0
 2179 01bc 6168     		ldr	r1, [r4, #4]
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2180              		.loc 1 1780 0
 2181 01be B318     		adds	r3, r6, r2
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2182              		.loc 1 1781 0
 2183 01c0 8B42     		cmp	r3, r1
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2184              		.loc 1 1780 0
 2185 01c2 E360     		str	r3, [r4, #12]
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2186              		.loc 1 1783 0
 2187 01c4 24BF     		itt	cs
 2188 01c6 2368     		ldrcs	r3, [r4]
 2189 01c8 E360     		strcs	r3, [r4, #12]
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2190              		.loc 1 1789 0
 2191 01ca 3846     		mov	r0, r7
 2192 01cc E168     		ldr	r1, [r4, #12]
 2193 01ce FFF7FEFF 		bl	memcpy
 2194              	.LVL251:
 2195              	.L269:
 2196              	.LBE301:
 2197              	.LBE302:
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2198              		.loc 1 1272 0
 2199 01d2 B8F1000F 		cmp	r8, #0
 2200 01d6 40F08380 		bne	.L271
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2201              		.loc 1 1281 0
 2202 01da 2368     		ldr	r3, [r4]
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2203              		.loc 1 1277 0
 2204 01dc 013D     		subs	r5, r5, #1
 2205              	.LVL252:
 2206 01de A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2207              		.loc 1 1281 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 85


 2208 01e0 002B     		cmp	r3, #0
 2209 01e2 00F08680 		beq	.L427
 2210              	.L272:
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2211              		.loc 1 1294 0
 2212 01e6 2369     		ldr	r3, [r4, #16]
 2213 01e8 002B     		cmp	r3, #0
 2214 01ea 7CD0     		beq	.L274
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2215              		.loc 1 1296 0
 2216 01ec 04F11000 		add	r0, r4, #16
 2217 01f0 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2218              	.LVL253:
 2219 01f4 0028     		cmp	r0, #0
 2220 01f6 76D0     		beq	.L274
 2221              	.LVL254:
 2222              	.L413:
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2223              		.loc 1 1325 0
 2224 01f8 444B     		ldr	r3, .L431
 2225 01fa 4FF08052 		mov	r2, #268435456
 2226 01fe 1A60     		str	r2, [r3]
 2227              		.syntax unified
 2228              	@ 1325 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2229 0200 BFF34F8F 		dsb
 2230              	@ 0 "" 2
 2231              	@ 1325 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2232 0204 BFF36F8F 		isb
 2233              	@ 0 "" 2
 2234              		.thumb
 2235              		.syntax unified
 2236 0208 6DE0     		b	.L274
 2237              	.LVL255:
 2238              	.L282:
 2239              	.LBE317:
 2240              	.LBB318:
 2241              	.LBB305:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2242              		.loc 1 1929 0
 2243 020a FFF7FEFF 		bl	vPortExitCritical
 2244              	.LVL256:
 2245              	.LBE305:
 2246              	.LBE318:
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2247              		.loc 1 1382 0
 2248 020e 2368     		ldr	r3, [r4]
 2249 0210 002B     		cmp	r3, #0
 2250 0212 5DD0     		beq	.L428
 2251              	.L294:
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2252              		.loc 1 1397 0
 2253 0214 0199     		ldr	r1, [sp, #4]
 2254 0216 3046     		mov	r0, r6
 2255 0218 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2256              	.LVL257:
 2257              	.LBB319:
 2258              	.LBB320:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 86


1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2259              		.loc 1 1802 0
 2260 021c FFF7FEFF 		bl	vPortEnterCritical
 2261              	.LVL258:
 2262              	.LBB321:
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2263              		.loc 1 1804 0
 2264 0220 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 2265              	.LVL259:
 2266 0224 6DB2     		sxtb	r5, r5
 2267              	.LVL260:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2268              		.loc 1 1807 0
 2269 0226 002D     		cmp	r5, #0
 2270 0228 0ADC     		bgt	.L301
 2271 022a 0CE0     		b	.L299
 2272              	.L429:
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2273              		.loc 1 1857 0
 2274 022c 3046     		mov	r0, r6
 2275 022e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2276              	.LVL261:
 2277 0232 08B1     		cbz	r0, .L300
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2278              		.loc 1 1861 0
 2279 0234 FFF7FEFF 		bl	vTaskMissedYield
 2280              	.LVL262:
 2281              	.L300:
 2282 0238 013D     		subs	r5, r5, #1
 2283              	.LVL263:
 2284 023a EBB2     		uxtb	r3, r5
 2285 023c 5DB2     		sxtb	r5, r3
 2286              	.LVL264:
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2287              		.loc 1 1807 0
 2288 023e 13B1     		cbz	r3, .L299
 2289              	.L301:
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2290              		.loc 1 1855 0
 2291 0240 636A     		ldr	r3, [r4, #36]
 2292 0242 002B     		cmp	r3, #0
 2293 0244 F2D1     		bne	.L429
 2294              	.L299:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2295              		.loc 1 1878 0
 2296 0246 FF23     		movs	r3, #255
 2297 0248 84F84530 		strb	r3, [r4, #69]
 2298              	.LBE321:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2299              		.loc 1 1880 0
 2300 024c FFF7FEFF 		bl	vPortExitCritical
 2301              	.LVL265:
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2302              		.loc 1 1883 0
 2303 0250 FFF7FEFF 		bl	vPortEnterCritical
 2304              	.LVL266:
 2305              	.LBB322:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 87


1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2306              		.loc 1 1885 0
 2307 0254 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 2308              	.LVL267:
 2309 0258 6DB2     		sxtb	r5, r5
 2310              	.LVL268:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2311              		.loc 1 1887 0
 2312 025a 002D     		cmp	r5, #0
 2313 025c 10DD     		ble	.L297
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2314              		.loc 1 1889 0
 2315 025e 2369     		ldr	r3, [r4, #16]
 2316 0260 73B1     		cbz	r3, .L297
 2317 0262 04F11009 		add	r9, r4, #16
 2318              	.L304:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2319              		.loc 1 1891 0
 2320 0266 4846     		mov	r0, r9
 2321 0268 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2322              	.LVL269:
 2323 026c 08B1     		cbz	r0, .L305
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2324              		.loc 1 1893 0
 2325 026e FFF7FEFF 		bl	vTaskMissedYield
 2326              	.LVL270:
 2327              	.L305:
 2328 0272 013D     		subs	r5, r5, #1
 2329              	.LVL271:
 2330 0274 EBB2     		uxtb	r3, r5
 2331 0276 5DB2     		sxtb	r5, r3
 2332              	.LVL272:
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2333              		.loc 1 1887 0
 2334 0278 13B1     		cbz	r3, .L297
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2335              		.loc 1 1889 0
 2336 027a 2369     		ldr	r3, [r4, #16]
 2337 027c 002B     		cmp	r3, #0
 2338 027e F2D1     		bne	.L304
 2339              	.L297:
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2340              		.loc 1 1908 0
 2341 0280 FF23     		movs	r3, #255
 2342 0282 84F84430 		strb	r3, [r4, #68]
 2343              	.LBE322:
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 2344              		.loc 1 1910 0
 2345 0286 FFF7FEFF 		bl	vPortExitCritical
 2346              	.LVL273:
 2347              	.LBE320:
 2348              	.LBE319:
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2349              		.loc 1 1399 0
 2350 028a FFF7FEFF 		bl	xTaskResumeAll
 2351              	.LVL274:
 2352 028e 0028     		cmp	r0, #0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 88


 2353 0290 8CD1     		bne	.L422
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2354              		.loc 1 1401 0
 2355 0292 4FF08053 		mov	r3, #268435456
 2356 0296 CBF80030 		str	r3, [fp]
 2357              		.syntax unified
 2358              	@ 1401 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2359 029a BFF34F8F 		dsb
 2360              	@ 0 "" 2
 2361              	@ 1401 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2362 029e BFF36F8F 		isb
 2363              	@ 0 "" 2
 2364              		.thumb
 2365              		.syntax unified
 2366 02a2 83E7     		b	.L422
 2367              	.LVL275:
 2368              	.L424:
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 2369              		.loc 1 1245 0 discriminator 2
 2370 02a4 026C     		ldr	r2, [r0, #64]
 2371              	.LVL276:
 2372 02a6 002A     		cmp	r2, #0
 2373 02a8 3FF4B4AE 		beq	.L259
 2374              	.LBB323:
 2375              	.LBB324:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2376              		.loc 2 237 0
 2377              		.syntax unified
 2378              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2379 02ac 4FF05003 			mov r3, #80												
 2380 02b0 83F31188 		msr basepri, r3											
 2381 02b4 BFF36F8F 		isb														
 2382 02b8 BFF34F8F 		dsb														
 2383              	
 2384              	@ 0 "" 2
 2385              	.LVL277:
 2386              		.thumb
 2387              		.syntax unified
 2388              	.L260:
 2389 02bc FEE7     		b	.L260
 2390              	.LVL278:
 2391              	.L423:
 2392              	.LBE324:
 2393              	.LBE323:
 2394              	.LBB325:
 2395              	.LBB326:
 2396              		.syntax unified
 2397              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2398 02be 4FF05003 			mov r3, #80												
 2399 02c2 83F31188 		msr basepri, r3											
 2400 02c6 BFF36F8F 		isb														
 2401 02ca BFF34F8F 		dsb														
 2402              	
 2403              	@ 0 "" 2
 2404              	.LVL279:
 2405              		.thumb
 2406              		.syntax unified
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 89


 2407              	.L258:
 2408 02ce FEE7     		b	.L258
 2409              	.LVL280:
 2410              	.L428:
 2411              	.LBE326:
 2412              	.LBE325:
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2413              		.loc 1 1384 0
 2414 02d0 FFF7FEFF 		bl	vPortEnterCritical
 2415              	.LVL281:
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2416              		.loc 1 1386 0
 2417 02d4 6068     		ldr	r0, [r4, #4]
 2418 02d6 FFF7FEFF 		bl	vTaskPriorityInherit
 2419              	.LVL282:
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2420              		.loc 1 1388 0
 2421 02da FFF7FEFF 		bl	vPortExitCritical
 2422              	.LVL283:
 2423 02de 99E7     		b	.L294
 2424              	.LVL284:
 2425              	.L271:
 2426              	.LBB327:
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2427              		.loc 1 1320 0
 2428 02e0 636A     		ldr	r3, [r4, #36]
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2429              		.loc 1 1316 0
 2430 02e2 E660     		str	r6, [r4, #12]
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2431              		.loc 1 1320 0
 2432 02e4 4BB9     		cbnz	r3, .L430
 2433              	.LVL285:
 2434              	.L274:
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2435              		.loc 1 1338 0
 2436 02e6 FFF7FEFF 		bl	vPortExitCritical
 2437              	.LVL286:
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2438              		.loc 1 1339 0
 2439 02ea 0120     		movs	r0, #1
 2440              	.LBE327:
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2441              		.loc 1 1431 0
 2442 02ec 05B0     		add	sp, sp, #20
 2443              	.LCFI17:
 2444              		.cfi_remember_state
 2445              		.cfi_def_cfa_offset 36
 2446              		@ sp needed
 2447 02ee BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2448              	.LVL287:
 2449              	.L427:
 2450              	.LCFI18:
 2451              		.cfi_restore_state
 2452              	.LBB328:
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2453              		.loc 1 1285 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 90


 2454 02f2 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2455              	.LVL288:
 2456 02f6 6060     		str	r0, [r4, #4]
 2457 02f8 75E7     		b	.L272
 2458              	.LVL289:
 2459              	.L430:
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2460              		.loc 1 1322 0
 2461 02fa 04F12400 		add	r0, r4, #36
 2462 02fe FFF7FEFF 		bl	xTaskRemoveFromEventList
 2463              	.LVL290:
 2464 0302 0028     		cmp	r0, #0
 2465 0304 7FF478AF 		bne	.L413
 2466 0308 EDE7     		b	.L274
 2467              	.L432:
 2468 030a 00BF     		.align	2
 2469              	.L431:
 2470 030c 04ED00E0 		.word	-536810236
 2471              	.LBE328:
 2472              		.cfi_endproc
 2473              	.LFE13:
 2475              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2476              		.align	1
 2477              		.p2align 2,,3
 2478              		.global	xQueueReceiveFromISR
 2479              		.syntax unified
 2480              		.thumb
 2481              		.thumb_func
 2482              		.fpu fpv4-sp-d16
 2484              	xQueueReceiveFromISR:
 2485              	.LFB14:
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2486              		.loc 1 1435 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              	.LVL291:
 2491 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2492              	.LCFI19:
 2493              		.cfi_def_cfa_offset 32
 2494              		.cfi_offset 3, -32
 2495              		.cfi_offset 4, -28
 2496              		.cfi_offset 5, -24
 2497              		.cfi_offset 6, -20
 2498              		.cfi_offset 7, -16
 2499              		.cfi_offset 8, -12
 2500              		.cfi_offset 9, -8
 2501              		.cfi_offset 14, -4
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2502              		.loc 1 1440 0
 2503 0004 B8B1     		cbz	r0, .L459
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2504              		.loc 1 1441 0
 2505 0006 0029     		cmp	r1, #0
 2506 0008 37D0     		beq	.L460
 2507              	.L436:
 2508 000a 0446     		mov	r4, r0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 91


 2509 000c 9046     		mov	r8, r2
 2510 000e 8946     		mov	r9, r1
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2511              		.loc 1 1457 0
 2512 0010 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2513              	.LVL292:
 2514              	.LBB341:
 2515              	.LBB342:
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2516              		.loc 2 253 0
 2517              		.syntax unified
 2518              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2519 0014 EFF31187 			mrs r7, basepri											
 2520 0018 4FF05003 		mov r3, #80												
 2521 001c 83F31188 		msr basepri, r3											
 2522 0020 BFF36F8F 		isb														
 2523 0024 BFF34F8F 		dsb														
 2524              	
 2525              	@ 0 "" 2
 2526              		.thumb
 2527              		.syntax unified
 2528              	.LBE342:
 2529              	.LBE341:
 2530              	.LBB343:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2531              		.loc 1 1461 0
 2532 0028 A56B     		ldr	r5, [r4, #56]
 2533              	.LVL293:
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2534              		.loc 1 1464 0
 2535 002a 6DB9     		cbnz	r5, .L461
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2536              		.loc 1 1515 0
 2537 002c 2846     		mov	r0, r5
 2538              	.LVL294:
 2539              	.L438:
 2540              	.LBE343:
 2541              	.LBB350:
 2542              	.LBB351:
 2543              		.loc 2 271 0
 2544              		.syntax unified
 2545              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2546 002e 87F31188 			msr basepri, r7	
 2547              	@ 0 "" 2
 2548              	.LVL295:
 2549              		.thumb
 2550              		.syntax unified
 2551              	.LBE351:
 2552              	.LBE350:
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2553              		.loc 1 1522 0
 2554 0032 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2555              	.LVL296:
 2556              	.L459:
 2557              	.LBB352:
 2558              	.LBB353:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 92


 2559              		.loc 2 237 0
 2560              		.syntax unified
 2561              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2562 0036 4FF05003 			mov r3, #80												
 2563 003a 83F31188 		msr basepri, r3											
 2564 003e BFF36F8F 		isb														
 2565 0042 BFF34F8F 		dsb														
 2566              	
 2567              	@ 0 "" 2
 2568              	.LVL297:
 2569              		.thumb
 2570              		.syntax unified
 2571              	.L435:
 2572 0046 FEE7     		b	.L435
 2573              	.LVL298:
 2574              	.L461:
 2575              	.LBE353:
 2576              	.LBE352:
 2577              	.LBB354:
 2578              	.LBB344:
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2579              		.loc 1 1466 0
 2580 0048 94F84460 		ldrb	r6, [r4, #68]	@ zero_extendqisi2
 2581              	.LBB345:
 2582              	.LBB346:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2583              		.loc 1 1778 0
 2584 004c 226C     		ldr	r2, [r4, #64]
 2585              	.LBE346:
 2586              	.LBE345:
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2587              		.loc 1 1466 0
 2588 004e 76B2     		sxtb	r6, r6
 2589              	.LVL299:
 2590              	.LBB348:
 2591              	.LBB347:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2592              		.loc 1 1778 0
 2593 0050 52B1     		cbz	r2, .L439
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2594              		.loc 1 1780 0
 2595 0052 E168     		ldr	r1, [r4, #12]
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2596              		.loc 1 1781 0
 2597 0054 6368     		ldr	r3, [r4, #4]
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2598              		.loc 1 1780 0
 2599 0056 1144     		add	r1, r1, r2
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2600              		.loc 1 1781 0
 2601 0058 9942     		cmp	r1, r3
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2602              		.loc 1 1780 0
 2603 005a E160     		str	r1, [r4, #12]
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2604              		.loc 1 1783 0
 2605 005c 24BF     		itt	cs
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 93


 2606 005e 2168     		ldrcs	r1, [r4]
 2607 0060 E160     		strcs	r1, [r4, #12]
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2608              		.loc 1 1789 0
 2609 0062 4846     		mov	r0, r9
 2610 0064 FFF7FEFF 		bl	memcpy
 2611              	.LVL300:
 2612              	.L439:
 2613              	.LBE347:
 2614              	.LBE348:
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2615              		.loc 1 1471 0
 2616 0068 013D     		subs	r5, r5, #1
 2617              	.LVL301:
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2618              		.loc 1 1477 0
 2619 006a 731C     		adds	r3, r6, #1
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2620              		.loc 1 1471 0
 2621 006c A563     		str	r5, [r4, #56]
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2622              		.loc 1 1477 0
 2623 006e 10D0     		beq	.L462
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2624              		.loc 1 1508 0
 2625 0070 731C     		adds	r3, r6, #1
 2626 0072 5BB2     		sxtb	r3, r3
 2627 0074 84F84430 		strb	r3, [r4, #68]
 2628 0078 0DE0     		b	.L458
 2629              	.LVL302:
 2630              	.L460:
 2631              	.LBE344:
 2632              	.LBE354:
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2633              		.loc 1 1441 0 discriminator 2
 2634 007a 036C     		ldr	r3, [r0, #64]
 2635 007c 002B     		cmp	r3, #0
 2636 007e C4D0     		beq	.L436
 2637              	.LBB355:
 2638              	.LBB356:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2639              		.loc 2 237 0
 2640              		.syntax unified
 2641              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2642 0080 4FF05003 			mov r3, #80												
 2643 0084 83F31188 		msr basepri, r3											
 2644 0088 BFF36F8F 		isb														
 2645 008c BFF34F8F 		dsb														
 2646              	
 2647              	@ 0 "" 2
 2648              	.LVL303:
 2649              		.thumb
 2650              		.syntax unified
 2651              	.L437:
 2652 0090 FEE7     		b	.L437
 2653              	.LVL304:
 2654              	.L462:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 94


 2655              	.LBE356:
 2656              	.LBE355:
 2657              	.LBB357:
 2658              	.LBB349:
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2659              		.loc 1 1479 0
 2660 0092 2369     		ldr	r3, [r4, #16]
 2661 0094 0BB9     		cbnz	r3, .L442
 2662              	.L458:
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2663              		.loc 1 1511 0
 2664 0096 0120     		movs	r0, #1
 2665 0098 C9E7     		b	.L438
 2666              	.L442:
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2667              		.loc 1 1481 0
 2668 009a 04F11000 		add	r0, r4, #16
 2669 009e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2670              	.LVL305:
 2671 00a2 0028     		cmp	r0, #0
 2672 00a4 F7D0     		beq	.L458
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2673              		.loc 1 1485 0
 2674 00a6 B8F1000F 		cmp	r8, #0
 2675 00aa F4D0     		beq	.L458
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2676              		.loc 1 1487 0
 2677 00ac 0120     		movs	r0, #1
 2678 00ae C8F80000 		str	r0, [r8]
 2679 00b2 BCE7     		b	.L438
 2680              	.LBE349:
 2681              	.LBE357:
 2682              		.cfi_endproc
 2683              	.LFE14:
 2685              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2686              		.align	1
 2687              		.p2align 2,,3
 2688              		.global	xQueuePeekFromISR
 2689              		.syntax unified
 2690              		.thumb
 2691              		.thumb_func
 2692              		.fpu fpv4-sp-d16
 2694              	xQueuePeekFromISR:
 2695              	.LFB15:
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 2696              		.loc 1 1526 0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 0, uses_anonymous_args = 0
 2700              	.LVL306:
 2701 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2702              	.LCFI20:
 2703              		.cfi_def_cfa_offset 24
 2704              		.cfi_offset 3, -24
 2705              		.cfi_offset 4, -20
 2706              		.cfi_offset 5, -16
 2707              		.cfi_offset 6, -12
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 95


 2708              		.cfi_offset 7, -8
 2709              		.cfi_offset 14, -4
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2710              		.loc 1 1532 0
 2711 0002 A8B1     		cbz	r0, .L482
 2712 0004 036C     		ldr	r3, [r0, #64]
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2713              		.loc 1 1533 0
 2714 0006 29B3     		cbz	r1, .L483
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2715              		.loc 1 1534 0
 2716 0008 DBB1     		cbz	r3, .L467
 2717 000a 0446     		mov	r4, r0
 2718 000c 0D46     		mov	r5, r1
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2719              		.loc 1 1550 0
 2720 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 2721              	.LVL307:
 2722              	.LBB370:
 2723              	.LBB371:
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2724              		.loc 2 253 0
 2725              		.syntax unified
 2726              	@ 253 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2727 0012 EFF31187 			mrs r7, basepri											
 2728 0016 4FF05003 		mov r3, #80												
 2729 001a 83F31188 		msr basepri, r3											
 2730 001e BFF36F8F 		isb														
 2731 0022 BFF34F8F 		dsb														
 2732              	
 2733              	@ 0 "" 2
 2734              		.thumb
 2735              		.syntax unified
 2736              	.LBE371:
 2737              	.LBE370:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2738              		.loc 1 1555 0
 2739 0026 A06B     		ldr	r0, [r4, #56]
 2740 0028 F8B9     		cbnz	r0, .L484
 2741              	.L471:
 2742              	.LVL308:
 2743              	.LBB372:
 2744              	.LBB373:
 2745              		.loc 2 271 0
 2746              		.syntax unified
 2747              	@ 271 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2748 002a 87F31188 			msr basepri, r7	
 2749              	@ 0 "" 2
 2750              	.LVL309:
 2751              		.thumb
 2752              		.syntax unified
 2753              	.LBE373:
 2754              	.LBE372:
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2755              		.loc 1 1576 0
 2756 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2757              	.LVL310:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 96


 2758              	.L482:
 2759              	.LBB374:
 2760              	.LBB375:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2761              		.loc 2 237 0
 2762              		.syntax unified
 2763              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2764 0030 4FF05003 			mov r3, #80												
 2765 0034 83F31188 		msr basepri, r3											
 2766 0038 BFF36F8F 		isb														
 2767 003c BFF34F8F 		dsb														
 2768              	
 2769              	@ 0 "" 2
 2770              	.LVL311:
 2771              		.thumb
 2772              		.syntax unified
 2773              	.L465:
 2774 0040 FEE7     		b	.L465
 2775              	.L467:
 2776              	.LBE375:
 2777              	.LBE374:
 2778              	.LBB376:
 2779              	.LBB377:
 2780              		.syntax unified
 2781              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2782 0042 4FF05003 			mov r3, #80												
 2783 0046 83F31188 		msr basepri, r3											
 2784 004a BFF36F8F 		isb														
 2785 004e BFF34F8F 		dsb														
 2786              	
 2787              	@ 0 "" 2
 2788              	.LVL312:
 2789              		.thumb
 2790              		.syntax unified
 2791              	.L470:
 2792 0052 FEE7     		b	.L470
 2793              	.L483:
 2794              	.LBE377:
 2795              	.LBE376:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2796              		.loc 1 1533 0 discriminator 2
 2797 0054 002B     		cmp	r3, #0
 2798 0056 F4D0     		beq	.L467
 2799              	.LBB378:
 2800              	.LBB379:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2801              		.loc 2 237 0
 2802              		.syntax unified
 2803              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2804 0058 4FF05003 			mov r3, #80												
 2805 005c 83F31188 		msr basepri, r3											
 2806 0060 BFF36F8F 		isb														
 2807 0064 BFF34F8F 		dsb														
 2808              	
 2809              	@ 0 "" 2
 2810              	.LVL313:
 2811              		.thumb
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 97


 2812              		.syntax unified
 2813              	.L468:
 2814 0068 FEE7     		b	.L468
 2815              	.LVL314:
 2816              	.L484:
 2817              	.LBE379:
 2818              	.LBE378:
 2819              	.LBB380:
 2820              	.LBB381:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2821              		.loc 1 1778 0
 2822 006a 226C     		ldr	r2, [r4, #64]
 2823              	.LBE381:
 2824              	.LBE380:
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2825              		.loc 1 1561 0
 2826 006c E668     		ldr	r6, [r4, #12]
 2827              	.LVL315:
 2828              	.LBB383:
 2829              	.LBB382:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2830              		.loc 1 1778 0
 2831 006e 52B1     		cbz	r2, .L472
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2832              		.loc 1 1781 0
 2833 0070 6168     		ldr	r1, [r4, #4]
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2834              		.loc 1 1780 0
 2835 0072 B318     		adds	r3, r6, r2
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2836              		.loc 1 1781 0
 2837 0074 8B42     		cmp	r3, r1
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2838              		.loc 1 1780 0
 2839 0076 E360     		str	r3, [r4, #12]
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2840              		.loc 1 1783 0
 2841 0078 24BF     		itt	cs
 2842 007a 2368     		ldrcs	r3, [r4]
 2843 007c E360     		strcs	r3, [r4, #12]
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2844              		.loc 1 1789 0
 2845 007e 2846     		mov	r0, r5
 2846 0080 E168     		ldr	r1, [r4, #12]
 2847 0082 FFF7FEFF 		bl	memcpy
 2848              	.LVL316:
 2849              	.L472:
 2850              	.LBE382:
 2851              	.LBE383:
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2852              		.loc 1 1563 0
 2853 0086 E660     		str	r6, [r4, #12]
 2854              	.LVL317:
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2855              		.loc 1 1565 0
 2856 0088 0120     		movs	r0, #1
 2857 008a CEE7     		b	.L471
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 98


 2858              		.cfi_endproc
 2859              	.LFE15:
 2861              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2862              		.align	1
 2863              		.p2align 2,,3
 2864              		.global	uxQueueMessagesWaiting
 2865              		.syntax unified
 2866              		.thumb
 2867              		.thumb_func
 2868              		.fpu fpv4-sp-d16
 2870              	uxQueueMessagesWaiting:
 2871              	.LFB16:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2872              		.loc 1 1580 0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 0
 2875              		@ frame_needed = 0, uses_anonymous_args = 0
 2876              	.LVL318:
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2877              		.loc 1 1583 0
 2878 0000 40B9     		cbnz	r0, .L486
 2879              	.LBB384:
 2880              	.LBB385:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2881              		.loc 2 237 0
 2882              		.syntax unified
 2883              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2884 0002 4FF05003 			mov r3, #80												
 2885 0006 83F31188 		msr basepri, r3											
 2886 000a BFF36F8F 		isb														
 2887 000e BFF34F8F 		dsb														
 2888              	
 2889              	@ 0 "" 2
 2890              	.LVL319:
 2891              		.thumb
 2892              		.syntax unified
 2893              	.L487:
 2894 0012 FEE7     		b	.L487
 2895              	.L486:
 2896              	.LBE385:
 2897              	.LBE384:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2898              		.loc 1 1580 0
 2899 0014 10B5     		push	{r4, lr}
 2900              	.LCFI21:
 2901              		.cfi_def_cfa_offset 8
 2902              		.cfi_offset 4, -8
 2903              		.cfi_offset 14, -4
 2904 0016 0446     		mov	r4, r0
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2905              		.loc 1 1585 0
 2906 0018 FFF7FEFF 		bl	vPortEnterCritical
 2907              	.LVL320:
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2908              		.loc 1 1587 0
 2909 001c A46B     		ldr	r4, [r4, #56]
 2910              	.LVL321:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 99


1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2911              		.loc 1 1589 0
 2912 001e FFF7FEFF 		bl	vPortExitCritical
 2913              	.LVL322:
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2914              		.loc 1 1592 0
 2915 0022 2046     		mov	r0, r4
 2916 0024 10BD     		pop	{r4, pc}
 2917              		.cfi_endproc
 2918              	.LFE16:
 2920 0026 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2921              		.align	1
 2922              		.p2align 2,,3
 2923              		.global	uxQueueSpacesAvailable
 2924              		.syntax unified
 2925              		.thumb
 2926              		.thumb_func
 2927              		.fpu fpv4-sp-d16
 2929              	uxQueueSpacesAvailable:
 2930              	.LFB17:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2931              		.loc 1 1596 0
 2932              		.cfi_startproc
 2933              		@ args = 0, pretend = 0, frame = 0
 2934              		@ frame_needed = 0, uses_anonymous_args = 0
 2935              	.LVL323:
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2936              		.loc 1 1601 0
 2937 0000 40B9     		cbnz	r0, .L491
 2938              	.LBB386:
 2939              	.LBB387:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2940              		.loc 2 237 0
 2941              		.syntax unified
 2942              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2943 0002 4FF05003 			mov r3, #80												
 2944 0006 83F31188 		msr basepri, r3											
 2945 000a BFF36F8F 		isb														
 2946 000e BFF34F8F 		dsb														
 2947              	
 2948              	@ 0 "" 2
 2949              	.LVL324:
 2950              		.thumb
 2951              		.syntax unified
 2952              	.L492:
 2953 0012 FEE7     		b	.L492
 2954              	.L491:
 2955              	.LBE387:
 2956              	.LBE386:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2957              		.loc 1 1596 0
 2958 0014 10B5     		push	{r4, lr}
 2959              	.LCFI22:
 2960              		.cfi_def_cfa_offset 8
 2961              		.cfi_offset 4, -8
 2962              		.cfi_offset 14, -4
 2963 0016 0446     		mov	r4, r0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 100


1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 2964              		.loc 1 1603 0
 2965 0018 FFF7FEFF 		bl	vPortEnterCritical
 2966              	.LVL325:
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2967              		.loc 1 1605 0
 2968 001c A36B     		ldr	r3, [r4, #56]
 2969 001e E46B     		ldr	r4, [r4, #60]
 2970              	.LVL326:
 2971 0020 E41A     		subs	r4, r4, r3
 2972              	.LVL327:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2973              		.loc 1 1607 0
 2974 0022 FFF7FEFF 		bl	vPortExitCritical
 2975              	.LVL328:
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2976              		.loc 1 1610 0
 2977 0026 2046     		mov	r0, r4
 2978 0028 10BD     		pop	{r4, pc}
 2979              		.cfi_endproc
 2980              	.LFE17:
 2982 002a 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2983              		.align	1
 2984              		.p2align 2,,3
 2985              		.global	uxQueueMessagesWaitingFromISR
 2986              		.syntax unified
 2987              		.thumb
 2988              		.thumb_func
 2989              		.fpu fpv4-sp-d16
 2991              	uxQueueMessagesWaitingFromISR:
 2992              	.LFB18:
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 2993              		.loc 1 1614 0
 2994              		.cfi_startproc
 2995              		@ args = 0, pretend = 0, frame = 0
 2996              		@ frame_needed = 0, uses_anonymous_args = 0
 2997              		@ link register save eliminated.
 2998              	.LVL329:
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2999              		.loc 1 1617 0
 3000 0000 08B1     		cbz	r0, .L498
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3001              		.loc 1 1619 0
 3002 0002 806B     		ldr	r0, [r0, #56]
 3003              	.LVL330:
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3004              		.loc 1 1622 0
 3005 0004 7047     		bx	lr
 3006              	.LVL331:
 3007              	.L498:
 3008              	.LBB388:
 3009              	.LBB389:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3010              		.loc 2 237 0
 3011              		.syntax unified
 3012              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3013 0006 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 101


 3014 000a 83F31188 		msr basepri, r3											
 3015 000e BFF36F8F 		isb														
 3016 0012 BFF34F8F 		dsb														
 3017              	
 3018              	@ 0 "" 2
 3019              	.LVL332:
 3020              		.thumb
 3021              		.syntax unified
 3022              	.L497:
 3023 0016 FEE7     		b	.L497
 3024              	.LBE389:
 3025              	.LBE388:
 3026              		.cfi_endproc
 3027              	.LFE18:
 3029              		.section	.text.vQueueDelete,"ax",%progbits
 3030              		.align	1
 3031              		.p2align 2,,3
 3032              		.global	vQueueDelete
 3033              		.syntax unified
 3034              		.thumb
 3035              		.thumb_func
 3036              		.fpu fpv4-sp-d16
 3038              	vQueueDelete:
 3039              	.LFB19:
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3040              		.loc 1 1626 0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 0, uses_anonymous_args = 0
 3044              		@ link register save eliminated.
 3045              	.LVL333:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 3046              		.loc 1 1629 0
 3047 0000 E0B1     		cbz	r0, .L514
 3048              	.LVL334:
 3049              	.LBB390:
 3050              	.LBB391:
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 102


1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 103


2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 104


2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 105


2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 106


2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 107


2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 108


2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3051              		.loc 1 2334 0
 3052 0002 1F4B     		ldr	r3, .L515
 3053 0004 5A68     		ldr	r2, [r3, #4]
 3054 0006 9042     		cmp	r0, r2
 3055 0008 2DD0     		beq	.L504
 3056              	.LVL335:
 3057 000a DA68     		ldr	r2, [r3, #12]
 3058 000c 9042     		cmp	r0, r2
 3059 000e 34D0     		beq	.L505
 3060              	.LVL336:
 3061 0010 5A69     		ldr	r2, [r3, #20]
 3062 0012 9042     		cmp	r0, r2
 3063 0014 2FD0     		beq	.L506
 3064              	.LVL337:
 3065 0016 DA69     		ldr	r2, [r3, #28]
 3066 0018 9042     		cmp	r0, r2
 3067 001a 2AD0     		beq	.L507
 3068              	.LVL338:
 3069 001c 5A6A     		ldr	r2, [r3, #36]
 3070 001e 9042     		cmp	r0, r2
 3071 0020 25D0     		beq	.L508
 3072              	.LVL339:
 3073 0022 DA6A     		ldr	r2, [r3, #44]
 3074 0024 9042     		cmp	r0, r2
 3075 0026 20D0     		beq	.L509
 3076              	.LVL340:
 3077 0028 5A6B     		ldr	r2, [r3, #52]
 3078 002a 9042     		cmp	r0, r2
 3079 002c 0FD0     		beq	.L510
 3080              	.LVL341:
 3081 002e DA6B     		ldr	r2, [r3, #60]
 3082 0030 9042     		cmp	r0, r2
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3083              		.loc 1 2332 0
 3084 0032 08BF     		it	eq
 3085 0034 0722     		moveq	r2, #7
 3086              		.loc 1 2334 0
 3087 0036 0BD0     		beq	.L502
 3088              	.LVL342:
 3089              	.LBE391:
 3090              	.LBE390:
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3091              		.loc 1 1642 0
 3092 0038 FFF7FEBF 		b	vPortFree
 3093              	.LVL343:
 3094              	.L514:
 3095              	.LBB395:
 3096              	.LBB396:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3097              		.loc 2 237 0
 3098              		.syntax unified
 3099              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3100 003c 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 109


 3101 0040 83F31188 		msr basepri, r3											
 3102 0044 BFF36F8F 		isb														
 3103 0048 BFF34F8F 		dsb														
 3104              	
 3105              	@ 0 "" 2
 3106              	.LVL344:
 3107              		.thumb
 3108              		.syntax unified
 3109              	.L501:
 3110 004c FEE7     		b	.L501
 3111              	.LVL345:
 3112              	.L510:
 3113              	.LBE396:
 3114              	.LBE395:
 3115              	.LBB397:
 3116              	.LBB392:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3117              		.loc 1 2332 0
 3118 004e 0622     		movs	r2, #6
 3119              	.LVL346:
 3120              	.L502:
 3121              	.LBE392:
 3122              	.LBE397:
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 3123              		.loc 1 1626 0
 3124 0050 10B4     		push	{r4}
 3125              	.LCFI23:
 3126              		.cfi_def_cfa_offset 4
 3127              		.cfi_offset 4, -4
 3128              	.LBB398:
 3129              	.LBB393:
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3130              		.loc 1 2342 0
 3131 0052 03EBC204 		add	r4, r3, r2, lsl #3
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3132              		.loc 1 2337 0
 3133 0056 0021     		movs	r1, #0
 3134              		.loc 1 2342 0
 3135 0058 6160     		str	r1, [r4, #4]
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3136              		.loc 1 2337 0
 3137 005a 43F83210 		str	r1, [r3, r2, lsl #3]
 3138              	.LBE393:
 3139              	.LBE398:
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3140              		.loc 1 1664 0
 3141 005e 5DF8044B 		ldr	r4, [sp], #4
 3142              	.LCFI24:
 3143              		.cfi_restore 4
 3144              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 110


1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3145              		.loc 1 1642 0
 3146 0062 FFF7FEBF 		b	vPortFree
 3147              	.LVL347:
 3148              	.L504:
 3149              	.LBB399:
 3150              	.LBB394:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3151              		.loc 1 2332 0
 3152 0066 0022     		movs	r2, #0
 3153 0068 F2E7     		b	.L502
 3154              	.LVL348:
 3155              	.L509:
 3156 006a 0522     		movs	r2, #5
 3157 006c F0E7     		b	.L502
 3158              	.LVL349:
 3159              	.L508:
 3160 006e 0422     		movs	r2, #4
 3161 0070 EEE7     		b	.L502
 3162              	.LVL350:
 3163              	.L507:
 3164 0072 0322     		movs	r2, #3
 3165 0074 ECE7     		b	.L502
 3166              	.LVL351:
 3167              	.L506:
 3168 0076 0222     		movs	r2, #2
 3169 0078 EAE7     		b	.L502
 3170              	.LVL352:
 3171              	.L505:
 3172 007a 0122     		movs	r2, #1
 3173 007c E8E7     		b	.L502
 3174              	.L516:
 3175 007e 00BF     		.align	2
 3176              	.L515:
 3177 0080 00000000 		.word	xQueueRegistry
 3178              	.LBE394:
 3179              	.LBE399:
 3180              		.cfi_endproc
 3181              	.LFE19:
 3183              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3184              		.align	1
 3185              		.p2align 2,,3
 3186              		.global	xQueueIsQueueEmptyFromISR
 3187              		.syntax unified
 3188              		.thumb
 3189              		.thumb_func
 3190              		.fpu fpv4-sp-d16
 3192              	xQueueIsQueueEmptyFromISR:
 3193              	.LFB24:
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3194              		.loc 1 1936 0
 3195              		.cfi_startproc
 3196              		@ args = 0, pretend = 0, frame = 0
 3197              		@ frame_needed = 0, uses_anonymous_args = 0
 3198              		@ link register save eliminated.
 3199              	.LVL353:
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 111


 3200              		.loc 1 1939 0
 3201 0000 20B1     		cbz	r0, .L520
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3202              		.loc 1 1940 0
 3203 0002 806B     		ldr	r0, [r0, #56]
 3204              	.LVL354:
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3205              		.loc 1 1950 0
 3206 0004 B0FA80F0 		clz	r0, r0
 3207              	.LVL355:
 3208 0008 4009     		lsrs	r0, r0, #5
 3209 000a 7047     		bx	lr
 3210              	.LVL356:
 3211              	.L520:
 3212              	.LBB400:
 3213              	.LBB401:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3214              		.loc 2 237 0
 3215              		.syntax unified
 3216              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3217 000c 4FF05003 			mov r3, #80												
 3218 0010 83F31188 		msr basepri, r3											
 3219 0014 BFF36F8F 		isb														
 3220 0018 BFF34F8F 		dsb														
 3221              	
 3222              	@ 0 "" 2
 3223              	.LVL357:
 3224              		.thumb
 3225              		.syntax unified
 3226              	.L519:
 3227 001c FEE7     		b	.L519
 3228              	.LBE401:
 3229              	.LBE400:
 3230              		.cfi_endproc
 3231              	.LFE24:
 3233 001e 00BF     		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3234              		.align	1
 3235              		.p2align 2,,3
 3236              		.global	xQueueIsQueueFullFromISR
 3237              		.syntax unified
 3238              		.thumb
 3239              		.thumb_func
 3240              		.fpu fpv4-sp-d16
 3242              	xQueueIsQueueFullFromISR:
 3243              	.LFB26:
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3244              		.loc 1 1975 0
 3245              		.cfi_startproc
 3246              		@ args = 0, pretend = 0, frame = 0
 3247              		@ frame_needed = 0, uses_anonymous_args = 0
 3248              		@ link register save eliminated.
 3249              	.LVL358:
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3250              		.loc 1 1978 0
 3251 0000 30B1     		cbz	r0, .L524
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3252              		.loc 1 1979 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 112


 3253 0002 836B     		ldr	r3, [r0, #56]
 3254              	.LVL359:
 3255 0004 C06B     		ldr	r0, [r0, #60]
 3256              	.LVL360:
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3257              		.loc 1 1989 0
 3258 0006 C01A     		subs	r0, r0, r3
 3259              	.LVL361:
 3260 0008 B0FA80F0 		clz	r0, r0
 3261 000c 4009     		lsrs	r0, r0, #5
 3262 000e 7047     		bx	lr
 3263              	.LVL362:
 3264              	.L524:
 3265              	.LBB402:
 3266              	.LBB403:
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3267              		.loc 2 237 0
 3268              		.syntax unified
 3269              	@ 237 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3270 0010 4FF05003 			mov r3, #80												
 3271 0014 83F31188 		msr basepri, r3											
 3272 0018 BFF36F8F 		isb														
 3273 001c BFF34F8F 		dsb														
 3274              	
 3275              	@ 0 "" 2
 3276              	.LVL363:
 3277              		.thumb
 3278              		.syntax unified
 3279              	.L523:
 3280 0020 FEE7     		b	.L523
 3281              	.LBE403:
 3282              	.LBE402:
 3283              		.cfi_endproc
 3284              	.LFE26:
 3286 0022 00BF     		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3287              		.align	1
 3288              		.p2align 2,,3
 3289              		.global	vQueueAddToRegistry
 3290              		.syntax unified
 3291              		.thumb
 3292              		.thumb_func
 3293              		.fpu fpv4-sp-d16
 3295              	vQueueAddToRegistry:
 3296              	.LFB27:
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 3297              		.loc 1 2270 0
 3298              		.cfi_startproc
 3299              		@ args = 0, pretend = 0, frame = 0
 3300              		@ frame_needed = 0, uses_anonymous_args = 0
 3301              		@ link register save eliminated.
 3302              	.LVL364:
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3303              		.loc 1 2277 0
 3304 0000 134B     		ldr	r3, .L539
 3305 0002 1A68     		ldr	r2, [r3]
 3306 0004 7AB1     		cbz	r2, .L526
 3307              	.LVL365:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 113


 3308 0006 9A68     		ldr	r2, [r3, #8]
 3309 0008 B2B1     		cbz	r2, .L529
 3310              	.LVL366:
 3311 000a 1A69     		ldr	r2, [r3, #16]
 3312 000c B2B1     		cbz	r2, .L530
 3313              	.LVL367:
 3314 000e 9A69     		ldr	r2, [r3, #24]
 3315 0010 B2B1     		cbz	r2, .L531
 3316              	.LVL368:
 3317 0012 1A6A     		ldr	r2, [r3, #32]
 3318 0014 B2B1     		cbz	r2, .L532
 3319              	.LVL369:
 3320 0016 9A6A     		ldr	r2, [r3, #40]
 3321 0018 B2B1     		cbz	r2, .L533
 3322              	.LVL370:
 3323 001a 1A6B     		ldr	r2, [r3, #48]
 3324 001c 12B1     		cbz	r2, .L534
 3325              	.LVL371:
 3326 001e 9A6B     		ldr	r2, [r3, #56]
 3327 0020 A2B1     		cbz	r2, .L538
 3328 0022 7047     		bx	lr
 3329              	.LVL372:
 3330              	.L534:
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3331              		.loc 1 2275 0
 3332 0024 0622     		movs	r2, #6
 3333              	.LVL373:
 3334              	.L526:
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 3335              		.loc 1 2270 0
 3336 0026 10B4     		push	{r4}
 3337              	.LCFI25:
 3338              		.cfi_def_cfa_offset 4
 3339              		.cfi_offset 4, -4
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3340              		.loc 1 2281 0
 3341 0028 03EBC204 		add	r4, r3, r2, lsl #3
2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3342              		.loc 1 2280 0
 3343 002c 43F83210 		str	r1, [r3, r2, lsl #3]
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3344              		.loc 1 2281 0
 3345 0030 6060     		str	r0, [r4, #4]
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3346              		.loc 1 2291 0
 3347 0032 5DF8044B 		ldr	r4, [sp], #4
 3348              	.LCFI26:
 3349              		.cfi_restore 4
 3350              		.cfi_def_cfa_offset 0
 3351 0036 7047     		bx	lr
 3352              	.LVL374:
 3353              	.L529:
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3354              		.loc 1 2275 0
 3355 0038 0122     		movs	r2, #1
 3356 003a F4E7     		b	.L526
 3357              	.LVL375:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 114


 3358              	.L530:
 3359 003c 0222     		movs	r2, #2
 3360 003e F2E7     		b	.L526
 3361              	.LVL376:
 3362              	.L531:
 3363 0040 0322     		movs	r2, #3
 3364 0042 F0E7     		b	.L526
 3365              	.LVL377:
 3366              	.L532:
 3367 0044 0422     		movs	r2, #4
 3368 0046 EEE7     		b	.L526
 3369              	.LVL378:
 3370              	.L533:
 3371 0048 0522     		movs	r2, #5
 3372 004a ECE7     		b	.L526
 3373              	.LVL379:
 3374              	.L538:
 3375 004c 0722     		movs	r2, #7
 3376 004e EAE7     		b	.L526
 3377              	.L540:
 3378              		.align	2
 3379              	.L539:
 3380 0050 00000000 		.word	xQueueRegistry
 3381              		.cfi_endproc
 3382              	.LFE27:
 3384              		.section	.text.pcQueueGetName,"ax",%progbits
 3385              		.align	1
 3386              		.p2align 2,,3
 3387              		.global	pcQueueGetName
 3388              		.syntax unified
 3389              		.thumb
 3390              		.thumb_func
 3391              		.fpu fpv4-sp-d16
 3393              	pcQueueGetName:
 3394              	.LFB28:
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 3395              		.loc 1 2299 0
 3396              		.cfi_startproc
 3397              		@ args = 0, pretend = 0, frame = 0
 3398              		@ frame_needed = 0, uses_anonymous_args = 0
 3399              		@ link register save eliminated.
 3400              	.LVL380:
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3401              		.loc 1 2307 0
 3402 0000 164B     		ldr	r3, .L552
 3403 0002 5A68     		ldr	r2, [r3, #4]
 3404 0004 9042     		cmp	r0, r2
 3405 0006 1CD0     		beq	.L544
 3406              	.LVL381:
 3407 0008 DA68     		ldr	r2, [r3, #12]
 3408 000a 9042     		cmp	r0, r2
 3409 000c 1BD0     		beq	.L545
 3410              	.LVL382:
 3411 000e 5A69     		ldr	r2, [r3, #20]
 3412 0010 9042     		cmp	r0, r2
 3413 0012 1AD0     		beq	.L546
 3414              	.LVL383:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 115


 3415 0014 DA69     		ldr	r2, [r3, #28]
 3416 0016 9042     		cmp	r0, r2
 3417 0018 19D0     		beq	.L547
 3418              	.LVL384:
 3419 001a 5A6A     		ldr	r2, [r3, #36]
 3420 001c 9042     		cmp	r0, r2
 3421 001e 18D0     		beq	.L548
 3422              	.LVL385:
 3423 0020 DA6A     		ldr	r2, [r3, #44]
 3424 0022 9042     		cmp	r0, r2
 3425 0024 17D0     		beq	.L549
 3426              	.LVL386:
 3427 0026 5A6B     		ldr	r2, [r3, #52]
 3428 0028 9042     		cmp	r0, r2
 3429 002a 06D0     		beq	.L550
 3430              	.LVL387:
 3431 002c DA6B     		ldr	r2, [r3, #60]
 3432 002e 8242     		cmp	r2, r0
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3433              		.loc 1 2305 0
 3434 0030 08BF     		it	eq
 3435 0032 0722     		moveq	r2, #7
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3436              		.loc 1 2307 0
 3437 0034 02D0     		beq	.L542
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3438              		.loc 1 2301 0
 3439 0036 0020     		movs	r0, #0
 3440              	.LVL388:
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3441              		.loc 1 2319 0
 3442 0038 7047     		bx	lr
 3443              	.LVL389:
 3444              	.L550:
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3445              		.loc 1 2305 0
 3446 003a 0622     		movs	r2, #6
 3447              	.LVL390:
 3448              	.L542:
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3449              		.loc 1 2309 0
 3450 003c 53F83200 		ldr	r0, [r3, r2, lsl #3]
 3451              	.LVL391:
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3452              		.loc 1 2310 0
 3453 0040 7047     		bx	lr
 3454              	.LVL392:
 3455              	.L544:
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3456              		.loc 1 2305 0
 3457 0042 0022     		movs	r2, #0
 3458 0044 FAE7     		b	.L542
 3459              	.LVL393:
 3460              	.L545:
 3461 0046 0122     		movs	r2, #1
 3462 0048 F8E7     		b	.L542
 3463              	.LVL394:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 116


 3464              	.L546:
 3465 004a 0222     		movs	r2, #2
 3466 004c F6E7     		b	.L542
 3467              	.LVL395:
 3468              	.L547:
 3469 004e 0322     		movs	r2, #3
 3470 0050 F4E7     		b	.L542
 3471              	.LVL396:
 3472              	.L548:
 3473 0052 0422     		movs	r2, #4
 3474 0054 F2E7     		b	.L542
 3475              	.LVL397:
 3476              	.L549:
 3477 0056 0522     		movs	r2, #5
 3478 0058 F0E7     		b	.L542
 3479              	.L553:
 3480 005a 00BF     		.align	2
 3481              	.L552:
 3482 005c 00000000 		.word	xQueueRegistry
 3483              		.cfi_endproc
 3484              	.LFE28:
 3486              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3487              		.align	1
 3488              		.p2align 2,,3
 3489              		.global	vQueueUnregisterQueue
 3490              		.syntax unified
 3491              		.thumb
 3492              		.thumb_func
 3493              		.fpu fpv4-sp-d16
 3495              	vQueueUnregisterQueue:
 3496              	.LFB29:
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
 3497              		.loc 1 2327 0
 3498              		.cfi_startproc
 3499              		@ args = 0, pretend = 0, frame = 0
 3500              		@ frame_needed = 0, uses_anonymous_args = 0
 3501              		@ link register save eliminated.
 3502              	.LVL398:
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3503              		.loc 1 2334 0
 3504 0000 174B     		ldr	r3, .L564
 3505 0002 5A68     		ldr	r2, [r3, #4]
 3506 0004 9042     		cmp	r0, r2
 3507 0006 1FD0     		beq	.L557
 3508              	.LVL399:
 3509 0008 DA68     		ldr	r2, [r3, #12]
 3510 000a 9042     		cmp	r0, r2
 3511 000c 1ED0     		beq	.L558
 3512              	.LVL400:
 3513 000e 5A69     		ldr	r2, [r3, #20]
 3514 0010 9042     		cmp	r0, r2
 3515 0012 1DD0     		beq	.L559
 3516              	.LVL401:
 3517 0014 DA69     		ldr	r2, [r3, #28]
 3518 0016 9042     		cmp	r0, r2
 3519 0018 1CD0     		beq	.L560
 3520              	.LVL402:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 117


 3521 001a 5A6A     		ldr	r2, [r3, #36]
 3522 001c 9042     		cmp	r0, r2
 3523 001e 1BD0     		beq	.L561
 3524              	.LVL403:
 3525 0020 DA6A     		ldr	r2, [r3, #44]
 3526 0022 9042     		cmp	r0, r2
 3527 0024 1AD0     		beq	.L562
 3528              	.LVL404:
 3529 0026 5A6B     		ldr	r2, [r3, #52]
 3530 0028 9042     		cmp	r0, r2
 3531 002a 05D0     		beq	.L563
 3532              	.LVL405:
 3533 002c DA6B     		ldr	r2, [r3, #60]
 3534 002e 8242     		cmp	r2, r0
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3535              		.loc 1 2332 0
 3536 0030 08BF     		it	eq
 3537 0032 0722     		moveq	r2, #7
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3538              		.loc 1 2334 0
 3539 0034 01D0     		beq	.L555
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3540              		.loc 1 2351 0
 3541 0036 7047     		bx	lr
 3542              	.LVL406:
 3543              	.L563:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3544              		.loc 1 2332 0
 3545 0038 0622     		movs	r2, #6
 3546              	.LVL407:
 3547              	.L555:
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3548              		.loc 1 2342 0
 3549 003a 03EBC200 		add	r0, r3, r2, lsl #3
 3550              	.LVL408:
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3551              		.loc 1 2337 0
 3552 003e 0021     		movs	r1, #0
 3553 0040 43F83210 		str	r1, [r3, r2, lsl #3]
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3554              		.loc 1 2342 0
 3555 0044 4160     		str	r1, [r0, #4]
 3556              		.loc 1 2351 0
 3557 0046 7047     		bx	lr
 3558              	.LVL409:
 3559              	.L557:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3560              		.loc 1 2332 0
 3561 0048 0022     		movs	r2, #0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 118


 3562 004a F6E7     		b	.L555
 3563              	.LVL410:
 3564              	.L558:
 3565 004c 0122     		movs	r2, #1
 3566 004e F4E7     		b	.L555
 3567              	.LVL411:
 3568              	.L559:
 3569 0050 0222     		movs	r2, #2
 3570 0052 F2E7     		b	.L555
 3571              	.LVL412:
 3572              	.L560:
 3573 0054 0322     		movs	r2, #3
 3574 0056 F0E7     		b	.L555
 3575              	.LVL413:
 3576              	.L561:
 3577 0058 0422     		movs	r2, #4
 3578 005a EEE7     		b	.L555
 3579              	.LVL414:
 3580              	.L562:
 3581 005c 0522     		movs	r2, #5
 3582 005e ECE7     		b	.L555
 3583              	.L565:
 3584              		.align	2
 3585              	.L564:
 3586 0060 00000000 		.word	xQueueRegistry
 3587              		.cfi_endproc
 3588              	.LFE29:
 3590              		.comm	xQueueRegistry,64,4
 3591              		.text
 3592              	.Letext0:
 3593              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 3594              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3595              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3596              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3597              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3598              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3599              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 3600              		.file 10 "Inc/FreeRTOSConfig.h"
 3601              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 3602              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 3603              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 3604              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 3605              		.file 15 "<built-in>"
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 119


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:18     .text.xQueueGenericReset:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:26     .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:142    .text.xQueueGenericReset:00000080 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:147    .text.xQueueGenericCreate:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:155    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:299    .text.xQueueGenericSend:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:307    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1093   .text.xQueueGenericSend:00000378 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1098   .text.xQueueCreateMutex:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1106   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1210   .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1218   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1566   .text.xQueueGiveFromISR:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1574   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1776   .text.xQueueGenericReceive:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:1784   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2470   .text.xQueueGenericReceive:0000030c $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2476   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2484   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2686   .text.xQueuePeekFromISR:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2694   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2862   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2870   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2921   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2929   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2983   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:2991   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3030   .text.vQueueDelete:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3038   .text.vQueueDelete:00000000 vQueueDelete
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3177   .text.vQueueDelete:00000080 $d
                            *COM*:00000040 xQueueRegistry
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3184   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3192   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3234   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3242   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3287   .text.vQueueAddToRegistry:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3295   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3380   .text.vQueueAddToRegistry:00000050 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3385   .text.pcQueueGetName:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3393   .text.pcQueueGetName:00000000 pcQueueGetName
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3482   .text.pcQueueGetName:0000005c $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3487   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3495   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s:3586   .text.vQueueUnregisterQueue:00000060 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
vListInitialise
xTaskRemoveFromEventList
pvPortMalloc
xTaskGetSchedulerState
vTaskSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOSpV3P.s 			page 120


vTaskMissedYield
xTaskResumeAll
memcpy
vTaskPlaceOnEventList
xTaskPriorityDisinherit
vPortValidateInterruptPriority
vTaskPriorityInherit
pvTaskIncrementMutexHeldCount
vPortFree
