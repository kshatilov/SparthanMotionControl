ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB141:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f3xx_hal.h"
  52:Src/main.c    **** #include "cmsis_os.h"
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN Includes */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END Includes */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** SDADC_HandleTypeDef hsdadc1;
  60:Src/main.c    **** 
  61:Src/main.c    **** TIM_HandleTypeDef htim2;
  62:Src/main.c    **** TIM_HandleTypeDef htim3;
  63:Src/main.c    **** TIM_HandleTypeDef htim4;
  64:Src/main.c    **** TIM_HandleTypeDef htim5;
  65:Src/main.c    **** TIM_HandleTypeDef htim12;
  66:Src/main.c    **** TIM_HandleTypeDef htim19;
  67:Src/main.c    **** 
  68:Src/main.c    **** UART_HandleTypeDef huart1;
  69:Src/main.c    **** 
  70:Src/main.c    **** osThreadId blinkTaskHandle;
  71:Src/main.c    **** uint32_t blinkTaskBuffer[ 128 ];
  72:Src/main.c    **** osStaticThreadDef_t blinkTaskControlBlock;
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE BEGIN PV */
  75:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END PV */
  78:Src/main.c    **** 
  79:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  80:Src/main.c    **** void SystemClock_Config(void);
  81:Src/main.c    **** static void MX_GPIO_Init(void);
  82:Src/main.c    **** static void MX_SDADC1_Init(void);
  83:Src/main.c    **** static void MX_TIM2_Init(void);
  84:Src/main.c    **** static void MX_TIM3_Init(void);
  85:Src/main.c    **** static void MX_TIM4_Init(void);
  86:Src/main.c    **** static void MX_TIM5_Init(void);
  87:Src/main.c    **** static void MX_TIM12_Init(void);
  88:Src/main.c    **** static void MX_TIM19_Init(void);
  89:Src/main.c    **** static void MX_USART1_UART_Init(void);
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 3


  90:Src/main.c    **** void BlinkFunction(void const * argument);
  91:Src/main.c    **** 
  92:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  93:Src/main.c    ****                                 
  94:Src/main.c    ****                                 
  95:Src/main.c    ****                                 
  96:Src/main.c    **** 
  97:Src/main.c    **** /* USER CODE BEGIN PFP */
  98:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  99:Src/main.c    **** 
 100:Src/main.c    **** /* USER CODE END PFP */
 101:Src/main.c    **** 
 102:Src/main.c    **** /* USER CODE BEGIN 0 */
 103:Src/main.c    **** 
 104:Src/main.c    **** /* USER CODE END 0 */
 105:Src/main.c    **** 
 106:Src/main.c    **** /**
 107:Src/main.c    ****   * @brief  The application entry point.
 108:Src/main.c    ****   *
 109:Src/main.c    ****   * @retval None
 110:Src/main.c    ****   */
 111:Src/main.c    **** int main(void)
 112:Src/main.c    **** {
 113:Src/main.c    ****   /* USER CODE BEGIN 1 */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END 1 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 120:Src/main.c    ****   HAL_Init();
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE BEGIN Init */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* USER CODE END Init */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Configure the system clock */
 127:Src/main.c    ****   SystemClock_Config();
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* USER CODE END SysInit */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* Initialize all configured peripherals */
 134:Src/main.c    ****   MX_GPIO_Init();
 135:Src/main.c    ****   MX_SDADC1_Init();
 136:Src/main.c    ****   MX_TIM2_Init();
 137:Src/main.c    ****   MX_TIM3_Init();
 138:Src/main.c    ****   MX_TIM4_Init();
 139:Src/main.c    ****   MX_TIM5_Init();
 140:Src/main.c    ****   MX_TIM12_Init();
 141:Src/main.c    ****   MX_TIM19_Init();
 142:Src/main.c    ****   MX_USART1_UART_Init();
 143:Src/main.c    ****   /* USER CODE BEGIN 2 */
 144:Src/main.c    **** 
 145:Src/main.c    ****   /* USER CODE END 2 */
 146:Src/main.c    **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 4


 147:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 148:Src/main.c    ****   /* add mutexes, ... */
 149:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 150:Src/main.c    **** 
 151:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 152:Src/main.c    ****   /* add semaphores, ... */
 153:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 156:Src/main.c    ****   /* start timers, add new ones, ... */
 157:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* Create the thread(s) */
 160:Src/main.c    ****   /* definition and creation of blinkTask */
 161:Src/main.c    ****   osThreadStaticDef(blinkTask, BlinkFunction, osPriorityNormal, 0, 128, blinkTaskBuffer, &blinkTask
 162:Src/main.c    ****   blinkTaskHandle = osThreadCreate(osThread(blinkTask), NULL);
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 165:Src/main.c    ****   /* add threads, ... */
 166:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 169:Src/main.c    ****   /* add queues, ... */
 170:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 171:Src/main.c    ****  
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* Start scheduler */
 174:Src/main.c    ****   osKernelStart();
 175:Src/main.c    ****   
 176:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 177:Src/main.c    **** 
 178:Src/main.c    ****   /* Infinite loop */
 179:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 180:Src/main.c    ****   while (1)
 181:Src/main.c    ****   {
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* USER CODE END WHILE */
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* USER CODE BEGIN 3 */
 186:Src/main.c    **** 
 187:Src/main.c    ****   }
 188:Src/main.c    ****   /* USER CODE END 3 */
 189:Src/main.c    **** 
 190:Src/main.c    **** }
 191:Src/main.c    **** 
 192:Src/main.c    **** /**
 193:Src/main.c    ****   * @brief System Clock Configuration
 194:Src/main.c    ****   * @retval None
 195:Src/main.c    ****   */
 196:Src/main.c    **** void SystemClock_Config(void)
 197:Src/main.c    **** {
 198:Src/main.c    **** 
 199:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 200:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 201:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 202:Src/main.c    **** 
 203:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 5


 204:Src/main.c    ****     */
 205:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 206:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 207:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 208:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 211:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 212:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 213:Src/main.c    ****   {
 214:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 215:Src/main.c    ****   }
 216:Src/main.c    **** 
 217:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 218:Src/main.c    ****     */
 219:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 220:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 221:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 222:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 223:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 224:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 225:Src/main.c    **** 
 226:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 227:Src/main.c    ****   {
 228:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 229:Src/main.c    ****   }
 230:Src/main.c    **** 
 231:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_SDADC;
 232:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 233:Src/main.c    ****   PeriphClkInit.SdadcClockSelection = RCC_SDADCSYSCLK_DIV12;
 234:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 235:Src/main.c    ****   {
 236:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 237:Src/main.c    ****   }
 238:Src/main.c    **** 
 239:Src/main.c    ****   HAL_PWREx_EnableSDADC(PWR_SDADC_ANALOG1);
 240:Src/main.c    **** 
 241:Src/main.c    ****     /**Configure the Systick interrupt time 
 242:Src/main.c    ****     */
 243:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 244:Src/main.c    **** 
 245:Src/main.c    ****     /**Configure the Systick 
 246:Src/main.c    ****     */
 247:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 248:Src/main.c    **** 
 249:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 250:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 251:Src/main.c    **** }
 252:Src/main.c    **** 
 253:Src/main.c    **** /* SDADC1 init function */
 254:Src/main.c    **** static void MX_SDADC1_Init(void)
 255:Src/main.c    **** {
 256:Src/main.c    **** 
 257:Src/main.c    ****   SDADC_ConfParamTypeDef ConfParamStruct;
 258:Src/main.c    **** 
 259:Src/main.c    ****     /**Configure the SDADC low power mode, fast conversion mode,
 260:Src/main.c    ****     slow clock mode and SDADC1 reference voltage 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 6


 261:Src/main.c    ****     */
 262:Src/main.c    ****   hsdadc1.Instance = SDADC1;
 263:Src/main.c    ****   hsdadc1.Init.IdleLowPowerMode = SDADC_LOWPOWER_NONE;
 264:Src/main.c    ****   hsdadc1.Init.FastConversionMode = SDADC_FAST_CONV_DISABLE;
 265:Src/main.c    ****   hsdadc1.Init.SlowClockMode = SDADC_SLOW_CLOCK_DISABLE;
 266:Src/main.c    ****   hsdadc1.Init.ReferenceVoltage = SDADC_VREF_VREFINT1;
 267:Src/main.c    ****   if (HAL_SDADC_Init(&hsdadc1) != HAL_OK)
 268:Src/main.c    ****   {
 269:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 270:Src/main.c    ****   }
 271:Src/main.c    **** 
 272:Src/main.c    ****     /**Configure The Regular Mode 
 273:Src/main.c    ****     */
 274:Src/main.c    ****   if (HAL_SDADC_SelectRegularTrigger(&hsdadc1, SDADC_SOFTWARE_TRIGGER) != HAL_OK)
 275:Src/main.c    ****   {
 276:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 277:Src/main.c    ****   }
 278:Src/main.c    **** 
 279:Src/main.c    ****     /**Set parameters for SDADC configuration 0 Register 
 280:Src/main.c    ****     */
 281:Src/main.c    ****   ConfParamStruct.InputMode = SDADC_INPUT_MODE_SE_ZERO_REFERENCE;
 282:Src/main.c    ****   ConfParamStruct.Gain = SDADC_GAIN_1;
 283:Src/main.c    ****   ConfParamStruct.CommonMode = SDADC_COMMON_MODE_VSSA;
 284:Src/main.c    ****   ConfParamStruct.Offset = 0;
 285:Src/main.c    ****   if (HAL_SDADC_PrepareChannelConfig(&hsdadc1, SDADC_CONF_INDEX_0, &ConfParamStruct) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 288:Src/main.c    ****   }
 289:Src/main.c    **** 
 290:Src/main.c    **** }
 291:Src/main.c    **** 
 292:Src/main.c    **** /* TIM2 init function */
 293:Src/main.c    **** static void MX_TIM2_Init(void)
 294:Src/main.c    **** {
 295:Src/main.c    **** 
 296:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig;
 297:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 298:Src/main.c    **** 
 299:Src/main.c    ****   htim2.Instance = TIM2;
 300:Src/main.c    ****   htim2.Init.Prescaler = 0;
 301:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 302:Src/main.c    ****   htim2.Init.Period = 0;
 303:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 304:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 305:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 306:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 307:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 308:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 309:Src/main.c    ****   sConfig.IC1Filter = 0;
 310:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 311:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 312:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 313:Src/main.c    ****   sConfig.IC2Filter = 0;
 314:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 315:Src/main.c    ****   {
 316:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 317:Src/main.c    ****   }
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 7


 318:Src/main.c    **** 
 319:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 320:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 321:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 322:Src/main.c    ****   {
 323:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 324:Src/main.c    ****   }
 325:Src/main.c    **** 
 326:Src/main.c    **** }
 327:Src/main.c    **** 
 328:Src/main.c    **** /* TIM3 init function */
 329:Src/main.c    **** static void MX_TIM3_Init(void)
 330:Src/main.c    **** {
 331:Src/main.c    **** 
 332:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig;
 333:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 334:Src/main.c    **** 
 335:Src/main.c    ****   htim3.Instance = TIM3;
 336:Src/main.c    ****   htim3.Init.Prescaler = 0;
 337:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 338:Src/main.c    ****   htim3.Init.Period = 0;
 339:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 340:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 341:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 342:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 343:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 344:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 345:Src/main.c    ****   sConfig.IC1Filter = 0;
 346:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 347:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 348:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 349:Src/main.c    ****   sConfig.IC2Filter = 0;
 350:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 351:Src/main.c    ****   {
 352:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 353:Src/main.c    ****   }
 354:Src/main.c    **** 
 355:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 356:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 357:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 358:Src/main.c    ****   {
 359:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 360:Src/main.c    ****   }
 361:Src/main.c    **** 
 362:Src/main.c    **** }
 363:Src/main.c    **** 
 364:Src/main.c    **** /* TIM4 init function */
 365:Src/main.c    **** static void MX_TIM4_Init(void)
 366:Src/main.c    **** {
 367:Src/main.c    **** 
 368:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig;
 369:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 370:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 371:Src/main.c    **** 
 372:Src/main.c    ****   htim4.Instance = TIM4;
 373:Src/main.c    ****   htim4.Init.Prescaler = 0;
 374:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 8


 375:Src/main.c    ****   htim4.Init.Period = 0;
 376:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 377:Src/main.c    ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 378:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 379:Src/main.c    ****   {
 380:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 381:Src/main.c    ****   }
 382:Src/main.c    **** 
 383:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 384:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 385:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 386:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 387:Src/main.c    ****   sConfig.IC1Filter = 0;
 388:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 389:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 390:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 391:Src/main.c    ****   sConfig.IC2Filter = 0;
 392:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 393:Src/main.c    ****   {
 394:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 395:Src/main.c    ****   }
 396:Src/main.c    **** 
 397:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 398:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 399:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 400:Src/main.c    ****   {
 401:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 402:Src/main.c    ****   }
 403:Src/main.c    **** 
 404:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 405:Src/main.c    ****   sConfigOC.Pulse = 0;
 406:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 407:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 408:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 409:Src/main.c    ****   {
 410:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 411:Src/main.c    ****   }
 412:Src/main.c    **** 
 413:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 414:Src/main.c    ****   {
 415:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 416:Src/main.c    ****   }
 417:Src/main.c    **** 
 418:Src/main.c    ****   HAL_TIM_MspPostInit(&htim4);
 419:Src/main.c    **** 
 420:Src/main.c    **** }
 421:Src/main.c    **** 
 422:Src/main.c    **** /* TIM5 init function */
 423:Src/main.c    **** static void MX_TIM5_Init(void)
 424:Src/main.c    **** {
 425:Src/main.c    **** 
 426:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig;
 427:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 428:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 429:Src/main.c    **** 
 430:Src/main.c    ****   htim5.Instance = TIM5;
 431:Src/main.c    ****   htim5.Init.Prescaler = 0;
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 9


 432:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 433:Src/main.c    ****   htim5.Init.Period = 0;
 434:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 435:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 436:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 437:Src/main.c    ****   {
 438:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 439:Src/main.c    ****   }
 440:Src/main.c    **** 
 441:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 442:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 443:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 444:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 445:Src/main.c    ****   sConfig.IC1Filter = 0;
 446:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 447:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 448:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 449:Src/main.c    ****   sConfig.IC2Filter = 0;
 450:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim5, &sConfig) != HAL_OK)
 451:Src/main.c    ****   {
 452:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 453:Src/main.c    ****   }
 454:Src/main.c    **** 
 455:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 456:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 457:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 458:Src/main.c    ****   {
 459:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 460:Src/main.c    ****   }
 461:Src/main.c    **** 
 462:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 463:Src/main.c    ****   sConfigOC.Pulse = 0;
 464:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 465:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 466:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 467:Src/main.c    ****   {
 468:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 469:Src/main.c    ****   }
 470:Src/main.c    **** 
 471:Src/main.c    ****   HAL_TIM_MspPostInit(&htim5);
 472:Src/main.c    **** 
 473:Src/main.c    **** }
 474:Src/main.c    **** 
 475:Src/main.c    **** /* TIM12 init function */
 476:Src/main.c    **** static void MX_TIM12_Init(void)
 477:Src/main.c    **** {
 478:Src/main.c    **** 
 479:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 480:Src/main.c    **** 
 481:Src/main.c    ****   htim12.Instance = TIM12;
 482:Src/main.c    ****   htim12.Init.Prescaler = 0;
 483:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 484:Src/main.c    ****   htim12.Init.Period = 0;
 485:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 486:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 487:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 488:Src/main.c    ****   {
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 10


 489:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 490:Src/main.c    ****   }
 491:Src/main.c    **** 
 492:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 493:Src/main.c    ****   sConfigOC.Pulse = 0;
 494:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 495:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 496:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 497:Src/main.c    ****   {
 498:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 499:Src/main.c    ****   }
 500:Src/main.c    **** 
 501:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 502:Src/main.c    ****   {
 503:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 504:Src/main.c    ****   }
 505:Src/main.c    **** 
 506:Src/main.c    ****   HAL_TIM_MspPostInit(&htim12);
 507:Src/main.c    **** 
 508:Src/main.c    **** }
 509:Src/main.c    **** 
 510:Src/main.c    **** /* TIM19 init function */
 511:Src/main.c    **** static void MX_TIM19_Init(void)
 512:Src/main.c    **** {
 513:Src/main.c    **** 
 514:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig;
 515:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 516:Src/main.c    **** 
 517:Src/main.c    ****   htim19.Instance = TIM19;
 518:Src/main.c    ****   htim19.Init.Prescaler = 0;
 519:Src/main.c    ****   htim19.Init.CounterMode = TIM_COUNTERMODE_UP;
 520:Src/main.c    ****   htim19.Init.Period = 0;
 521:Src/main.c    ****   htim19.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 522:Src/main.c    ****   htim19.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 523:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 524:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 525:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 526:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 527:Src/main.c    ****   sConfig.IC1Filter = 0;
 528:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 529:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 530:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 531:Src/main.c    ****   sConfig.IC2Filter = 0;
 532:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim19, &sConfig) != HAL_OK)
 533:Src/main.c    ****   {
 534:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 535:Src/main.c    ****   }
 536:Src/main.c    **** 
 537:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 538:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 539:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim19, &sMasterConfig) != HAL_OK)
 540:Src/main.c    ****   {
 541:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 542:Src/main.c    ****   }
 543:Src/main.c    **** 
 544:Src/main.c    **** }
 545:Src/main.c    **** 
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 11


 546:Src/main.c    **** /* USART1 init function */
 547:Src/main.c    **** static void MX_USART1_UART_Init(void)
 548:Src/main.c    **** {
 549:Src/main.c    **** 
 550:Src/main.c    ****   huart1.Instance = USART1;
 551:Src/main.c    ****   huart1.Init.BaudRate = 119200;
 552:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 553:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 554:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 555:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 556:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 557:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 558:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 559:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 560:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 561:Src/main.c    ****   {
 562:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 563:Src/main.c    ****   }
 564:Src/main.c    **** 
 565:Src/main.c    **** }
 566:Src/main.c    **** 
 567:Src/main.c    **** /** Configure pins as 
 568:Src/main.c    ****         * Analog 
 569:Src/main.c    ****         * Input 
 570:Src/main.c    ****         * Output
 571:Src/main.c    ****         * EVENT_OUT
 572:Src/main.c    ****         * EXTI
 573:Src/main.c    **** */
 574:Src/main.c    **** static void MX_GPIO_Init(void)
 575:Src/main.c    **** {
  27              		.loc 1 575 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8CB0     		sub	sp, sp, #48
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 72
  43              	.LBB2:
 576:Src/main.c    **** 
 577:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 578:Src/main.c    **** 
 579:Src/main.c    ****   /* GPIO Ports Clock Enable */
 580:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  44              		.loc 1 580 0
  45 0006 3F4B     		ldr	r3, .L3
  46 0008 5A69     		ldr	r2, [r3, #20]
  47 000a 42F40022 		orr	r2, r2, #524288
  48 000e 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 12


  49 0010 5A69     		ldr	r2, [r3, #20]
  50 0012 02F40022 		and	r2, r2, #524288
  51 0016 0192     		str	r2, [sp, #4]
  52 0018 019A     		ldr	r2, [sp, #4]
  53              	.LBE2:
  54              	.LBB3:
 581:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  55              		.loc 1 581 0
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 42F48002 		orr	r2, r2, #4194304
  58 0020 5A61     		str	r2, [r3, #20]
  59 0022 5A69     		ldr	r2, [r3, #20]
  60 0024 02F48002 		and	r2, r2, #4194304
  61 0028 0292     		str	r2, [sp, #8]
  62 002a 029A     		ldr	r2, [sp, #8]
  63              	.LBE3:
  64              	.LBB4:
 582:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 582 0
  66 002c 5A69     		ldr	r2, [r3, #20]
  67 002e 42F40032 		orr	r2, r2, #131072
  68 0032 5A61     		str	r2, [r3, #20]
  69 0034 5A69     		ldr	r2, [r3, #20]
  70 0036 02F40032 		and	r2, r2, #131072
  71 003a 0392     		str	r2, [sp, #12]
  72 003c 039A     		ldr	r2, [sp, #12]
  73              	.LBE4:
  74              	.LBB5:
 583:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  75              		.loc 1 583 0
  76 003e 5A69     		ldr	r2, [r3, #20]
  77 0040 42F48022 		orr	r2, r2, #262144
  78 0044 5A61     		str	r2, [r3, #20]
  79 0046 5A69     		ldr	r2, [r3, #20]
  80 0048 02F48022 		and	r2, r2, #262144
  81 004c 0492     		str	r2, [sp, #16]
  82 004e 049A     		ldr	r2, [sp, #16]
  83              	.LBE5:
  84              	.LBB6:
 584:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  85              		.loc 1 584 0
  86 0050 5A69     		ldr	r2, [r3, #20]
  87 0052 42F40012 		orr	r2, r2, #2097152
  88 0056 5A61     		str	r2, [r3, #20]
  89 0058 5A69     		ldr	r2, [r3, #20]
  90 005a 02F40012 		and	r2, r2, #2097152
  91 005e 0592     		str	r2, [sp, #20]
  92 0060 059A     		ldr	r2, [sp, #20]
  93              	.LBE6:
  94              	.LBB7:
 585:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  95              		.loc 1 585 0
  96 0062 5A69     		ldr	r2, [r3, #20]
  97 0064 42F48012 		orr	r2, r2, #1048576
  98 0068 5A61     		str	r2, [r3, #20]
  99 006a 5B69     		ldr	r3, [r3, #20]
 100 006c 03F48013 		and	r3, r3, #1048576
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 13


 101 0070 0693     		str	r3, [sp, #24]
 102 0072 069B     		ldr	r3, [sp, #24]
 103              	.LBE7:
 586:Src/main.c    **** 
 587:Src/main.c    ****   /*Configure GPIO pin Output Level */
 588:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, DIR2_Pin|DIR3_Pin|DIR4_Pin, GPIO_PIN_RESET);
 104              		.loc 1 588 0
 105 0074 DFF89880 		ldr	r8, .L3+12
 106 0078 0022     		movs	r2, #0
 107 007a 4FF46041 		mov	r1, #57344
 108 007e 4046     		mov	r0, r8
 109 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 110              	.LVL0:
 589:Src/main.c    **** 
 590:Src/main.c    ****   /*Configure GPIO pin Output Level */
 591:Src/main.c    ****   HAL_GPIO_WritePin(DIR1_GPIO_Port, DIR1_Pin, GPIO_PIN_RESET);
 111              		.loc 1 591 0
 112 0084 0022     		movs	r2, #0
 113 0086 0421     		movs	r1, #4
 114 0088 4FF09040 		mov	r0, #1207959552
 115 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 116              	.LVL1:
 592:Src/main.c    **** 
 593:Src/main.c    ****   /*Configure GPIO pin Output Level */
 594:Src/main.c    ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 117              		.loc 1 594 0
 118 0090 1D4F     		ldr	r7, .L3+4
 119 0092 0022     		movs	r2, #0
 120 0094 4FF48071 		mov	r1, #256
 121 0098 3846     		mov	r0, r7
 122 009a FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL2:
 595:Src/main.c    **** 
 596:Src/main.c    ****   /*Configure GPIO pin Output Level */
 597:Src/main.c    ****   HAL_GPIO_WritePin(DIR5_GPIO_Port, DIR5_Pin, GPIO_PIN_RESET);
 124              		.loc 1 597 0
 125 009e 1B4E     		ldr	r6, .L3+8
 126 00a0 0022     		movs	r2, #0
 127 00a2 4021     		movs	r1, #64
 128 00a4 3046     		mov	r0, r6
 129 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 130              	.LVL3:
 598:Src/main.c    **** 
 599:Src/main.c    ****   /*Configure GPIO pins : DIR2_Pin DIR3_Pin DIR4_Pin */
 600:Src/main.c    ****   GPIO_InitStruct.Pin = DIR2_Pin|DIR3_Pin|DIR4_Pin;
 131              		.loc 1 600 0
 132 00aa 4FF46043 		mov	r3, #57344
 133 00ae 0793     		str	r3, [sp, #28]
 601:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 134              		.loc 1 601 0
 135 00b0 0125     		movs	r5, #1
 136 00b2 0895     		str	r5, [sp, #32]
 602:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 137              		.loc 1 602 0
 138 00b4 0024     		movs	r4, #0
 139 00b6 0994     		str	r4, [sp, #36]
 603:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 14


 140              		.loc 1 603 0
 141 00b8 0A94     		str	r4, [sp, #40]
 604:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 142              		.loc 1 604 0
 143 00ba 07A9     		add	r1, sp, #28
 144 00bc 4046     		mov	r0, r8
 145 00be FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
 605:Src/main.c    **** 
 606:Src/main.c    ****   /*Configure GPIO pin : DIR1_Pin */
 607:Src/main.c    ****   GPIO_InitStruct.Pin = DIR1_Pin;
 147              		.loc 1 607 0
 148 00c2 0423     		movs	r3, #4
 149 00c4 0793     		str	r3, [sp, #28]
 608:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 150              		.loc 1 608 0
 151 00c6 0895     		str	r5, [sp, #32]
 609:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 609 0
 153 00c8 0994     		str	r4, [sp, #36]
 610:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 154              		.loc 1 610 0
 155 00ca 0A94     		str	r4, [sp, #40]
 611:Src/main.c    ****   HAL_GPIO_Init(DIR1_GPIO_Port, &GPIO_InitStruct);
 156              		.loc 1 611 0
 157 00cc 07A9     		add	r1, sp, #28
 158 00ce 4FF09040 		mov	r0, #1207959552
 159 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 160              	.LVL5:
 612:Src/main.c    **** 
 613:Src/main.c    ****   /*Configure GPIO pin : LED_Pin */
 614:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Pin;
 161              		.loc 1 614 0
 162 00d6 4FF48073 		mov	r3, #256
 163 00da 0793     		str	r3, [sp, #28]
 615:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 615 0
 165 00dc 0895     		str	r5, [sp, #32]
 616:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 616 0
 167 00de 0994     		str	r4, [sp, #36]
 617:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 168              		.loc 1 617 0
 169 00e0 0A94     		str	r4, [sp, #40]
 618:Src/main.c    ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 170              		.loc 1 618 0
 171 00e2 07A9     		add	r1, sp, #28
 172 00e4 3846     		mov	r0, r7
 173 00e6 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL6:
 619:Src/main.c    **** 
 620:Src/main.c    ****   /*Configure GPIO pin : DIR5_Pin */
 621:Src/main.c    ****   GPIO_InitStruct.Pin = DIR5_Pin;
 175              		.loc 1 621 0
 176 00ea 4023     		movs	r3, #64
 177 00ec 0793     		str	r3, [sp, #28]
 622:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 15


 178              		.loc 1 622 0
 179 00ee 0895     		str	r5, [sp, #32]
 623:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 180              		.loc 1 623 0
 181 00f0 0994     		str	r4, [sp, #36]
 624:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 182              		.loc 1 624 0
 183 00f2 0A94     		str	r4, [sp, #40]
 625:Src/main.c    ****   HAL_GPIO_Init(DIR5_GPIO_Port, &GPIO_InitStruct);
 184              		.loc 1 625 0
 185 00f4 07A9     		add	r1, sp, #28
 186 00f6 3046     		mov	r0, r6
 187 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 188              	.LVL7:
 626:Src/main.c    **** 
 627:Src/main.c    **** }
 189              		.loc 1 627 0
 190 00fc 0CB0     		add	sp, sp, #48
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 24
 193              		@ sp needed
 194 00fe BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 195              	.L4:
 196 0102 00BF     		.align	2
 197              	.L3:
 198 0104 00100240 		.word	1073876992
 199 0108 000C0048 		.word	1207962624
 200 010c 00040048 		.word	1207960576
 201 0110 00080048 		.word	1207961600
 202              		.cfi_endproc
 203              	.LFE141:
 205              		.section	.text.BlinkFunction,"ax",%progbits
 206              		.align	1
 207              		.global	BlinkFunction
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	BlinkFunction:
 214              	.LFB142:
 628:Src/main.c    **** 
 629:Src/main.c    **** /* USER CODE BEGIN 4 */
 630:Src/main.c    **** 
 631:Src/main.c    **** /* USER CODE END 4 */
 632:Src/main.c    **** 
 633:Src/main.c    **** /* BlinkFunction function */
 634:Src/main.c    **** void BlinkFunction(void const * argument)
 635:Src/main.c    **** {
 215              		.loc 1 635 0
 216              		.cfi_startproc
 217              		@ Volatile: function does not return.
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL8:
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI3:
 223              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 16


 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 226              	.LVL9:
 227              	.L6:
 636:Src/main.c    **** 
 637:Src/main.c    ****   /* USER CODE BEGIN 5 */
 638:Src/main.c    ****   /* Infinite loop */
 639:Src/main.c    ****   for(;;)
 640:Src/main.c    ****   {
 641:Src/main.c    ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 228              		.loc 1 641 0 discriminator 1
 229 0002 4FF48071 		mov	r1, #256
 230 0006 0348     		ldr	r0, .L8
 231 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 232              	.LVL10:
 642:Src/main.c    ****     osDelay(100);
 233              		.loc 1 642 0 discriminator 1
 234 000c 6420     		movs	r0, #100
 235 000e FFF7FEFF 		bl	osDelay
 236              	.LVL11:
 237 0012 F6E7     		b	.L6
 238              	.L9:
 239              		.align	2
 240              	.L8:
 241 0014 000C0048 		.word	1207962624
 242              		.cfi_endproc
 243              	.LFE142:
 245              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 246              		.align	1
 247              		.global	HAL_TIM_PeriodElapsedCallback
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu fpv4-sp-d16
 253              	HAL_TIM_PeriodElapsedCallback:
 254              	.LFB143:
 643:Src/main.c    ****   }
 644:Src/main.c    ****   /* USER CODE END 5 */ 
 645:Src/main.c    **** }
 646:Src/main.c    **** 
 647:Src/main.c    **** /**
 648:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 649:Src/main.c    ****   * @note   This function is called  when TIM6 interrupt took place, inside
 650:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 651:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 652:Src/main.c    ****   * @param  htim : TIM handle
 653:Src/main.c    ****   * @retval None
 654:Src/main.c    ****   */
 655:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 656:Src/main.c    **** {
 255              		.loc 1 656 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              	.LVL12:
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI4:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 17


 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 657:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 658:Src/main.c    **** 
 659:Src/main.c    ****   /* USER CODE END Callback 0 */
 660:Src/main.c    ****   if (htim->Instance == TIM6) {
 265              		.loc 1 660 0
 266 0002 0268     		ldr	r2, [r0]
 267 0004 034B     		ldr	r3, .L14
 268 0006 9A42     		cmp	r2, r3
 269 0008 00D0     		beq	.L13
 270              	.LVL13:
 271              	.L10:
 661:Src/main.c    ****     HAL_IncTick();
 662:Src/main.c    ****   }
 663:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 664:Src/main.c    **** 
 665:Src/main.c    ****   /* USER CODE END Callback 1 */
 666:Src/main.c    **** }
 272              		.loc 1 666 0
 273 000a 08BD     		pop	{r3, pc}
 274              	.LVL14:
 275              	.L13:
 661:Src/main.c    ****     HAL_IncTick();
 276              		.loc 1 661 0
 277 000c FFF7FEFF 		bl	HAL_IncTick
 278              	.LVL15:
 279              		.loc 1 666 0
 280 0010 FBE7     		b	.L10
 281              	.L15:
 282 0012 00BF     		.align	2
 283              	.L14:
 284 0014 00100040 		.word	1073745920
 285              		.cfi_endproc
 286              	.LFE143:
 288              		.section	.text._Error_Handler,"ax",%progbits
 289              		.align	1
 290              		.global	_Error_Handler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	_Error_Handler:
 297              	.LFB144:
 667:Src/main.c    **** 
 668:Src/main.c    **** /**
 669:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 670:Src/main.c    ****   * @param  file: The file name as string.
 671:Src/main.c    ****   * @param  line: The line in file as a number.
 672:Src/main.c    ****   * @retval None
 673:Src/main.c    ****   */
 674:Src/main.c    **** void _Error_Handler(char *file, int line)
 675:Src/main.c    **** {
 298              		.loc 1 675 0
 299              		.cfi_startproc
 300              		@ Volatile: function does not return.
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 18


 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304              	.LVL16:
 305              	.L17:
 306 0000 FEE7     		b	.L17
 307              		.cfi_endproc
 308              	.LFE144:
 310              		.section	.text.MX_SDADC1_Init,"ax",%progbits
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv4-sp-d16
 317              	MX_SDADC1_Init:
 318              	.LFB133:
 255:Src/main.c    **** 
 319              		.loc 1 255 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 16
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 255:Src/main.c    **** 
 323              		.loc 1 255 0
 324 0000 00B5     		push	{lr}
 325              	.LCFI5:
 326              		.cfi_def_cfa_offset 4
 327              		.cfi_offset 14, -4
 328 0002 85B0     		sub	sp, sp, #20
 329              	.LCFI6:
 330              		.cfi_def_cfa_offset 24
 262:Src/main.c    ****   hsdadc1.Init.IdleLowPowerMode = SDADC_LOWPOWER_NONE;
 331              		.loc 1 262 0
 332 0004 1748     		ldr	r0, .L26
 333 0006 184B     		ldr	r3, .L26+4
 334 0008 0360     		str	r3, [r0]
 263:Src/main.c    ****   hsdadc1.Init.FastConversionMode = SDADC_FAST_CONV_DISABLE;
 335              		.loc 1 263 0
 336 000a 0023     		movs	r3, #0
 337 000c 4360     		str	r3, [r0, #4]
 264:Src/main.c    ****   hsdadc1.Init.SlowClockMode = SDADC_SLOW_CLOCK_DISABLE;
 338              		.loc 1 264 0
 339 000e 8360     		str	r3, [r0, #8]
 265:Src/main.c    ****   hsdadc1.Init.ReferenceVoltage = SDADC_VREF_VREFINT1;
 340              		.loc 1 265 0
 341 0010 C360     		str	r3, [r0, #12]
 266:Src/main.c    ****   if (HAL_SDADC_Init(&hsdadc1) != HAL_OK)
 342              		.loc 1 266 0
 343 0012 4FF48073 		mov	r3, #256
 344 0016 0361     		str	r3, [r0, #16]
 267:Src/main.c    ****   {
 345              		.loc 1 267 0
 346 0018 FFF7FEFF 		bl	HAL_SDADC_Init
 347              	.LVL17:
 348 001c 98B9     		cbnz	r0, .L23
 274:Src/main.c    ****   {
 349              		.loc 1 274 0
 350 001e 0021     		movs	r1, #0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 19


 351 0020 1048     		ldr	r0, .L26
 352 0022 FFF7FEFF 		bl	HAL_SDADC_SelectRegularTrigger
 353              	.LVL18:
 354 0026 98B9     		cbnz	r0, .L24
 281:Src/main.c    ****   ConfParamStruct.Gain = SDADC_GAIN_1;
 355              		.loc 1 281 0
 356 0028 4FF04063 		mov	r3, #201326592
 357 002c 0093     		str	r3, [sp]
 282:Src/main.c    ****   ConfParamStruct.CommonMode = SDADC_COMMON_MODE_VSSA;
 358              		.loc 1 282 0
 359 002e 0021     		movs	r1, #0
 360 0030 0191     		str	r1, [sp, #4]
 283:Src/main.c    ****   ConfParamStruct.Offset = 0;
 361              		.loc 1 283 0
 362 0032 0291     		str	r1, [sp, #8]
 284:Src/main.c    ****   if (HAL_SDADC_PrepareChannelConfig(&hsdadc1, SDADC_CONF_INDEX_0, &ConfParamStruct) != HAL_OK)
 363              		.loc 1 284 0
 364 0034 0391     		str	r1, [sp, #12]
 285:Src/main.c    ****   {
 365              		.loc 1 285 0
 366 0036 6A46     		mov	r2, sp
 367 0038 0A48     		ldr	r0, .L26
 368 003a FFF7FEFF 		bl	HAL_SDADC_PrepareChannelConfig
 369              	.LVL19:
 370 003e 60B9     		cbnz	r0, .L25
 290:Src/main.c    **** 
 371              		.loc 1 290 0
 372 0040 05B0     		add	sp, sp, #20
 373              	.LCFI7:
 374              		.cfi_remember_state
 375              		.cfi_def_cfa_offset 4
 376              		@ sp needed
 377 0042 5DF804FB 		ldr	pc, [sp], #4
 378              	.L23:
 379              	.LCFI8:
 380              		.cfi_restore_state
 269:Src/main.c    ****   }
 381              		.loc 1 269 0
 382 0046 40F20D11 		movw	r1, #269
 383 004a 0848     		ldr	r0, .L26+8
 384 004c FFF7FEFF 		bl	_Error_Handler
 385              	.LVL20:
 386              	.L24:
 276:Src/main.c    ****   }
 387              		.loc 1 276 0
 388 0050 4FF48A71 		mov	r1, #276
 389 0054 0548     		ldr	r0, .L26+8
 390 0056 FFF7FEFF 		bl	_Error_Handler
 391              	.LVL21:
 392              	.L25:
 287:Src/main.c    ****   }
 393              		.loc 1 287 0
 394 005a 40F21F11 		movw	r1, #287
 395 005e 0348     		ldr	r0, .L26+8
 396 0060 FFF7FEFF 		bl	_Error_Handler
 397              	.LVL22:
 398              	.L27:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 20


 399              		.align	2
 400              	.L26:
 401 0064 00000000 		.word	hsdadc1
 402 0068 00600140 		.word	1073831936
 403 006c 00000000 		.word	.LC2
 404              		.cfi_endproc
 405              	.LFE133:
 407              		.section	.text.MX_TIM2_Init,"ax",%progbits
 408              		.align	1
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	MX_TIM2_Init:
 415              	.LFB134:
 294:Src/main.c    **** 
 416              		.loc 1 294 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 48
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 00B5     		push	{lr}
 421              	.LCFI9:
 422              		.cfi_def_cfa_offset 4
 423              		.cfi_offset 14, -4
 424 0002 8DB0     		sub	sp, sp, #52
 425              	.LCFI10:
 426              		.cfi_def_cfa_offset 56
 299:Src/main.c    ****   htim2.Init.Prescaler = 0;
 427              		.loc 1 299 0
 428 0004 1648     		ldr	r0, .L34
 429 0006 4FF08043 		mov	r3, #1073741824
 430 000a 0360     		str	r3, [r0]
 300:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 431              		.loc 1 300 0
 432 000c 0023     		movs	r3, #0
 433 000e 4360     		str	r3, [r0, #4]
 301:Src/main.c    ****   htim2.Init.Period = 0;
 434              		.loc 1 301 0
 435 0010 8360     		str	r3, [r0, #8]
 302:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 436              		.loc 1 302 0
 437 0012 C360     		str	r3, [r0, #12]
 303:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 438              		.loc 1 303 0
 439 0014 0361     		str	r3, [r0, #16]
 304:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 440              		.loc 1 304 0
 441 0016 8361     		str	r3, [r0, #24]
 305:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 442              		.loc 1 305 0
 443 0018 0122     		movs	r2, #1
 444 001a 0392     		str	r2, [sp, #12]
 306:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 445              		.loc 1 306 0
 446 001c 0493     		str	r3, [sp, #16]
 307:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 447              		.loc 1 307 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 21


 448 001e 0592     		str	r2, [sp, #20]
 308:Src/main.c    ****   sConfig.IC1Filter = 0;
 449              		.loc 1 308 0
 450 0020 0693     		str	r3, [sp, #24]
 309:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 451              		.loc 1 309 0
 452 0022 0793     		str	r3, [sp, #28]
 310:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 453              		.loc 1 310 0
 454 0024 0893     		str	r3, [sp, #32]
 311:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 455              		.loc 1 311 0
 456 0026 0992     		str	r2, [sp, #36]
 312:Src/main.c    ****   sConfig.IC2Filter = 0;
 457              		.loc 1 312 0
 458 0028 0A93     		str	r3, [sp, #40]
 313:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 459              		.loc 1 313 0
 460 002a 0B93     		str	r3, [sp, #44]
 314:Src/main.c    ****   {
 461              		.loc 1 314 0
 462 002c 03A9     		add	r1, sp, #12
 463 002e FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 464              	.LVL23:
 465 0032 50B9     		cbnz	r0, .L32
 319:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 466              		.loc 1 319 0
 467 0034 0023     		movs	r3, #0
 468 0036 0193     		str	r3, [sp, #4]
 320:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 469              		.loc 1 320 0
 470 0038 0293     		str	r3, [sp, #8]
 321:Src/main.c    ****   {
 471              		.loc 1 321 0
 472 003a 01A9     		add	r1, sp, #4
 473 003c 0848     		ldr	r0, .L34
 474 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 475              	.LVL24:
 476 0042 38B9     		cbnz	r0, .L33
 326:Src/main.c    **** 
 477              		.loc 1 326 0
 478 0044 0DB0     		add	sp, sp, #52
 479              	.LCFI11:
 480              		.cfi_remember_state
 481              		.cfi_def_cfa_offset 4
 482              		@ sp needed
 483 0046 5DF804FB 		ldr	pc, [sp], #4
 484              	.L32:
 485              	.LCFI12:
 486              		.cfi_restore_state
 316:Src/main.c    ****   }
 487              		.loc 1 316 0
 488 004a 4FF49E71 		mov	r1, #316
 489 004e 0548     		ldr	r0, .L34+4
 490 0050 FFF7FEFF 		bl	_Error_Handler
 491              	.LVL25:
 492              	.L33:
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 22


 323:Src/main.c    ****   }
 493              		.loc 1 323 0
 494 0054 40F24311 		movw	r1, #323
 495 0058 0248     		ldr	r0, .L34+4
 496 005a FFF7FEFF 		bl	_Error_Handler
 497              	.LVL26:
 498              	.L35:
 499 005e 00BF     		.align	2
 500              	.L34:
 501 0060 00000000 		.word	htim2
 502 0064 00000000 		.word	.LC2
 503              		.cfi_endproc
 504              	.LFE134:
 506              		.section	.text.MX_TIM3_Init,"ax",%progbits
 507              		.align	1
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu fpv4-sp-d16
 513              	MX_TIM3_Init:
 514              	.LFB135:
 330:Src/main.c    **** 
 515              		.loc 1 330 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 48
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519 0000 00B5     		push	{lr}
 520              	.LCFI13:
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 14, -4
 523 0002 8DB0     		sub	sp, sp, #52
 524              	.LCFI14:
 525              		.cfi_def_cfa_offset 56
 335:Src/main.c    ****   htim3.Init.Prescaler = 0;
 526              		.loc 1 335 0
 527 0004 1548     		ldr	r0, .L42
 528 0006 164B     		ldr	r3, .L42+4
 529 0008 0360     		str	r3, [r0]
 336:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 530              		.loc 1 336 0
 531 000a 0023     		movs	r3, #0
 532 000c 4360     		str	r3, [r0, #4]
 337:Src/main.c    ****   htim3.Init.Period = 0;
 533              		.loc 1 337 0
 534 000e 8360     		str	r3, [r0, #8]
 338:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 535              		.loc 1 338 0
 536 0010 C360     		str	r3, [r0, #12]
 339:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 537              		.loc 1 339 0
 538 0012 0361     		str	r3, [r0, #16]
 340:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 539              		.loc 1 340 0
 540 0014 8361     		str	r3, [r0, #24]
 341:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 541              		.loc 1 341 0
 542 0016 0122     		movs	r2, #1
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 23


 543 0018 0392     		str	r2, [sp, #12]
 342:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 544              		.loc 1 342 0
 545 001a 0493     		str	r3, [sp, #16]
 343:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 546              		.loc 1 343 0
 547 001c 0592     		str	r2, [sp, #20]
 344:Src/main.c    ****   sConfig.IC1Filter = 0;
 548              		.loc 1 344 0
 549 001e 0693     		str	r3, [sp, #24]
 345:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 550              		.loc 1 345 0
 551 0020 0793     		str	r3, [sp, #28]
 346:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 552              		.loc 1 346 0
 553 0022 0893     		str	r3, [sp, #32]
 347:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 554              		.loc 1 347 0
 555 0024 0992     		str	r2, [sp, #36]
 348:Src/main.c    ****   sConfig.IC2Filter = 0;
 556              		.loc 1 348 0
 557 0026 0A93     		str	r3, [sp, #40]
 349:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 558              		.loc 1 349 0
 559 0028 0B93     		str	r3, [sp, #44]
 350:Src/main.c    ****   {
 560              		.loc 1 350 0
 561 002a 03A9     		add	r1, sp, #12
 562 002c FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 563              	.LVL27:
 564 0030 50B9     		cbnz	r0, .L40
 355:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 565              		.loc 1 355 0
 566 0032 0023     		movs	r3, #0
 567 0034 0193     		str	r3, [sp, #4]
 356:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 568              		.loc 1 356 0
 569 0036 0293     		str	r3, [sp, #8]
 357:Src/main.c    ****   {
 570              		.loc 1 357 0
 571 0038 01A9     		add	r1, sp, #4
 572 003a 0848     		ldr	r0, .L42
 573 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 574              	.LVL28:
 575 0040 38B9     		cbnz	r0, .L41
 362:Src/main.c    **** 
 576              		.loc 1 362 0
 577 0042 0DB0     		add	sp, sp, #52
 578              	.LCFI15:
 579              		.cfi_remember_state
 580              		.cfi_def_cfa_offset 4
 581              		@ sp needed
 582 0044 5DF804FB 		ldr	pc, [sp], #4
 583              	.L40:
 584              	.LCFI16:
 585              		.cfi_restore_state
 352:Src/main.c    ****   }
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 24


 586              		.loc 1 352 0
 587 0048 4FF4B071 		mov	r1, #352
 588 004c 0548     		ldr	r0, .L42+8
 589 004e FFF7FEFF 		bl	_Error_Handler
 590              	.LVL29:
 591              	.L41:
 359:Src/main.c    ****   }
 592              		.loc 1 359 0
 593 0052 40F26711 		movw	r1, #359
 594 0056 0348     		ldr	r0, .L42+8
 595 0058 FFF7FEFF 		bl	_Error_Handler
 596              	.LVL30:
 597              	.L43:
 598              		.align	2
 599              	.L42:
 600 005c 00000000 		.word	htim3
 601 0060 00040040 		.word	1073742848
 602 0064 00000000 		.word	.LC2
 603              		.cfi_endproc
 604              	.LFE135:
 606              		.section	.text.MX_TIM4_Init,"ax",%progbits
 607              		.align	1
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv4-sp-d16
 613              	MX_TIM4_Init:
 614              	.LFB136:
 366:Src/main.c    **** 
 615              		.loc 1 366 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 72
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619 0000 00B5     		push	{lr}
 620              	.LCFI17:
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 14, -4
 623 0002 93B0     		sub	sp, sp, #76
 624              	.LCFI18:
 625              		.cfi_def_cfa_offset 80
 372:Src/main.c    ****   htim4.Init.Prescaler = 0;
 626              		.loc 1 372 0
 627 0004 2A48     		ldr	r0, .L56
 628 0006 2B4B     		ldr	r3, .L56+4
 629 0008 0360     		str	r3, [r0]
 373:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 630              		.loc 1 373 0
 631 000a 0023     		movs	r3, #0
 632 000c 4360     		str	r3, [r0, #4]
 374:Src/main.c    ****   htim4.Init.Period = 0;
 633              		.loc 1 374 0
 634 000e 8360     		str	r3, [r0, #8]
 375:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 635              		.loc 1 375 0
 636 0010 C360     		str	r3, [r0, #12]
 376:Src/main.c    ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 637              		.loc 1 376 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 25


 638 0012 0361     		str	r3, [r0, #16]
 377:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 639              		.loc 1 377 0
 640 0014 8361     		str	r3, [r0, #24]
 378:Src/main.c    ****   {
 641              		.loc 1 378 0
 642 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 643              	.LVL31:
 644 001a 0028     		cmp	r0, #0
 645 001c 2FD1     		bne	.L51
 383:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 646              		.loc 1 383 0
 647 001e 0122     		movs	r2, #1
 648 0020 0992     		str	r2, [sp, #36]
 384:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 649              		.loc 1 384 0
 650 0022 0023     		movs	r3, #0
 651 0024 0A93     		str	r3, [sp, #40]
 385:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 652              		.loc 1 385 0
 653 0026 0B92     		str	r2, [sp, #44]
 386:Src/main.c    ****   sConfig.IC1Filter = 0;
 654              		.loc 1 386 0
 655 0028 0C93     		str	r3, [sp, #48]
 387:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 656              		.loc 1 387 0
 657 002a 0D93     		str	r3, [sp, #52]
 388:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 658              		.loc 1 388 0
 659 002c 0E93     		str	r3, [sp, #56]
 389:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 660              		.loc 1 389 0
 661 002e 0F92     		str	r2, [sp, #60]
 390:Src/main.c    ****   sConfig.IC2Filter = 0;
 662              		.loc 1 390 0
 663 0030 1093     		str	r3, [sp, #64]
 391:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 664              		.loc 1 391 0
 665 0032 1193     		str	r3, [sp, #68]
 392:Src/main.c    ****   {
 666              		.loc 1 392 0
 667 0034 09A9     		add	r1, sp, #36
 668 0036 1E48     		ldr	r0, .L56
 669 0038 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 670              	.LVL32:
 671 003c 20BB     		cbnz	r0, .L52
 397:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 672              		.loc 1 397 0
 673 003e 0023     		movs	r3, #0
 674 0040 0793     		str	r3, [sp, #28]
 398:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 675              		.loc 1 398 0
 676 0042 0893     		str	r3, [sp, #32]
 399:Src/main.c    ****   {
 677              		.loc 1 399 0
 678 0044 07A9     		add	r1, sp, #28
 679 0046 1A48     		ldr	r0, .L56
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 26


 680 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 681              	.LVL33:
 682 004c 08BB     		cbnz	r0, .L53
 404:Src/main.c    ****   sConfigOC.Pulse = 0;
 683              		.loc 1 404 0
 684 004e 6023     		movs	r3, #96
 685 0050 0093     		str	r3, [sp]
 405:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 686              		.loc 1 405 0
 687 0052 0023     		movs	r3, #0
 688 0054 0193     		str	r3, [sp, #4]
 406:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 689              		.loc 1 406 0
 690 0056 0293     		str	r3, [sp, #8]
 407:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 691              		.loc 1 407 0
 692 0058 0493     		str	r3, [sp, #16]
 408:Src/main.c    ****   {
 693              		.loc 1 408 0
 694 005a 0822     		movs	r2, #8
 695 005c 6946     		mov	r1, sp
 696 005e 1448     		ldr	r0, .L56
 697 0060 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 698              	.LVL34:
 699 0064 D0B9     		cbnz	r0, .L54
 413:Src/main.c    ****   {
 700              		.loc 1 413 0
 701 0066 0C22     		movs	r2, #12
 702 0068 6946     		mov	r1, sp
 703 006a 1148     		ldr	r0, .L56
 704 006c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 705              	.LVL35:
 706 0070 C8B9     		cbnz	r0, .L55
 418:Src/main.c    **** 
 707              		.loc 1 418 0
 708 0072 0F48     		ldr	r0, .L56
 709 0074 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 710              	.LVL36:
 420:Src/main.c    **** 
 711              		.loc 1 420 0
 712 0078 13B0     		add	sp, sp, #76
 713              	.LCFI19:
 714              		.cfi_remember_state
 715              		.cfi_def_cfa_offset 4
 716              		@ sp needed
 717 007a 5DF804FB 		ldr	pc, [sp], #4
 718              	.L51:
 719              	.LCFI20:
 720              		.cfi_restore_state
 380:Src/main.c    ****   }
 721              		.loc 1 380 0
 722 007e 4FF4BE71 		mov	r1, #380
 723 0082 0D48     		ldr	r0, .L56+8
 724 0084 FFF7FEFF 		bl	_Error_Handler
 725              	.LVL37:
 726              	.L52:
 394:Src/main.c    ****   }
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 27


 727              		.loc 1 394 0
 728 0088 4FF4C571 		mov	r1, #394
 729 008c 0A48     		ldr	r0, .L56+8
 730 008e FFF7FEFF 		bl	_Error_Handler
 731              	.LVL38:
 732              	.L53:
 401:Src/main.c    ****   }
 733              		.loc 1 401 0
 734 0092 40F29111 		movw	r1, #401
 735 0096 0848     		ldr	r0, .L56+8
 736 0098 FFF7FEFF 		bl	_Error_Handler
 737              	.LVL39:
 738              	.L54:
 410:Src/main.c    ****   }
 739              		.loc 1 410 0
 740 009c 4FF4CD71 		mov	r1, #410
 741 00a0 0548     		ldr	r0, .L56+8
 742 00a2 FFF7FEFF 		bl	_Error_Handler
 743              	.LVL40:
 744              	.L55:
 415:Src/main.c    ****   }
 745              		.loc 1 415 0
 746 00a6 40F29F11 		movw	r1, #415
 747 00aa 0348     		ldr	r0, .L56+8
 748 00ac FFF7FEFF 		bl	_Error_Handler
 749              	.LVL41:
 750              	.L57:
 751              		.align	2
 752              	.L56:
 753 00b0 00000000 		.word	htim4
 754 00b4 00080040 		.word	1073743872
 755 00b8 00000000 		.word	.LC2
 756              		.cfi_endproc
 757              	.LFE136:
 759              		.section	.text.MX_TIM5_Init,"ax",%progbits
 760              		.align	1
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv4-sp-d16
 766              	MX_TIM5_Init:
 767              	.LFB137:
 424:Src/main.c    **** 
 768              		.loc 1 424 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 72
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772 0000 00B5     		push	{lr}
 773              	.LCFI21:
 774              		.cfi_def_cfa_offset 4
 775              		.cfi_offset 14, -4
 776 0002 93B0     		sub	sp, sp, #76
 777              	.LCFI22:
 778              		.cfi_def_cfa_offset 80
 430:Src/main.c    ****   htim5.Init.Prescaler = 0;
 779              		.loc 1 430 0
 780 0004 2448     		ldr	r0, .L68
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 28


 781 0006 254B     		ldr	r3, .L68+4
 782 0008 0360     		str	r3, [r0]
 431:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 783              		.loc 1 431 0
 784 000a 0023     		movs	r3, #0
 785 000c 4360     		str	r3, [r0, #4]
 432:Src/main.c    ****   htim5.Init.Period = 0;
 786              		.loc 1 432 0
 787 000e 8360     		str	r3, [r0, #8]
 433:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 788              		.loc 1 433 0
 789 0010 C360     		str	r3, [r0, #12]
 434:Src/main.c    ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 790              		.loc 1 434 0
 791 0012 0361     		str	r3, [r0, #16]
 435:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 792              		.loc 1 435 0
 793 0014 8361     		str	r3, [r0, #24]
 436:Src/main.c    ****   {
 794              		.loc 1 436 0
 795 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 796              	.LVL42:
 797 001a 48BB     		cbnz	r0, .L64
 441:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 798              		.loc 1 441 0
 799 001c 0122     		movs	r2, #1
 800 001e 0992     		str	r2, [sp, #36]
 442:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 801              		.loc 1 442 0
 802 0020 0023     		movs	r3, #0
 803 0022 0A93     		str	r3, [sp, #40]
 443:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 804              		.loc 1 443 0
 805 0024 0B92     		str	r2, [sp, #44]
 444:Src/main.c    ****   sConfig.IC1Filter = 0;
 806              		.loc 1 444 0
 807 0026 0C93     		str	r3, [sp, #48]
 445:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 808              		.loc 1 445 0
 809 0028 0D93     		str	r3, [sp, #52]
 446:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 810              		.loc 1 446 0
 811 002a 0E93     		str	r3, [sp, #56]
 447:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 812              		.loc 1 447 0
 813 002c 0F92     		str	r2, [sp, #60]
 448:Src/main.c    ****   sConfig.IC2Filter = 0;
 814              		.loc 1 448 0
 815 002e 1093     		str	r3, [sp, #64]
 449:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim5, &sConfig) != HAL_OK)
 816              		.loc 1 449 0
 817 0030 1193     		str	r3, [sp, #68]
 450:Src/main.c    ****   {
 818              		.loc 1 450 0
 819 0032 09A9     		add	r1, sp, #36
 820 0034 1848     		ldr	r0, .L68
 821 0036 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 29


 822              	.LVL43:
 823 003a F0B9     		cbnz	r0, .L65
 455:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 824              		.loc 1 455 0
 825 003c 0023     		movs	r3, #0
 826 003e 0793     		str	r3, [sp, #28]
 456:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 827              		.loc 1 456 0
 828 0040 0893     		str	r3, [sp, #32]
 457:Src/main.c    ****   {
 829              		.loc 1 457 0
 830 0042 07A9     		add	r1, sp, #28
 831 0044 1448     		ldr	r0, .L68
 832 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 833              	.LVL44:
 834 004a D8B9     		cbnz	r0, .L66
 462:Src/main.c    ****   sConfigOC.Pulse = 0;
 835              		.loc 1 462 0
 836 004c 6023     		movs	r3, #96
 837 004e 0093     		str	r3, [sp]
 463:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 838              		.loc 1 463 0
 839 0050 0023     		movs	r3, #0
 840 0052 0193     		str	r3, [sp, #4]
 464:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 841              		.loc 1 464 0
 842 0054 0293     		str	r3, [sp, #8]
 465:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 843              		.loc 1 465 0
 844 0056 0493     		str	r3, [sp, #16]
 466:Src/main.c    ****   {
 845              		.loc 1 466 0
 846 0058 0C22     		movs	r2, #12
 847 005a 6946     		mov	r1, sp
 848 005c 0E48     		ldr	r0, .L68
 849 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 850              	.LVL45:
 851 0062 A0B9     		cbnz	r0, .L67
 471:Src/main.c    **** 
 852              		.loc 1 471 0
 853 0064 0C48     		ldr	r0, .L68
 854 0066 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 855              	.LVL46:
 473:Src/main.c    **** 
 856              		.loc 1 473 0
 857 006a 13B0     		add	sp, sp, #76
 858              	.LCFI23:
 859              		.cfi_remember_state
 860              		.cfi_def_cfa_offset 4
 861              		@ sp needed
 862 006c 5DF804FB 		ldr	pc, [sp], #4
 863              	.L64:
 864              	.LCFI24:
 865              		.cfi_restore_state
 438:Src/main.c    ****   }
 866              		.loc 1 438 0
 867 0070 4FF4DB71 		mov	r1, #438
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 30


 868 0074 0A48     		ldr	r0, .L68+8
 869 0076 FFF7FEFF 		bl	_Error_Handler
 870              	.LVL47:
 871              	.L65:
 452:Src/main.c    ****   }
 872              		.loc 1 452 0
 873 007a 4FF4E271 		mov	r1, #452
 874 007e 0848     		ldr	r0, .L68+8
 875 0080 FFF7FEFF 		bl	_Error_Handler
 876              	.LVL48:
 877              	.L66:
 459:Src/main.c    ****   }
 878              		.loc 1 459 0
 879 0084 40F2CB11 		movw	r1, #459
 880 0088 0548     		ldr	r0, .L68+8
 881 008a FFF7FEFF 		bl	_Error_Handler
 882              	.LVL49:
 883              	.L67:
 468:Src/main.c    ****   }
 884              		.loc 1 468 0
 885 008e 4FF4EA71 		mov	r1, #468
 886 0092 0348     		ldr	r0, .L68+8
 887 0094 FFF7FEFF 		bl	_Error_Handler
 888              	.LVL50:
 889              	.L69:
 890              		.align	2
 891              	.L68:
 892 0098 00000000 		.word	htim5
 893 009c 000C0040 		.word	1073744896
 894 00a0 00000000 		.word	.LC2
 895              		.cfi_endproc
 896              	.LFE137:
 898              		.section	.text.MX_TIM12_Init,"ax",%progbits
 899              		.align	1
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	MX_TIM12_Init:
 906              	.LFB138:
 477:Src/main.c    **** 
 907              		.loc 1 477 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 32
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911 0000 00B5     		push	{lr}
 912              	.LCFI25:
 913              		.cfi_def_cfa_offset 4
 914              		.cfi_offset 14, -4
 915 0002 89B0     		sub	sp, sp, #36
 916              	.LCFI26:
 917              		.cfi_def_cfa_offset 40
 481:Src/main.c    ****   htim12.Init.Prescaler = 0;
 918              		.loc 1 481 0
 919 0004 1948     		ldr	r0, .L78
 920 0006 1A4B     		ldr	r3, .L78+4
 921 0008 0360     		str	r3, [r0]
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 31


 482:Src/main.c    ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 922              		.loc 1 482 0
 923 000a 0023     		movs	r3, #0
 924 000c 4360     		str	r3, [r0, #4]
 483:Src/main.c    ****   htim12.Init.Period = 0;
 925              		.loc 1 483 0
 926 000e 8360     		str	r3, [r0, #8]
 484:Src/main.c    ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 927              		.loc 1 484 0
 928 0010 C360     		str	r3, [r0, #12]
 485:Src/main.c    ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 929              		.loc 1 485 0
 930 0012 0361     		str	r3, [r0, #16]
 486:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 931              		.loc 1 486 0
 932 0014 8361     		str	r3, [r0, #24]
 487:Src/main.c    ****   {
 933              		.loc 1 487 0
 934 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 935              	.LVL51:
 936 001a B8B9     		cbnz	r0, .L75
 492:Src/main.c    ****   sConfigOC.Pulse = 0;
 937              		.loc 1 492 0
 938 001c 6023     		movs	r3, #96
 939 001e 0193     		str	r3, [sp, #4]
 493:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 940              		.loc 1 493 0
 941 0020 0022     		movs	r2, #0
 942 0022 0292     		str	r2, [sp, #8]
 494:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 943              		.loc 1 494 0
 944 0024 0392     		str	r2, [sp, #12]
 495:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 945              		.loc 1 495 0
 946 0026 0592     		str	r2, [sp, #20]
 496:Src/main.c    ****   {
 947              		.loc 1 496 0
 948 0028 01A9     		add	r1, sp, #4
 949 002a 1048     		ldr	r0, .L78
 950 002c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 951              	.LVL52:
 952 0030 88B9     		cbnz	r0, .L76
 501:Src/main.c    ****   {
 953              		.loc 1 501 0
 954 0032 0422     		movs	r2, #4
 955 0034 0DEB0201 		add	r1, sp, r2
 956 0038 0C48     		ldr	r0, .L78
 957 003a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 958              	.LVL53:
 959 003e 78B9     		cbnz	r0, .L77
 506:Src/main.c    **** 
 960              		.loc 1 506 0
 961 0040 0A48     		ldr	r0, .L78
 962 0042 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 963              	.LVL54:
 508:Src/main.c    **** 
 964              		.loc 1 508 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 32


 965 0046 09B0     		add	sp, sp, #36
 966              	.LCFI27:
 967              		.cfi_remember_state
 968              		.cfi_def_cfa_offset 4
 969              		@ sp needed
 970 0048 5DF804FB 		ldr	pc, [sp], #4
 971              	.L75:
 972              	.LCFI28:
 973              		.cfi_restore_state
 489:Src/main.c    ****   }
 974              		.loc 1 489 0
 975 004c 40F2E911 		movw	r1, #489
 976 0050 0848     		ldr	r0, .L78+8
 977 0052 FFF7FEFF 		bl	_Error_Handler
 978              	.LVL55:
 979              	.L76:
 498:Src/main.c    ****   }
 980              		.loc 1 498 0
 981 0056 4FF4F971 		mov	r1, #498
 982 005a 0648     		ldr	r0, .L78+8
 983 005c FFF7FEFF 		bl	_Error_Handler
 984              	.LVL56:
 985              	.L77:
 503:Src/main.c    ****   }
 986              		.loc 1 503 0
 987 0060 40F2F711 		movw	r1, #503
 988 0064 0348     		ldr	r0, .L78+8
 989 0066 FFF7FEFF 		bl	_Error_Handler
 990              	.LVL57:
 991              	.L79:
 992 006a 00BF     		.align	2
 993              	.L78:
 994 006c 00000000 		.word	htim12
 995 0070 00180040 		.word	1073747968
 996 0074 00000000 		.word	.LC2
 997              		.cfi_endproc
 998              	.LFE138:
 1000              		.section	.text.MX_TIM19_Init,"ax",%progbits
 1001              		.align	1
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu fpv4-sp-d16
 1007              	MX_TIM19_Init:
 1008              	.LFB139:
 512:Src/main.c    **** 
 1009              		.loc 1 512 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 48
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013 0000 00B5     		push	{lr}
 1014              	.LCFI29:
 1015              		.cfi_def_cfa_offset 4
 1016              		.cfi_offset 14, -4
 1017 0002 8DB0     		sub	sp, sp, #52
 1018              	.LCFI30:
 1019              		.cfi_def_cfa_offset 56
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 33


 517:Src/main.c    ****   htim19.Init.Prescaler = 0;
 1020              		.loc 1 517 0
 1021 0004 1548     		ldr	r0, .L86
 1022 0006 164B     		ldr	r3, .L86+4
 1023 0008 0360     		str	r3, [r0]
 518:Src/main.c    ****   htim19.Init.CounterMode = TIM_COUNTERMODE_UP;
 1024              		.loc 1 518 0
 1025 000a 0023     		movs	r3, #0
 1026 000c 4360     		str	r3, [r0, #4]
 519:Src/main.c    ****   htim19.Init.Period = 0;
 1027              		.loc 1 519 0
 1028 000e 8360     		str	r3, [r0, #8]
 520:Src/main.c    ****   htim19.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1029              		.loc 1 520 0
 1030 0010 C360     		str	r3, [r0, #12]
 521:Src/main.c    ****   htim19.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1031              		.loc 1 521 0
 1032 0012 0361     		str	r3, [r0, #16]
 522:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 1033              		.loc 1 522 0
 1034 0014 8361     		str	r3, [r0, #24]
 523:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 1035              		.loc 1 523 0
 1036 0016 0122     		movs	r2, #1
 1037 0018 0392     		str	r2, [sp, #12]
 524:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 1038              		.loc 1 524 0
 1039 001a 0493     		str	r3, [sp, #16]
 525:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 1040              		.loc 1 525 0
 1041 001c 0592     		str	r2, [sp, #20]
 526:Src/main.c    ****   sConfig.IC1Filter = 0;
 1042              		.loc 1 526 0
 1043 001e 0693     		str	r3, [sp, #24]
 527:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 1044              		.loc 1 527 0
 1045 0020 0793     		str	r3, [sp, #28]
 528:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 1046              		.loc 1 528 0
 1047 0022 0893     		str	r3, [sp, #32]
 529:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 1048              		.loc 1 529 0
 1049 0024 0992     		str	r2, [sp, #36]
 530:Src/main.c    ****   sConfig.IC2Filter = 0;
 1050              		.loc 1 530 0
 1051 0026 0A93     		str	r3, [sp, #40]
 531:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim19, &sConfig) != HAL_OK)
 1052              		.loc 1 531 0
 1053 0028 0B93     		str	r3, [sp, #44]
 532:Src/main.c    ****   {
 1054              		.loc 1 532 0
 1055 002a 03A9     		add	r1, sp, #12
 1056 002c FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 1057              	.LVL58:
 1058 0030 50B9     		cbnz	r0, .L84
 537:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1059              		.loc 1 537 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 34


 1060 0032 0023     		movs	r3, #0
 1061 0034 0193     		str	r3, [sp, #4]
 538:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim19, &sMasterConfig) != HAL_OK)
 1062              		.loc 1 538 0
 1063 0036 0293     		str	r3, [sp, #8]
 539:Src/main.c    ****   {
 1064              		.loc 1 539 0
 1065 0038 01A9     		add	r1, sp, #4
 1066 003a 0848     		ldr	r0, .L86
 1067 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1068              	.LVL59:
 1069 0040 38B9     		cbnz	r0, .L85
 544:Src/main.c    **** 
 1070              		.loc 1 544 0
 1071 0042 0DB0     		add	sp, sp, #52
 1072              	.LCFI31:
 1073              		.cfi_remember_state
 1074              		.cfi_def_cfa_offset 4
 1075              		@ sp needed
 1076 0044 5DF804FB 		ldr	pc, [sp], #4
 1077              	.L84:
 1078              	.LCFI32:
 1079              		.cfi_restore_state
 534:Src/main.c    ****   }
 1080              		.loc 1 534 0
 1081 0048 40F21621 		movw	r1, #534
 1082 004c 0548     		ldr	r0, .L86+8
 1083 004e FFF7FEFF 		bl	_Error_Handler
 1084              	.LVL60:
 1085              	.L85:
 541:Src/main.c    ****   }
 1086              		.loc 1 541 0
 1087 0052 40F21D21 		movw	r1, #541
 1088 0056 0348     		ldr	r0, .L86+8
 1089 0058 FFF7FEFF 		bl	_Error_Handler
 1090              	.LVL61:
 1091              	.L87:
 1092              		.align	2
 1093              	.L86:
 1094 005c 00000000 		.word	htim19
 1095 0060 005C0140 		.word	1073830912
 1096 0064 00000000 		.word	.LC2
 1097              		.cfi_endproc
 1098              	.LFE139:
 1100              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1101              		.align	1
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1105              		.fpu fpv4-sp-d16
 1107              	MX_USART1_UART_Init:
 1108              	.LFB140:
 548:Src/main.c    **** 
 1109              		.loc 1 548 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 35


 1113 0000 08B5     		push	{r3, lr}
 1114              	.LCFI33:
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 3, -8
 1117              		.cfi_offset 14, -4
 550:Src/main.c    ****   huart1.Init.BaudRate = 119200;
 1118              		.loc 1 550 0
 1119 0002 0C48     		ldr	r0, .L92
 1120 0004 0C4B     		ldr	r3, .L92+4
 1121 0006 0360     		str	r3, [r0]
 551:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1122              		.loc 1 551 0
 1123 0008 0C4B     		ldr	r3, .L92+8
 1124 000a 4360     		str	r3, [r0, #4]
 552:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1125              		.loc 1 552 0
 1126 000c 0023     		movs	r3, #0
 1127 000e 8360     		str	r3, [r0, #8]
 553:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 1128              		.loc 1 553 0
 1129 0010 C360     		str	r3, [r0, #12]
 554:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1130              		.loc 1 554 0
 1131 0012 0361     		str	r3, [r0, #16]
 555:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1132              		.loc 1 555 0
 1133 0014 0C22     		movs	r2, #12
 1134 0016 4261     		str	r2, [r0, #20]
 556:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1135              		.loc 1 556 0
 1136 0018 8361     		str	r3, [r0, #24]
 557:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1137              		.loc 1 557 0
 1138 001a C361     		str	r3, [r0, #28]
 558:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1139              		.loc 1 558 0
 1140 001c 0362     		str	r3, [r0, #32]
 559:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1141              		.loc 1 559 0
 1142 001e 4362     		str	r3, [r0, #36]
 560:Src/main.c    ****   {
 1143              		.loc 1 560 0
 1144 0020 FFF7FEFF 		bl	HAL_UART_Init
 1145              	.LVL62:
 1146 0024 00B9     		cbnz	r0, .L91
 565:Src/main.c    **** 
 1147              		.loc 1 565 0
 1148 0026 08BD     		pop	{r3, pc}
 1149              	.L91:
 562:Src/main.c    ****   }
 1150              		.loc 1 562 0
 1151 0028 40F23221 		movw	r1, #562
 1152 002c 0448     		ldr	r0, .L92+12
 1153 002e FFF7FEFF 		bl	_Error_Handler
 1154              	.LVL63:
 1155              	.L93:
 1156 0032 00BF     		.align	2
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 36


 1157              	.L92:
 1158 0034 00000000 		.word	huart1
 1159 0038 00380140 		.word	1073821696
 1160 003c A0D10100 		.word	119200
 1161 0040 00000000 		.word	.LC2
 1162              		.cfi_endproc
 1163              	.LFE140:
 1165              		.section	.text.SystemClock_Config,"ax",%progbits
 1166              		.align	1
 1167              		.global	SystemClock_Config
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu fpv4-sp-d16
 1173              	SystemClock_Config:
 1174              	.LFB132:
 197:Src/main.c    **** 
 1175              		.loc 1 197 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 104
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179 0000 00B5     		push	{lr}
 1180              	.LCFI34:
 1181              		.cfi_def_cfa_offset 4
 1182              		.cfi_offset 14, -4
 1183 0002 9BB0     		sub	sp, sp, #108
 1184              	.LCFI35:
 1185              		.cfi_def_cfa_offset 112
 205:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1186              		.loc 1 205 0
 1187 0004 0122     		movs	r2, #1
 1188 0006 1092     		str	r2, [sp, #64]
 206:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1189              		.loc 1 206 0
 1190 0008 4FF48033 		mov	r3, #65536
 1191 000c 1193     		str	r3, [sp, #68]
 207:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1192              		.loc 1 207 0
 1193 000e 0021     		movs	r1, #0
 1194 0010 1291     		str	r1, [sp, #72]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1195              		.loc 1 208 0
 1196 0012 1492     		str	r2, [sp, #80]
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1197              		.loc 1 209 0
 1198 0014 0222     		movs	r2, #2
 1199 0016 1792     		str	r2, [sp, #92]
 210:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 1200              		.loc 1 210 0
 1201 0018 1893     		str	r3, [sp, #96]
 211:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1202              		.loc 1 211 0
 1203 001a 4FF48013 		mov	r3, #1048576
 1204 001e 1993     		str	r3, [sp, #100]
 212:Src/main.c    ****   {
 1205              		.loc 1 212 0
 1206 0020 10A8     		add	r0, sp, #64
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 37


 1207 0022 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1208              	.LVL64:
 1209 0026 88BB     		cbnz	r0, .L99
 219:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1210              		.loc 1 219 0
 1211 0028 0F23     		movs	r3, #15
 1212 002a 0B93     		str	r3, [sp, #44]
 221:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1213              		.loc 1 221 0
 1214 002c 0221     		movs	r1, #2
 1215 002e 0C91     		str	r1, [sp, #48]
 222:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1216              		.loc 1 222 0
 1217 0030 0023     		movs	r3, #0
 1218 0032 0D93     		str	r3, [sp, #52]
 223:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1219              		.loc 1 223 0
 1220 0034 4FF48062 		mov	r2, #1024
 1221 0038 0E92     		str	r2, [sp, #56]
 224:Src/main.c    **** 
 1222              		.loc 1 224 0
 1223 003a 0F93     		str	r3, [sp, #60]
 226:Src/main.c    ****   {
 1224              		.loc 1 226 0
 1225 003c 0BA8     		add	r0, sp, #44
 1226 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1227              	.LVL65:
 1228 0042 38BB     		cbnz	r0, .L100
 231:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 1229              		.loc 1 231 0
 1230 0044 40F60103 		movw	r3, #2049
 1231 0048 0093     		str	r3, [sp]
 232:Src/main.c    ****   PeriphClkInit.SdadcClockSelection = RCC_SDADCSYSCLK_DIV12;
 1232              		.loc 1 232 0
 1233 004a 0023     		movs	r3, #0
 1234 004c 0293     		str	r3, [sp, #8]
 233:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1235              		.loc 1 233 0
 1236 004e 4FF02843 		mov	r3, #-1476395008
 1237 0052 0893     		str	r3, [sp, #32]
 234:Src/main.c    ****   {
 1238              		.loc 1 234 0
 1239 0054 6846     		mov	r0, sp
 1240 0056 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1241              	.LVL66:
 1242 005a F8B9     		cbnz	r0, .L101
 239:Src/main.c    **** 
 1243              		.loc 1 239 0
 1244 005c 4FF40070 		mov	r0, #512
 1245 0060 FFF7FEFF 		bl	HAL_PWREx_EnableSDADC
 1246              	.LVL67:
 243:Src/main.c    **** 
 1247              		.loc 1 243 0
 1248 0064 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1249              	.LVL68:
 1250 0068 0E4B     		ldr	r3, .L102
 1251 006a A3FB0030 		umull	r3, r0, r3, r0
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 38


 1252 006e 8009     		lsrs	r0, r0, #6
 1253 0070 FFF7FEFF 		bl	HAL_SYSTICK_Config
 1254              	.LVL69:
 247:Src/main.c    **** 
 1255              		.loc 1 247 0
 1256 0074 0420     		movs	r0, #4
 1257 0076 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 1258              	.LVL70:
 250:Src/main.c    **** }
 1259              		.loc 1 250 0
 1260 007a 0022     		movs	r2, #0
 1261 007c 0F21     		movs	r1, #15
 1262 007e 4FF0FF30 		mov	r0, #-1
 1263 0082 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1264              	.LVL71:
 251:Src/main.c    **** 
 1265              		.loc 1 251 0
 1266 0086 1BB0     		add	sp, sp, #108
 1267              	.LCFI36:
 1268              		.cfi_remember_state
 1269              		.cfi_def_cfa_offset 4
 1270              		@ sp needed
 1271 0088 5DF804FB 		ldr	pc, [sp], #4
 1272              	.L99:
 1273              	.LCFI37:
 1274              		.cfi_restore_state
 214:Src/main.c    ****   }
 1275              		.loc 1 214 0
 1276 008c D621     		movs	r1, #214
 1277 008e 0648     		ldr	r0, .L102+4
 1278 0090 FFF7FEFF 		bl	_Error_Handler
 1279              	.LVL72:
 1280              	.L100:
 228:Src/main.c    ****   }
 1281              		.loc 1 228 0
 1282 0094 E421     		movs	r1, #228
 1283 0096 0448     		ldr	r0, .L102+4
 1284 0098 FFF7FEFF 		bl	_Error_Handler
 1285              	.LVL73:
 1286              	.L101:
 236:Src/main.c    ****   }
 1287              		.loc 1 236 0
 1288 009c EC21     		movs	r1, #236
 1289 009e 0248     		ldr	r0, .L102+4
 1290 00a0 FFF7FEFF 		bl	_Error_Handler
 1291              	.LVL74:
 1292              	.L103:
 1293              		.align	2
 1294              	.L102:
 1295 00a4 D34D6210 		.word	274877907
 1296 00a8 00000000 		.word	.LC2
 1297              		.cfi_endproc
 1298              	.LFE132:
 1300              		.section	.text.main,"ax",%progbits
 1301              		.align	1
 1302              		.global	main
 1303              		.syntax unified
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 39


 1304              		.thumb
 1305              		.thumb_func
 1306              		.fpu fpv4-sp-d16
 1308              	main:
 1309              	.LFB131:
 112:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1310              		.loc 1 112 0
 1311              		.cfi_startproc
 1312              		@ Volatile: function does not return.
 1313              		@ args = 0, pretend = 0, frame = 32
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
 1315 0000 00B5     		push	{lr}
 1316              	.LCFI38:
 1317              		.cfi_def_cfa_offset 4
 1318              		.cfi_offset 14, -4
 1319 0002 89B0     		sub	sp, sp, #36
 1320              	.LCFI39:
 1321              		.cfi_def_cfa_offset 40
 120:Src/main.c    **** 
 1322              		.loc 1 120 0
 1323 0004 FFF7FEFF 		bl	HAL_Init
 1324              	.LVL75:
 127:Src/main.c    **** 
 1325              		.loc 1 127 0
 1326 0008 FFF7FEFF 		bl	SystemClock_Config
 1327              	.LVL76:
 134:Src/main.c    ****   MX_SDADC1_Init();
 1328              		.loc 1 134 0
 1329 000c FFF7FEFF 		bl	MX_GPIO_Init
 1330              	.LVL77:
 135:Src/main.c    ****   MX_TIM2_Init();
 1331              		.loc 1 135 0
 1332 0010 FFF7FEFF 		bl	MX_SDADC1_Init
 1333              	.LVL78:
 136:Src/main.c    ****   MX_TIM3_Init();
 1334              		.loc 1 136 0
 1335 0014 FFF7FEFF 		bl	MX_TIM2_Init
 1336              	.LVL79:
 137:Src/main.c    ****   MX_TIM4_Init();
 1337              		.loc 1 137 0
 1338 0018 FFF7FEFF 		bl	MX_TIM3_Init
 1339              	.LVL80:
 138:Src/main.c    ****   MX_TIM5_Init();
 1340              		.loc 1 138 0
 1341 001c FFF7FEFF 		bl	MX_TIM4_Init
 1342              	.LVL81:
 139:Src/main.c    ****   MX_TIM12_Init();
 1343              		.loc 1 139 0
 1344 0020 FFF7FEFF 		bl	MX_TIM5_Init
 1345              	.LVL82:
 140:Src/main.c    ****   MX_TIM19_Init();
 1346              		.loc 1 140 0
 1347 0024 FFF7FEFF 		bl	MX_TIM12_Init
 1348              	.LVL83:
 141:Src/main.c    ****   MX_USART1_UART_Init();
 1349              		.loc 1 141 0
 1350 0028 FFF7FEFF 		bl	MX_TIM19_Init
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 40


 1351              	.LVL84:
 142:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1352              		.loc 1 142 0
 1353 002c FFF7FEFF 		bl	MX_USART1_UART_Init
 1354              	.LVL85:
 161:Src/main.c    ****   blinkTaskHandle = osThreadCreate(osThread(blinkTask), NULL);
 1355              		.loc 1 161 0
 1356 0030 01AC     		add	r4, sp, #4
 1357 0032 084D     		ldr	r5, .L107
 1358 0034 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1359 0036 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1360 0038 95E80700 		ldm	r5, {r0, r1, r2}
 1361 003c 84E80700 		stm	r4, {r0, r1, r2}
 162:Src/main.c    **** 
 1362              		.loc 1 162 0
 1363 0040 0021     		movs	r1, #0
 1364 0042 01A8     		add	r0, sp, #4
 1365 0044 FFF7FEFF 		bl	osThreadCreate
 1366              	.LVL86:
 1367 0048 034B     		ldr	r3, .L107+4
 1368 004a 1860     		str	r0, [r3]
 174:Src/main.c    ****   
 1369              		.loc 1 174 0
 1370 004c FFF7FEFF 		bl	osKernelStart
 1371              	.LVL87:
 1372              	.L105:
 1373 0050 FEE7     		b	.L105
 1374              	.L108:
 1375 0052 00BF     		.align	2
 1376              	.L107:
 1377 0054 00000000 		.word	.LANCHOR0
 1378 0058 00000000 		.word	blinkTaskHandle
 1379              		.cfi_endproc
 1380              	.LFE131:
 1382              		.comm	blinkTaskControlBlock,84,4
 1383              		.comm	blinkTaskBuffer,512,4
 1384              		.comm	blinkTaskHandle,4,4
 1385              		.comm	huart1,112,4
 1386              		.comm	htim19,64,4
 1387              		.comm	htim12,64,4
 1388              		.comm	htim5,64,4
 1389              		.comm	htim4,64,4
 1390              		.comm	htim3,64,4
 1391              		.comm	htim2,64,4
 1392              		.comm	hsdadc1,68,4
 1393              		.section	.rodata
 1394              		.align	2
 1395              		.set	.LANCHOR0,. + 0
 1396              	.LC3:
 1397 0000 00000000 		.word	.LC0
 1398 0004 00000000 		.word	BlinkFunction
 1399 0008 0000     		.short	0
 1400 000a 0000     		.space	2
 1401 000c 00000000 		.word	0
 1402 0010 80000000 		.word	128
 1403 0014 00000000 		.word	blinkTaskBuffer
 1404 0018 00000000 		.word	blinkTaskControlBlock
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 41


 1405              		.section	.rodata.MX_SDADC1_Init.str1.4,"aMS",%progbits,1
 1406              		.align	2
 1407              	.LC2:
 1408 0000 5372632F 		.ascii	"Src/main.c\000"
 1408      6D61696E 
 1408      2E6300
 1409              		.section	.rodata.str1.4,"aMS",%progbits,1
 1410              		.align	2
 1411              	.LC0:
 1412 0000 626C696E 		.ascii	"blinkTask\000"
 1412      6B546173 
 1412      6B00
 1413              		.text
 1414              	.Letext0:
 1415              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1416              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1417              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1418              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1419              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f373xc.h"
 1420              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1421              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 1422              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 1423              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 1424              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1425              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1426              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1427              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1428              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1429              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_sdadc.h"
 1430              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1431              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 1432              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1433              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1434              		.file 21 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1435              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1436              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1437              		.file 24 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1438              		.file 25 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pwr_ex.h"
 1439              		.file 26 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:198    .text.MX_GPIO_Init:00000104 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:206    .text.BlinkFunction:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:213    .text.BlinkFunction:00000000 BlinkFunction
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:241    .text.BlinkFunction:00000014 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:246    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:253    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:284    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:289    .text._Error_Handler:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:296    .text._Error_Handler:00000000 _Error_Handler
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:311    .text.MX_SDADC1_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:317    .text.MX_SDADC1_Init:00000000 MX_SDADC1_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:401    .text.MX_SDADC1_Init:00000064 $d
                            *COM*:00000044 hsdadc1
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:408    .text.MX_TIM2_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:414    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:501    .text.MX_TIM2_Init:00000060 $d
                            *COM*:00000040 htim2
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:507    .text.MX_TIM3_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:513    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:600    .text.MX_TIM3_Init:0000005c $d
                            *COM*:00000040 htim3
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:607    .text.MX_TIM4_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:613    .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:753    .text.MX_TIM4_Init:000000b0 $d
                            *COM*:00000040 htim4
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:760    .text.MX_TIM5_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:766    .text.MX_TIM5_Init:00000000 MX_TIM5_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:892    .text.MX_TIM5_Init:00000098 $d
                            *COM*:00000040 htim5
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:899    .text.MX_TIM12_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:905    .text.MX_TIM12_Init:00000000 MX_TIM12_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:994    .text.MX_TIM12_Init:0000006c $d
                            *COM*:00000040 htim12
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1001   .text.MX_TIM19_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1007   .text.MX_TIM19_Init:00000000 MX_TIM19_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1094   .text.MX_TIM19_Init:0000005c $d
                            *COM*:00000040 htim19
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1101   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1107   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1158   .text.MX_USART1_UART_Init:00000034 $d
                            *COM*:00000070 huart1
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1166   .text.SystemClock_Config:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1173   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1295   .text.SystemClock_Config:000000a4 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1301   .text.main:00000000 $t
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1308   .text.main:00000000 main
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1377   .text.main:00000054 $d
                            *COM*:00000004 blinkTaskHandle
                            *COM*:00000054 blinkTaskControlBlock
                            *COM*:00000200 blinkTaskBuffer
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1394   .rodata:00000000 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1406   .rodata.MX_SDADC1_Init.str1.4:00000000 $d
C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s:1410   .rodata.str1.4:00000000 $d
ARM GAS  C:\Users\ALEX'S~1\AppData\Local\Temp\ccOeCRyw.s 			page 43



UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
osDelay
HAL_IncTick
HAL_SDADC_Init
HAL_SDADC_SelectRegularTrigger
HAL_SDADC_PrepareChannelConfig
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_EnableSDADC
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
osThreadCreate
osKernelStart
